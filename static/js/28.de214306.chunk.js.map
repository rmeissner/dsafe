{"version":3,"sources":["../node_modules/@babel/runtime/helpers/arrayLikeToArray.js","../node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js","../node_modules/eth-ens-namehash/index.js","../node_modules/varint/encode.js","../node_modules/varint/decode.js","../node_modules/varint/length.js","../node_modules/multihashes/src/index.js","../node_modules/@ensdomains/ensjs/dist/utils/labelhash.js","../node_modules/@ensdomains/ensjs/dist/utils/contents.js","../node_modules/multicodec/src/util.js","../node_modules/cids/src/index.js","../node_modules/cids/node_modules/multicodec/src/util.js","../node_modules/@babel/runtime/helpers/slicedToArray.js","../node_modules/@babel/runtime/helpers/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/nonIterableRest.js","../../node_modules/bech32/index.js","../../node_modules/big-integer/BigInteger.js","../../node_modules/blakejs/util.js","../../node_modules/blakejs/blake2b.js","../../node_modules/blakejs/blake2s.js","../../node_modules/base64-js/index.js","../../node_modules/blakejs/index.js","../../node_modules/ieee754/index.js","../../node_modules/buffer/index.js","../../node_modules/safe-buffer/index.js","../../node_modules/base-x/src/index.js","../../node_modules/bs58/index.js","../../node_modules/sha3/node_modules/buffer/index.js","../../node_modules/sha3/sponge/permute/copy/index.js","../../node_modules/sha3/sponge/permute/chi/index.js","../../node_modules/sha3/sponge/permute/iota/round-constants/index.js","../../node_modules/sha3/sponge/permute/iota/index.js","../../node_modules/sha3/sponge/permute/rho-pi/pi-shuffles/index.js","../../node_modules/sha3/sponge/permute/rho-pi/rho-offsets/index.js","../../node_modules/sha3/sponge/permute/rho-pi/index.js","../../node_modules/sha3/sponge/permute/theta/index.js","../../node_modules/sha3/sponge/permute/index.js","../../node_modules/sha3/sponge/index.js","../../node_modules/sha3/index.js","../../node_modules/ripemd160-min/dist-esm/index.js","../../node_modules/crypto-addr-codec/dist/index.js","../../node_modules/nano-base32/index.js","../../src/leb128/unsigned.ts","../../src/filecoin/address.ts","../../src/filecoin/index.ts","../../src/index.ts","../node_modules/@ensdomains/ensjs/dist/utils/index.js","../node_modules/eth-ens-namehash/node_modules/js-sha3/src/sha3.js","../node_modules/idna-uts46-hx/uts46.js","../node_modules/idna-uts46-hx/idna-map.js","../node_modules/content-hash/src/index.js","../node_modules/multicodec/src/index.js","../node_modules/multicodec/src/int-table.js","../node_modules/multicodec/src/varint-table.js","../node_modules/multicodec/src/constants.js","../node_modules/multicodec/src/print.js","../node_modules/content-hash/src/profiles.js","../node_modules/multibase/src/index.js","../node_modules/multibase/src/constants.js","../node_modules/multibase/src/base.js","../node_modules/multibase/src/base16.js","../node_modules/multibase/src/base32.js","../node_modules/multibase/src/base64.js","../node_modules/multihashes/src/constants.js","../node_modules/cids/node_modules/multibase/src/index.js","../node_modules/cids/node_modules/multibase/src/constants.js","../node_modules/cids/node_modules/multibase/src/base.js","../node_modules/cids/node_modules/multibase/src/base16.js","../node_modules/cids/node_modules/multibase/src/base32.js","../node_modules/cids/node_modules/multibase/src/base64.js","../node_modules/cids/node_modules/multicodec/src/index.js","../node_modules/cids/node_modules/multicodec/src/int-table.js","../node_modules/cids/node_modules/multicodec/src/varint-table.js","../node_modules/cids/node_modules/multicodec/src/constants.js","../node_modules/cids/node_modules/multicodec/src/print.js","../node_modules/cids/src/cid-util.js","../node_modules/class-is/index.js","../node_modules/content-hash/src/helpers.js","../node_modules/@ensdomains/ensjs/dist/utils/namehash.js","../node_modules/@ensdomains/ensjs/dist/index.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/slicedToArray.js","../node_modules/@babel/runtime/helpers/classCallCheck.js","../node_modules/@babel/runtime/helpers/createClass.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/nonIterableRest.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/defineProperty.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/construct.js","../node_modules/@babel/runtime/regenerator/index.js","../node_modules/@babel/runtime/helpers/asyncToGenerator.js","../node_modules/varint/index.js","../node_modules/node-libs-browser/node_modules/punycode/punycode.js"],"names":["module","exports","arr","len","length","i","arr2","Array","__esModule","arrayLikeToArray","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","from","test","sha3","require","keccak_256","uts46","normalize","toUnicode","useStd3ASCII","transitional","hash","inputName","node","labels","split","labelSha","Buffer","encode","num","out","offset","oldOffset","INT","bytes","Math","pow","read","buf","b","res","shift","counter","l","RangeError","N1","N2","N3","N4","N5","N6","N7","N8","N9","value","multibase","varint","cs","validate","multihash","decode","names","codes","defaultLengths","toHexString","isBuffer","Error","fromHexString","toB58String","fromB58String","encoded","code","isValidCode","digest","undefined","hashfn","coerceCode","concat","isAppCode","prefix","defineProperty","encodeLabelhash","startsWith","decodeLabelhash","isEncodedLabelhash","isDecrypted","reduce","acc","label","labelhash","unnormalisedLabelOrLabelhash","_ethEnsNamehash","endsWith","_interopRequireDefault","decodeContenthash","decoded","protocolType","error","_contentHash","codec","getCodec","_bs","e","message","validateContent","isHashOfType","Types","ipfs","swarm","isValidContenthash","utils","isHexString","supportedCodecs","includes","console","log","encodeContenthash","text","content","contentType","matched","match","bs58content","fromSwarm","warn","err","_ethers","ethers","bufferToNumber","parseInt","numberToBuffer","hexString","varintBufferEncode","input","varintBufferDecode","varintEncode","mh","multicodec","codecs","CIDUtil","withIs","CID","version","multibaseName","_CID","isCID","cid","this","baseName","isEncoded","rmPrefix","validateCID","firstByte","v","buffer","_buffer","getCodeVarint","base","string","str","toBaseEncodedString","other","equals","errorMsg","checkCIDComponents","Symbol","for","className","symbolName","arrayWithHoles","iterableToArrayLimit","unsupportedIterableToArray","nonIterableRest","isArray","_i","iterator","_s","_e","_arr","_n","_d","next","done","push","TypeError","ALPHABET","ALPHABET_MAP","z","x","charAt","polymodStep","pre","prefixChk","chk","c","charCodeAt","convert","data","inBits","outBits","pad","bits","maxV","result","LIMIT","lowered","toLowerCase","uppered","toUpperCase","lastIndexOf","wordChars","words","bigInt","BASE","MAX_INT","MAX_INT_ARR","smallToArray","LOG_MAX_INT","Integer","radix","parseValue","parseBase","BigInteger","sign","isSmall","SmallInteger","isPrecise","floor","arrayToSmall","trim","compareAbs","createArray","truncate","ceil","add","a","sum","l_a","l_b","r","carry","addAny","addSmall","subtract","difference","a_l","b_l","borrow","subtractSmall","multiplyLong","product","a_i","j","multiplySmall","shiftLeft","multiplySmallAndArray","square","divModSmall","lambda","q","remainder","divisor","quotient","divModAny","self","negate","abs","comparison","quotientDigit","divisorMostSignificantDigit","guess","xlen","highx","check","part","unshift","reverse","qSign","mod","mSign","isBasicPrime","isUnit","isEven","isDivisibleBy","lesser","millerRabinTest","d","nPrev","prev","divide","modPow","create","plus","minus","small","multiply","l1","l2","multiplyKaratsuba","y","max","ac","bd","abcd","times","_multiplyBySmall","divmod","over","exp","isZero","isPositive","isOdd","compareTo","compare","Infinity","eq","neq","notEquals","gt","greater","lt","geq","greaterOrEquals","leq","lesserOrEquals","isNegative","isPrime","strict","bitLength","logN","t","isProbablePrime","iterations","randBetween","modInv","lastT","lastR","zero","newT","one","newR","powersOfTwo","powers2Length","highestPower2","shift_isSmall","bitwise","fn","xSign","ySign","xRem","not","yRem","xDigit","yDigit","xDivMod","yDivMod","toJSNumber","roughLOB","min","gcd","String","shiftRight","remQuo","and","or","xor","integerLogarithm","tmp","p","absBase","isNaN","digits","charCode","start","parseBaseFromArray","val","stringify","digit","toBase","apply","map","valueOf","neg","Number","left","toBaseString","join","parseStringValue","decimalPlace","indexOf","toArray","toJSON","minusOne","lcm","isInstance","low","range","random","restricted","top","fromArray","hasOwnProperty","ret","Uint8Array","ADD64AA","o0","o1","ADD64AC","b0","b1","B2B_GET32","B2B_G","ix","iy","x0","m","x1","y0","y1","xor0","xor1","BLAKE2B_IV32","Uint32Array","SIGMA82","blake2bCompress","ctx","last","h","blake2bInit","outlen","key","blake2bUpdate","blake2bFinal","blake2b","util","blake2bHex","output","B2S_GET32","B2S_G","ROTR32","BLAKE2S_IV","SIGMA","blake2sCompress","blake2sInit","keylen","blake2sUpdate","blake2sFinal","blake2s","blake2sHex","b2b","b2s","lookup","revLookup","Arr","encodeChunk","uint8","end","b64","lens","validLen","placeHoldersLen","curByte","extraBytes","parts","len2","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","s","NaN","rt","LN2","customInspectSymbol","createBuffer","setPrototypeOf","arg","encodingOrOffset","allocUnsafe","encoding","isEncoding","byteLength","actual","write","ArrayBuffer","isView","fromArrayLike","fromArrayBuffer","SharedArrayBuffer","obj","checked","copy","numberIsNaN","type","toPrimitive","assertSize","size","array","byteOffset","mustMatch","arguments","loweredCase","utf8ToBytes","base64ToBytes","slowToString","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","bidirectionalIndexOf","dir","arrayIndexOf","indexSize","arrLength","valLength","readUInt16BE","foundIndex","found","hexWrite","remaining","strLen","parsed","substr","utf8Write","blitBuffer","asciiWrite","byteArray","latin1Write","base64Write","ucs2Write","units","hi","base64","secondByte","thirdByte","fourthByte","tempCodePoint","codePoint","bytesPerSequence","codePoints","fromCharCode","hexSliceLookupTable","checkOffset","ext","checkInt","checkIEEE754","writeFloat","littleEndian","noAssert","ieee754","writeDouble","alloc","TYPED_ARRAY_SUPPORT","proto","foo","enumerable","get","species","configurable","writable","poolSize","fill","allocUnsafeSlow","_isBuffer","list","pos","swap16","swap32","swap64","toLocaleString","inspect","INSPECT_MAX_BYTES","replace","target","thisStart","thisEnd","thisCopy","targetCopy","isFinite","newBuf","subarray","readUIntLE","mul","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","writeUIntBE","writeUInt8","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","copyWithin","set","INVALID_BASE64_RE","leadSurrogate","src","dst","table","i16","copyProps","SafeBuffer","SlowBuffer","_Buffer","require$$0","BASE_MAP","xc","LEADER","FACTOR","iFACTOR","decodeUnsafe","source","psz","zeroes","b256","it3","it4","vch","pbegin","pend","b58","it1","it2","repeat","basex","I","O","oi","ii","_copy","default","_ref","A","C","_x","xy","x2","ROUND_CONSTANTS","_roundConstants","roundIndex","_piShuffles","_rhoOffsets","require$$1","require$$2","W","H","L","Wi","ri","D","x20","x21","x22","x23","x24","_chi","_iota","_rhoPi","_theta","require$$3","_permute","xorWords","readWords","_this","capacity","padding","keccak","blockSize","queueSize","queueOffset","state","stateSize","queue","absorb","squeeze","options","reset","_sponge","createHash","allowedSizes","Hash","sponge","update","formatOrOptions","format","Keccak","SHA3","SHAKE","SHA3Hash","ARRAY16","zl","initU8Array","zr","sl","sr","hl","initU32Array","hr","rotl","fn1","k","fn2","fn3","fn4","fn5","createU8Array","RIPEMD160","[object Object]","_block","_blockSize","_blockOffset","_length","_finalized","_a","_b","_c","block","_update","al","bl","cl","dl","el","ar","br","cr","dr","er","tl","tr","require$$4","f","require$$5","u","require$$6","_finalSize","_len","_hash","init","_w","g","w","_","super_","_f","_g","_h","E","sha256","alphabet","encodeChecked","encodeRaw","forEach","decodeChecked","decodeRaw","verifyCheckSum","B","S","U","P","curve","_zInv","compressed","zInv","fromAffine","isInfinity","twice","infinity","multiplyTwo","getEncoded","affineX","affineY","pLength","decodeFrom","pointFromX","R","G","pOverFour","isOnCurve","M","Gx","Gy","F","T","N","fromString","fromBuffer","Q","toBuffer","toHex","isValid","fromStringOrThrow","RegExp","substring","fromHex","fromStringHex","X","K","Y","V","ed25519PublicKey","ed25519SecretSeed","preAuthTx","sha256Hash","Z","J","getPrototypeOf","__proto__","$","Reflect","construct","sham","Proxy","Date","tt","Function","bind","Map","has","et","nt","it","_type","ot","ft","stack","ut","st","lo","ushrn32","at","ht","ct","dt","pt","vt","yt","bs58Encode","bs58Decode","wt","pop","round","readChar","char","idx","view","leftover","Bn","Stream","bytesRead","Address","protocol","payload","getChecksum","ingest","filEncode","network","address","addressString","stream","byt","ior","shln","protocolByte","checksum","bytes2a","hex2a","bytes32encoded","b32encode","filNewAddress","makeBitcoinBase58CheckEncoder","p2pkhVersion","p2shVersion","addr","makeBitcoinBase58CheckDecoder","p2pkhVersions","p2shVersions","checkVersion","every","index","some","bitcoinBase58Chain","coinType","decoder","encoder","makeBitcoinEncoder","hrp","encodeBech32","bech32ToWords","bech32Encode","encodeBase58Check","makeBitcoinDecoder","decodeBech32","bech32Decode","script","bech32FromWords","decodeBase58Check","bitcoinChain","makeChecksummedHexEncoder","chainId","rskToChecksumAddress","makeChecksummedHexDecoder","stripped","rskStripHexPrefix","rskIsValidChecksumAddress","hexChecksumChain","makeBech32Encoder","makeBech32Decoder","currentPrefix","bech32Chain","ksmAddrDecoder","ss58Decode","steemAddressEncoder","bs58EncodeNoCheck","steemAddressDecoder","bs58DecodeNoCheck","algoChecksum","pk","getConfig","formats","isValidXemAddress","b32decode","body","xrpCodec","cashaddrEncode","cashaddrDecode","encodeEd25519PublicKey","decodeEd25519PublicKey","nanoBase32Encode","eosPublicKey","publicKey","expectedChecksum","ss58Encode","raw","bigNum","maskn","toNumber","ishrn","expect","payloadChecksum","addressObj","DataView","components","shard","realm","BigInt","account","setUint32","setBigUint64","getUint32","getBigUint64","formatsByName","assign","formatsByCoinType","getEnsStartBlock","networkId","validateName","isLabelValid","_labelhash","_contents","_namehash","namehash","parseSearchTerm","mergeLabels","checkLabels","emptyAddress","uniq","param","filter","item","mapItem","labelHashes","_key","nameArray","normalizedArray","labels1","labels2","term","validTld","regex","termArray","tld","isAddress","root","window","JS_SHA3_NO_NODE_JS","process","versions","global","COMMON_JS","JS_SHA3_NO_COMMON_JS","HEX_CHARS","SHIFT","RC","BITS","OUTPUT_TYPES","createOutputMethod","outputType","createShakeOutputMethod","outputBits","createMethod","method","algorithms","methods","methodNames","algorithm","methodName","blocks","blockCount","byteCount","outputBlocks","notString","lastByteIndex","finalize","hex","arrayBuffer","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","b2","b3","b4","b5","b6","b7","b8","b9","b10","b11","b12","b13","b14","b15","b16","b17","b18","b19","b20","b21","b22","b23","b24","b25","b26","b27","b28","b29","b30","b31","b32","b33","b34","b35","b36","b37","b38","b39","b40","b41","b42","b43","b44","b45","b46","b47","b48","b49","define","punycode","idna_map","mapLabel","mapped","chars","ucs2","cp","ch","composite","mapChar","flags","kind","mapStr","domain","validateLabel","codePointAt","toAscii","verifyDnsLength","asciiLabels","toASCII","asciiString","factory","blockIdxes","Uint16Array","multiC","hexStringToBuffer","profiles","cidV0ToV1Base32","helpers","contentHash","profile","fromIpfs","ipfsHash","swarmHash","encodedValue","addPrefix","intTable","codecNameToCodeVarint","multicodecStrOrCode","prefixedData","codecName","getName","getNumber","getCode","getVarint","constants","print","baseTable","nameTable","encodingName","freeze","varintTable","entries","tableByCode","multiH","encodes","utf8","decodes","hexMultiHash","b58MultiHash","nameOrCode","getBase","codeBuf","validEncode","isImplemented","bufOrString","keys","Base","baseX","base16","base32","tupple","implementation","engine","stringOrBuffer","url","errNotSupported","Class","symbol","ClassIsWrapper","args","toStringTag","withoutNew","toV1","normalisedLabel","getENSContract","getResolverContract","getEnsAddress","_utils","_slicedToArray2","_regenerator","_classCallCheck2","_createClass2","_asyncToGenerator2","_addressEncoder","_ENS","_Resolver5","_ReverseRegistrar","Provider","providers","provider","Contract","abi","_ref2","getReverseRegistrarContract","_ref3","getAddrWithResolver","_getAddrWithResolver","mark","_callee20","_ref4","resolverAddr","nh","_Resolver2","_formatsByName$key","wrap","_context20","sent","abrupt","t0","stop","setAddrWithResolver","_x2","_setAddrWithResolver","_callee21","_ref5","signer","Resolver","_formatsByName$key2","addressAsBytes","_context21","getContentWithResolver","_x3","_getContentWithResolver","_callee22","_ref6","_Resolver3","contentHashSignature","_decodeContenthash","_context22","solidityKeccak256","supportsInterface","contenthash","t1","t2","setContenthashWithResolver","_x4","_setContenthashWithResolver","_callee23","_ref7","encodedContenthash","_context23","setContenthash","getTextWithResolver","_x5","_getTextWithResolver","_callee24","_ref8","_Resolver4","_context24","setTextWithResolver","_x6","_setTextWithResolver","_callee25","_ref9","recordValue","_context25","setText","_ref10","ens","_name","Name","resolver","ensWithSigner","connect","_getOwner","_callee","_context","owner","_setOwner","_callee2","_context2","setOwner","_x7","_getResolver","_callee3","_context3","_setResolver","_callee4","_context4","setResolver","_x8","_getTTL","_callee5","_context5","ttl","_getResolverAddr","_callee6","_context6","getResolver","_getAddress","_callee7","coinId","_context7","getResolverAddr","_x9","_setAddress","_callee8","_context8","_x10","_x11","_getContent","_callee9","_context9","_setContenthash","_callee10","_context10","_x12","_getText","_callee11","_context11","_x13","_setText","_callee12","_context12","_x14","_x15","_setSubnodeOwner","_callee13","newOwner","lh","_context13","setSubnodeOwner","_x16","_x17","_setSubnodeRecord","_callee14","_args14","_context14","setSubnodeRecord","_x18","_x19","_x20","_createSubdomain","_callee15","resolverPromise","ownerPromise","_ref11","_ref12","_context15","getOwner","Promise","all","_x21","_deleteSubdomain","_callee16","_context16","_x22","ENS","ethersProvider","ensAddress","isProvider","Web3Provider","getSigner","registries","_name2","_getName","_callee17","reverseNode","_context17","getNameWithResolver","_x23","_getNameWithResolver","_callee18","reverseNamehash","_Resolver","_context18","_x24","_x25","_setReverseRecord","_callee19","overrides","reverseRegistrarAddr","reverseRegistrar","_context19","setName","_x26","_x27","instance","Constructor","_defineProperties","props","descriptor","protoProps","staticProps","isNativeReflectConstruct","_construct","Parent","asyncGeneratorStep","gen","resolve","reject","_next","_throw","info","then","encodingLength","nodeType","freeGlobal","maxInt","regexPunycode","regexNonASCII","regexSeparators","errors","stringFromCharCode","mapDomain","ucs2decode","extra","ucs2encode","digitToBasic","flag","adapt","delta","numPoints","firstTime","baseMinusTMin","basic","oldi","baseMinusT","inputLength","bias","splice","handledCPCount","basicLength","currentValue","handledCPCountPlusOne","qMinusT"],"mappings":"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AAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,YAAe,MACf,aAAe,MACf,aAAe,MACf,aAAe,MACf,aAAe,MACf,aAAe,MACf,aAAe,MACf,aAAe,MACf,aAAe,MACf,aAAe,MACf,aAAe,MACf,aAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,aAAc,MACd,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,aAAc,MACd,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,cAAe,MACf,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,KACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,iBAAkB,MAClB,iBAAkB,MAClB,iBAAkB,MAClB,iBAAkB,QAGpB/oC,EAAQsE,MAAQ1D,OAAOmoC,OAAO,CAC5B,EAAK,WAGL,GAAM,OACN,GAAM,WACN,GAAM,WACN,GAAM,eACN,GAAM,WACN,GAAM,WACN,GAAM,WACN,GAAM,WACN,GAAM,YACN,GAAM,YACN,GAAM,aACN,GAAM,aACN,GAAM,aACN,GAAM,aAEN,GAAM,cACN,GAAM,aAEN,IAAM,MACN,IAAM,MAGN,MAAQ,YACR,MAAQ,aACR,MAAQ,aACR,MAAQ,aACR,MAAQ,aACR,MAAQ,aACR,MAAQ,aACR,MAAQ,aACR,MAAQ,aACR,MAAQ,aACR,MAAQ,aACR,MAAQ,aACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,YACR,MAAQ,aACR,MAAQ,aACR,MAAQ,aACR,MAAQ,aACR,MAAQ,aACR,MAAQ,aACR,MAAQ,aACR,MAAQ,aACR,MAAQ,aACR,MAAQ,aACR,MAAQ,aACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cAGR,MAAQ,aACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,aACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,cACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gB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","file":"static/js/28.de214306.chunk.js","sourcesContent":["function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nmodule.exports = _arrayLikeToArray;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\n\nmodule.exports = _unsupportedIterableToArray;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","var sha3 = require('js-sha3').keccak_256\nvar uts46 = require('idna-uts46-hx')\n\nfunction namehash (inputName) {\n  // Reject empty names:\n  var node = ''\n  for (var i = 0; i < 32; i++) {\n    node += '00'\n  }\n\n  name = normalize(inputName)\n\n  if (name) {\n    var labels = name.split('.')\n\n    for(var i = labels.length - 1; i >= 0; i--) {\n      var labelSha = sha3(labels[i])\n      node = sha3(new Buffer(node + labelSha, 'hex'))\n    }\n  }\n\n  return '0x' + node\n}\n\nfunction normalize(name) {\n  return name ? uts46.toUnicode(name, {useStd3ASCII: true, transitional: false}) : name\n}\n\nexports.hash = namehash\nexports.normalize = normalize\n","module.exports = encode\n\nvar MSB = 0x80\n  , REST = 0x7F\n  , MSBALL = ~REST\n  , INT = Math.pow(2, 31)\n\nfunction encode(num, out, offset) {\n  out = out || []\n  offset = offset || 0\n  var oldOffset = offset\n\n  while(num >= INT) {\n    out[offset++] = (num & 0xFF) | MSB\n    num /= 128\n  }\n  while(num & MSBALL) {\n    out[offset++] = (num & 0xFF) | MSB\n    num >>>= 7\n  }\n  out[offset] = num | 0\n  \n  encode.bytes = offset - oldOffset + 1\n  \n  return out\n}\n","module.exports = read\n\nvar MSB = 0x80\n  , REST = 0x7F\n\nfunction read(buf, offset) {\n  var res    = 0\n    , offset = offset || 0\n    , shift  = 0\n    , counter = offset\n    , b\n    , l = buf.length\n\n  do {\n    if (counter >= l) {\n      read.bytes = 0\n      throw new RangeError('Could not decode varint')\n    }\n    b = buf[counter++]\n    res += shift < 28\n      ? (b & REST) << shift\n      : (b & REST) * Math.pow(2, shift)\n    shift += 7\n  } while (b >= MSB)\n\n  read.bytes = counter - offset\n\n  return res\n}\n","\nvar N1 = Math.pow(2,  7)\nvar N2 = Math.pow(2, 14)\nvar N3 = Math.pow(2, 21)\nvar N4 = Math.pow(2, 28)\nvar N5 = Math.pow(2, 35)\nvar N6 = Math.pow(2, 42)\nvar N7 = Math.pow(2, 49)\nvar N8 = Math.pow(2, 56)\nvar N9 = Math.pow(2, 63)\n\nmodule.exports = function (value) {\n  return (\n    value < N1 ? 1\n  : value < N2 ? 2\n  : value < N3 ? 3\n  : value < N4 ? 4\n  : value < N5 ? 5\n  : value < N6 ? 6\n  : value < N7 ? 7\n  : value < N8 ? 8\n  : value < N9 ? 9\n  :              10\n  )\n}\n","/**\n * Multihash implementation in JavaScript.\n *\n * @module multihash\n */\n'use strict'\n\nconst { Buffer } = require('buffer')\nconst multibase = require('multibase')\nconst varint = require('varint')\nconst cs = require('./constants')\n\nexports.names = cs.names\nexports.codes = cs.codes\nexports.defaultLengths = cs.defaultLengths\n\n/**\n * Convert the given multihash to a hex encoded string.\n *\n * @param {Buffer} hash\n * @returns {string}\n */\nexports.toHexString = function toHexString (hash) {\n  if (!Buffer.isBuffer(hash)) {\n    throw new Error('must be passed a buffer')\n  }\n\n  return hash.toString('hex')\n}\n\n/**\n * Convert the given hex encoded string to a multihash.\n *\n * @param {string} hash\n * @returns {Buffer}\n */\nexports.fromHexString = function fromHexString (hash) {\n  return Buffer.from(hash, 'hex')\n}\n\n/**\n * Convert the given multihash to a base58 encoded string.\n *\n * @param {Buffer} hash\n * @returns {string}\n */\nexports.toB58String = function toB58String (hash) {\n  if (!Buffer.isBuffer(hash)) {\n    throw new Error('must be passed a buffer')\n  }\n\n  return multibase.encode('base58btc', hash).toString().slice(1)\n}\n\n/**\n * Convert the given base58 encoded string to a multihash.\n *\n * @param {string|Buffer} hash\n * @returns {Buffer}\n */\nexports.fromB58String = function fromB58String (hash) {\n  let encoded = hash\n  if (Buffer.isBuffer(hash)) {\n    encoded = hash.toString()\n  }\n\n  return multibase.decode('z' + encoded)\n}\n\n/**\n * Decode a hash from the given multihash.\n *\n * @param {Buffer} buf\n * @returns {{code: number, name: string, length: number, digest: Buffer}} result\n */\nexports.decode = function decode (buf) {\n  if (!(Buffer.isBuffer(buf))) {\n    throw new Error('multihash must be a Buffer')\n  }\n\n  if (buf.length < 2) {\n    throw new Error('multihash too short. must be > 2 bytes.')\n  }\n\n  const code = varint.decode(buf)\n  if (!exports.isValidCode(code)) {\n    throw new Error(`multihash unknown function code: 0x${code.toString(16)}`)\n  }\n  buf = buf.slice(varint.decode.bytes)\n\n  const len = varint.decode(buf)\n  if (len < 0) {\n    throw new Error(`multihash invalid length: ${len}`)\n  }\n  buf = buf.slice(varint.decode.bytes)\n\n  if (buf.length !== len) {\n    throw new Error(`multihash length inconsistent: 0x${buf.toString('hex')}`)\n  }\n\n  return {\n    code: code,\n    name: cs.codes[code],\n    length: len,\n    digest: buf\n  }\n}\n\n/**\n *  Encode a hash digest along with the specified function code.\n *\n * > **Note:** the length is derived from the length of the digest itself.\n *\n * @param {Buffer} digest\n * @param {string|number} code\n * @param {number} [length]\n * @returns {Buffer}\n */\nexports.encode = function encode (digest, code, length) {\n  if (!digest || code === undefined) {\n    throw new Error('multihash encode requires at least two args: digest, code')\n  }\n\n  // ensure it's a hashfunction code.\n  const hashfn = exports.coerceCode(code)\n\n  if (!(Buffer.isBuffer(digest))) {\n    throw new Error('digest should be a Buffer')\n  }\n\n  if (length == null) {\n    length = digest.length\n  }\n\n  if (length && digest.length !== length) {\n    throw new Error('digest length should be equal to specified length.')\n  }\n\n  return Buffer.concat([\n    Buffer.from(varint.encode(hashfn)),\n    Buffer.from(varint.encode(length)),\n    digest\n  ])\n}\n\n/**\n * Converts a hash function name into the matching code.\n * If passed a number it will return the number if it's a valid code.\n * @param {string|number} name\n * @returns {number}\n */\nexports.coerceCode = function coerceCode (name) {\n  let code = name\n\n  if (typeof name === 'string') {\n    if (cs.names[name] === undefined) {\n      throw new Error(`Unrecognized hash function named: ${name}`)\n    }\n    code = cs.names[name]\n  }\n\n  if (typeof code !== 'number') {\n    throw new Error(`Hash function code should be a number. Got: ${code}`)\n  }\n\n  if (cs.codes[code] === undefined && !exports.isAppCode(code)) {\n    throw new Error(`Unrecognized function code: ${code}`)\n  }\n\n  return code\n}\n\n/**\n * Checks wether a code is part of the app range\n *\n * @param {number} code\n * @returns {boolean}\n */\nexports.isAppCode = function appCode (code) {\n  return code > 0 && code < 0x10\n}\n\n/**\n * Checks whether a multihash code is valid.\n *\n * @param {number} code\n * @returns {boolean}\n */\nexports.isValidCode = function validCode (code) {\n  if (exports.isAppCode(code)) {\n    return true\n  }\n\n  if (cs.codes[code]) {\n    return true\n  }\n\n  return false\n}\n\n/**\n * Check if the given buffer is a valid multihash. Throws an error if it is not valid.\n *\n * @param {Buffer} multihash\n * @returns {undefined}\n * @throws {Error}\n */\nfunction validate (multihash) {\n  exports.decode(multihash) // throws if bad.\n}\nexports.validate = validate\n\n/**\n * Returns a prefix from a valid multihash. Throws an error if it is not valid.\n *\n * @param {Buffer} multihash\n * @returns {undefined}\n * @throws {Error}\n */\nexports.prefix = function prefix (multihash) {\n  validate(multihash)\n\n  return multihash.slice(0, 2)\n}\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.encodeLabelhash = encodeLabelhash;\nexports.decodeLabelhash = decodeLabelhash;\nexports.isEncodedLabelhash = isEncodedLabelhash;\nexports.isDecrypted = isDecrypted;\nexports.labelhash = labelhash;\n\nvar _ethEnsNamehash = require(\"eth-ens-namehash\");\n\nvar sha3 = require('js-sha3').keccak_256;\n\nfunction encodeLabelhash(hash) {\n  if (!hash.startsWith('0x')) {\n    throw new Error('Expected label hash to start with 0x');\n  }\n\n  if (hash.length !== 66) {\n    throw new Error('Expected label hash to have a length of 66');\n  }\n\n  return \"[\".concat(hash.slice(2), \"]\");\n}\n\nfunction decodeLabelhash(hash) {\n  if (!(hash.startsWith('[') && hash.endsWith(']'))) {\n    throw Error('Expected encoded labelhash to start and end with square brackets');\n  }\n\n  if (hash.length !== 66) {\n    throw Error('Expected encoded labelhash to have a length of 66');\n  }\n\n  return \"\".concat(hash.slice(1, -1));\n}\n\nfunction isEncodedLabelhash(hash) {\n  return hash.startsWith('[') && hash.endsWith(']') && hash.length === 66;\n}\n\nfunction isDecrypted(name) {\n  var nameArray = name.split('.');\n  var decrypted = nameArray.reduce(function (acc, label) {\n    if (acc === false) return false;\n    return isEncodedLabelhash(label) ? false : true;\n  }, true);\n  return decrypted;\n}\n\nfunction labelhash(unnormalisedLabelOrLabelhash) {\n  return isEncodedLabelhash(unnormalisedLabelOrLabelhash) ? '0x' + decodeLabelhash(unnormalisedLabelOrLabelhash) : '0x' + sha3((0, _ethEnsNamehash.normalize)(unnormalisedLabelOrLabelhash));\n}","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.decodeContenthash = decodeContenthash;\nexports.validateContent = validateContent;\nexports.isValidContenthash = isValidContenthash;\nexports.encodeContenthash = encodeContenthash;\n\nvar _contentHash = _interopRequireDefault(require(\"content-hash\"));\n\nvar _ethers = require(\"ethers\");\n\nvar _bs = _interopRequireDefault(require(\"bs58\"));\n\nvar supportedCodecs = ['ipns-ns', 'ipfs-ns', 'swarm-ns', 'onion', 'onion3'];\nvar utils = _ethers.ethers.utils;\n\nfunction decodeContenthash(encoded) {\n  var decoded, protocolType, error;\n\n  if (encoded.error) {\n    return {\n      protocolType: null,\n      decoded: encoded.error\n    };\n  }\n\n  if (encoded) {\n    try {\n      decoded = _contentHash[\"default\"].decode(encoded);\n\n      var codec = _contentHash[\"default\"].getCodec(encoded);\n\n      if (codec === 'ipfs-ns') {\n        protocolType = 'ipfs';\n      } else if (codec === 'ipns-ns') {\n        decoded = _bs[\"default\"].decode(decoded).slice(2).toString();\n        protocolType = 'ipns';\n      } else if (codec === 'swarm-ns') {\n        protocolType = 'bzz';\n      } else if (codec === 'onion') {\n        protocolType = 'onion';\n      } else if (codec === 'onion3') {\n        protocolType = 'onion3';\n      } else {\n        decoded = encoded;\n      }\n    } catch (e) {\n      error = e.message;\n    }\n  }\n\n  return {\n    protocolType: protocolType,\n    decoded: decoded,\n    error: error\n  };\n}\n\nfunction validateContent(encoded) {\n  return _contentHash[\"default\"].isHashOfType(encoded, _contentHash[\"default\"].Types.ipfs) || _contentHash[\"default\"].isHashOfType(encoded, _contentHash[\"default\"].Types.swarm);\n}\n\nfunction isValidContenthash(encoded) {\n  try {\n    var codec = _contentHash[\"default\"].getCodec(encoded);\n\n    return utils.isHexString(encoded) && supportedCodecs.includes(codec);\n  } catch (e) {\n    console.log(e);\n  }\n}\n\nfunction encodeContenthash(text) {\n  var content, contentType;\n  var encoded = false;\n\n  if (!!text) {\n    var matched = text.match(/^(ipfs|ipns|bzz|onion|onion3):\\/\\/(.*)/) || text.match(/\\/(ipfs)\\/(.*)/) || text.match(/\\/(ipns)\\/(.*)/);\n\n    if (matched) {\n      contentType = matched[1];\n      content = matched[2];\n    }\n\n    try {\n      if (contentType === 'ipfs') {\n        if (content.length >= 4) {\n          encoded = '0x' + _contentHash[\"default\"].encode('ipfs-ns', content);\n        }\n      } else if (contentType === 'ipns') {\n        var bs58content = _bs[\"default\"].encode(Buffer.concat([Buffer.from([0, content.length]), Buffer.from(content)]));\n\n        encoded = '0x' + _contentHash[\"default\"].encode('ipns-ns', bs58content);\n      } else if (contentType === 'bzz') {\n        if (content.length >= 4) {\n          encoded = '0x' + _contentHash[\"default\"].fromSwarm(content);\n        }\n      } else if (contentType === 'onion') {\n        if (content.length == 16) {\n          encoded = '0x' + _contentHash[\"default\"].encode('onion', content);\n        }\n      } else if (contentType === 'onion3') {\n        if (content.length == 56) {\n          encoded = '0x' + _contentHash[\"default\"].encode('onion3', content);\n        }\n      } else {\n        console.warn('Unsupported protocol or invalid value', {\n          contentType: contentType,\n          text: text\n        });\n      }\n    } catch (err) {\n      console.warn('Error encoding content hash', {\n        text: text,\n        encoded: encoded\n      }); //throw 'Error encoding content hash'\n    }\n  }\n\n  return encoded;\n}","'use strict'\nconst varint = require('varint')\n\nmodule.exports = {\n  numberToBuffer,\n  bufferToNumber,\n  varintBufferEncode,\n  varintBufferDecode,\n  varintEncode\n}\n\nfunction bufferToNumber (buf) {\n  return parseInt(buf.toString('hex'), 16)\n}\n\nfunction numberToBuffer (num) {\n  let hexString = num.toString(16)\n  if (hexString.length % 2 === 1) {\n    hexString = '0' + hexString\n  }\n  return Buffer.from(hexString, 'hex')\n}\n\nfunction varintBufferEncode (input) {\n  return Buffer.from(varint.encode(bufferToNumber(input)))\n}\n\nfunction varintBufferDecode (input) {\n  return numberToBuffer(varint.decode(input))\n}\n\nfunction varintEncode (num) {\n  return Buffer.from(varint.encode(num))\n}\n","'use strict'\n\nconst { Buffer } = require('buffer')\nconst mh = require('multihashes')\nconst multibase = require('multibase')\nconst multicodec = require('multicodec')\nconst codecs = require('multicodec/src/base-table.json')\nconst CIDUtil = require('./cid-util')\nconst withIs = require('class-is')\n\n/**\n * @typedef {Object} SerializedCID\n * @param {string} codec\n * @param {number} version\n * @param {Buffer} multihash\n */\n\n/**\n * Test if the given input is a CID.\n * @function isCID\n * @memberof CID\n * @static\n * @param {any} other\n * @returns {bool}\n */\n\n/**\n * Class representing a CID `<mbase><version><mcodec><mhash>`\n * , as defined in [ipld/cid](https://github.com/multiformats/cid).\n * @class CID\n */\nclass CID {\n  /**\n   * Create a new CID.\n   *\n   * The algorithm for argument input is roughly:\n   * ```\n   * if (cid)\n   *   -> create a copy\n   * else if (str)\n   *   if (1st char is on multibase table) -> CID String\n   *   else -> bs58 encoded multihash\n   * else if (Buffer)\n   *   if (1st byte is 0 or 1) -> CID\n   *   else -> multihash\n   * else if (Number)\n   *   -> construct CID by parts\n   * ```\n   *\n   * @param {string|Buffer|CID} version\n   * @param {string} [codec]\n   * @param {Buffer} [multihash]\n   * @param {string} [multibaseName]\n   *\n   * @example\n   * new CID(<version>, <codec>, <multihash>, <multibaseName>)\n   * new CID(<cidStr>)\n   * new CID(<cid.buffer>)\n   * new CID(<multihash>)\n   * new CID(<bs58 encoded multihash>)\n   * new CID(<cid>)\n   */\n  constructor (version, codec, multihash, multibaseName) {\n    if (_CID.isCID(version)) {\n      // version is an exising CID instance\n      const cid = version\n      this.version = cid.version\n      this.codec = cid.codec\n      this.multihash = Buffer.from(cid.multihash)\n      // Default guard for when a CID < 0.7 is passed with no multibaseName\n      this.multibaseName = cid.multibaseName || (cid.version === 0 ? 'base58btc' : 'base32')\n      return\n    }\n\n    if (typeof version === 'string') {\n      // e.g. 'base32' or false\n      const baseName = multibase.isEncoded(version)\n      if (baseName) {\n        // version is a CID String encoded with multibase, so v1\n        const cid = multibase.decode(version)\n        this.version = parseInt(cid.slice(0, 1).toString('hex'), 16)\n        this.codec = multicodec.getCodec(cid.slice(1))\n        this.multihash = multicodec.rmPrefix(cid.slice(1))\n        this.multibaseName = baseName\n      } else {\n        // version is a base58btc string multihash, so v0\n        this.version = 0\n        this.codec = 'dag-pb'\n        this.multihash = mh.fromB58String(version)\n        this.multibaseName = 'base58btc'\n      }\n      CID.validateCID(this)\n      Object.defineProperty(this, 'string', { value: version })\n      return\n    }\n\n    if (Buffer.isBuffer(version)) {\n      const firstByte = version.slice(0, 1)\n      const v = parseInt(firstByte.toString('hex'), 16)\n      if (v === 1) {\n        // version is a CID buffer\n        const cid = version\n        this.version = v\n        this.codec = multicodec.getCodec(cid.slice(1))\n        this.multihash = multicodec.rmPrefix(cid.slice(1))\n        this.multibaseName = 'base32'\n      } else {\n        // version is a raw multihash buffer, so v0\n        this.version = 0\n        this.codec = 'dag-pb'\n        this.multihash = version\n        this.multibaseName = 'base58btc'\n      }\n      CID.validateCID(this)\n      return\n    }\n\n    // otherwise, assemble the CID from the parameters\n\n    /**\n     * @type {number}\n     */\n    this.version = version\n\n    /**\n     * @type {string}\n     */\n    this.codec = codec\n\n    /**\n     * @type {Buffer}\n     */\n    this.multihash = multihash\n\n    /**\n     * @type {string}\n     */\n    this.multibaseName = multibaseName || (version === 0 ? 'base58btc' : 'base32')\n\n    CID.validateCID(this)\n  }\n\n  /**\n   * The CID as a `Buffer`\n   *\n   * @return {Buffer}\n   * @readonly\n   *\n   * @memberOf CID\n   */\n  get buffer () {\n    let buffer = this._buffer\n\n    if (!buffer) {\n      if (this.version === 0) {\n        buffer = this.multihash\n      } else if (this.version === 1) {\n        buffer = Buffer.concat([\n          Buffer.from('01', 'hex'),\n          multicodec.getCodeVarint(this.codec),\n          this.multihash\n        ])\n      } else {\n        throw new Error('unsupported version')\n      }\n\n      // Cache this buffer so it doesn't have to be recreated\n      Object.defineProperty(this, '_buffer', { value: buffer })\n    }\n\n    return buffer\n  }\n\n  /**\n   * Get the prefix of the CID.\n   *\n   * @returns {Buffer}\n   * @readonly\n   */\n  get prefix () {\n    return Buffer.concat([\n      Buffer.from(`0${this.version}`, 'hex'),\n      multicodec.getCodeVarint(this.codec),\n      mh.prefix(this.multihash)\n    ])\n  }\n\n  /**\n   * Convert to a CID of version `0`.\n   *\n   * @returns {CID}\n   */\n  toV0 () {\n    if (this.codec !== 'dag-pb') {\n      throw new Error('Cannot convert a non dag-pb CID to CIDv0')\n    }\n\n    const { name, length } = mh.decode(this.multihash)\n\n    if (name !== 'sha2-256') {\n      throw new Error('Cannot convert non sha2-256 multihash CID to CIDv0')\n    }\n\n    if (length !== 32) {\n      throw new Error('Cannot convert non 32 byte multihash CID to CIDv0')\n    }\n\n    return new _CID(0, this.codec, this.multihash)\n  }\n\n  /**\n   * Convert to a CID of version `1`.\n   *\n   * @returns {CID}\n   */\n  toV1 () {\n    return new _CID(1, this.codec, this.multihash)\n  }\n\n  /**\n   * Encode the CID into a string.\n   *\n   * @param {string} [base=this.multibaseName] - Base encoding to use.\n   * @returns {string}\n   */\n  toBaseEncodedString (base = this.multibaseName) {\n    if (this.string && base === this.multibaseName) {\n      return this.string\n    }\n    let str = null\n    if (this.version === 0) {\n      if (base !== 'base58btc') {\n        throw new Error('not supported with CIDv0, to support different bases, please migrate the instance do CIDv1, you can do that through cid.toV1()')\n      }\n      str = mh.toB58String(this.multihash)\n    } else if (this.version === 1) {\n      str = multibase.encode(base, this.buffer).toString()\n    } else {\n      throw new Error('unsupported version')\n    }\n    if (base === this.multibaseName) {\n      // cache the string value\n      Object.defineProperty(this, 'string', { value: str })\n    }\n    return str\n  }\n\n  /**\n   * CID(QmdfTbBqBPQ7VNxZEYEj14VmRuZBkqFbiwReogJgS1zR1n)\n   *\n   * @returns {String}\n   */\n  [Symbol.for('nodejs.util.inspect.custom')] () {\n    return 'CID(' + this.toString() + ')'\n  }\n\n  toString (base) {\n    return this.toBaseEncodedString(base)\n  }\n\n  /**\n   * Serialize to a plain object.\n   *\n   * @returns {SerializedCID}\n   */\n  toJSON () {\n    return {\n      codec: this.codec,\n      version: this.version,\n      hash: this.multihash\n    }\n  }\n\n  /**\n   * Compare equality with another CID.\n   *\n   * @param {CID} other\n   * @returns {bool}\n   */\n  equals (other) {\n    return this.codec === other.codec &&\n      this.version === other.version &&\n      this.multihash.equals(other.multihash)\n  }\n\n  /**\n   * Test if the given input is a valid CID object.\n   * Throws if it is not.\n   *\n   * @param {any} other\n   * @returns {void}\n   */\n  static validateCID (other) {\n    const errorMsg = CIDUtil.checkCIDComponents(other)\n    if (errorMsg) {\n      throw new Error(errorMsg)\n    }\n  }\n}\n\nconst _CID = withIs(CID, {\n  className: 'CID',\n  symbolName: '@ipld/js-cid/CID'\n})\n\n_CID.codecs = codecs\n\nmodule.exports = _CID\n","'use strict'\nconst varint = require('varint')\nconst { Buffer } = require('buffer')\n\nmodule.exports = {\n  numberToBuffer,\n  bufferToNumber,\n  varintBufferEncode,\n  varintBufferDecode,\n  varintEncode\n}\n\nfunction bufferToNumber (buf) {\n  return parseInt(buf.toString('hex'), 16)\n}\n\nfunction numberToBuffer (num) {\n  let hexString = num.toString(16)\n  if (hexString.length % 2 === 1) {\n    hexString = '0' + hexString\n  }\n  return Buffer.from(hexString, 'hex')\n}\n\nfunction varintBufferEncode (input) {\n  return Buffer.from(varint.encode(bufferToNumber(input)))\n}\n\nfunction varintBufferDecode (input) {\n  return numberToBuffer(varint.decode(input))\n}\n\nfunction varintEncode (num) {\n  return Buffer.from(varint.encode(num))\n}\n","var arrayWithHoles = require(\"./arrayWithHoles.js\");\n\nvar iterableToArrayLimit = require(\"./iterableToArrayLimit.js\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray.js\");\n\nvar nonIterableRest = require(\"./nonIterableRest.js\");\n\nfunction _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}\n\nmodule.exports = _slicedToArray;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nmodule.exports = _arrayWithHoles;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nmodule.exports = _iterableToArrayLimit;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableRest;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","'use strict'\nvar ALPHABET = 'qpzry9x8gf2tvdw0s3jn54khce6mua7l'\n\n// pre-compute lookup table\nvar ALPHABET_MAP = {}\nfor (var z = 0; z < ALPHABET.length; z++) {\n  var x = ALPHABET.charAt(z)\n\n  if (ALPHABET_MAP[x] !== undefined) throw new TypeError(x + ' is ambiguous')\n  ALPHABET_MAP[x] = z\n}\n\nfunction polymodStep (pre) {\n  var b = pre >> 25\n  return ((pre & 0x1FFFFFF) << 5) ^\n    (-((b >> 0) & 1) & 0x3b6a57b2) ^\n    (-((b >> 1) & 1) & 0x26508e6d) ^\n    (-((b >> 2) & 1) & 0x1ea119fa) ^\n    (-((b >> 3) & 1) & 0x3d4233dd) ^\n    (-((b >> 4) & 1) & 0x2a1462b3)\n}\n\nfunction prefixChk (prefix) {\n  var chk = 1\n  for (var i = 0; i < prefix.length; ++i) {\n    var c = prefix.charCodeAt(i)\n    if (c < 33 || c > 126) throw new Error('Invalid prefix (' + prefix + ')')\n\n    chk = polymodStep(chk) ^ (c >> 5)\n  }\n  chk = polymodStep(chk)\n\n  for (i = 0; i < prefix.length; ++i) {\n    var v = prefix.charCodeAt(i)\n    chk = polymodStep(chk) ^ (v & 0x1f)\n  }\n  return chk\n}\n\nfunction encode (prefix, words, LIMIT) {\n  LIMIT = LIMIT || 90\n  if ((prefix.length + 7 + words.length) > LIMIT) throw new TypeError('Exceeds length limit')\n\n  prefix = prefix.toLowerCase()\n\n  // determine chk mod\n  var chk = prefixChk(prefix)\n  var result = prefix + '1'\n  for (var i = 0; i < words.length; ++i) {\n    var x = words[i]\n    if ((x >> 5) !== 0) throw new Error('Non 5-bit word')\n\n    chk = polymodStep(chk) ^ x\n    result += ALPHABET.charAt(x)\n  }\n\n  for (i = 0; i < 6; ++i) {\n    chk = polymodStep(chk)\n  }\n  chk ^= 1\n\n  for (i = 0; i < 6; ++i) {\n    var v = (chk >> ((5 - i) * 5)) & 0x1f\n    result += ALPHABET.charAt(v)\n  }\n\n  return result\n}\n\nfunction decode (str, LIMIT) {\n  LIMIT = LIMIT || 90\n  if (str.length < 8) throw new TypeError(str + ' too short')\n  if (str.length > LIMIT) throw new TypeError('Exceeds length limit')\n\n  // don't allow mixed case\n  var lowered = str.toLowerCase()\n  var uppered = str.toUpperCase()\n  if (str !== lowered && str !== uppered) throw new Error('Mixed-case string ' + str)\n  str = lowered\n\n  var split = str.lastIndexOf('1')\n  if (split === -1) throw new Error('No separator character for ' + str)\n  if (split === 0) throw new Error('Missing prefix for ' + str)\n\n  var prefix = str.slice(0, split)\n  var wordChars = str.slice(split + 1)\n  if (wordChars.length < 6) throw new Error('Data too short')\n\n  var chk = prefixChk(prefix)\n  var words = []\n  for (var i = 0; i < wordChars.length; ++i) {\n    var c = wordChars.charAt(i)\n    var v = ALPHABET_MAP[c]\n    if (v === undefined) throw new Error('Unknown character ' + c)\n    chk = polymodStep(chk) ^ v\n\n    // not in the checksum?\n    if (i + 6 >= wordChars.length) continue\n    words.push(v)\n  }\n\n  if (chk !== 1) throw new Error('Invalid checksum for ' + str)\n  return { prefix: prefix, words: words }\n}\n\nfunction convert (data, inBits, outBits, pad) {\n  var value = 0\n  var bits = 0\n  var maxV = (1 << outBits) - 1\n\n  var result = []\n  for (var i = 0; i < data.length; ++i) {\n    value = (value << inBits) | data[i]\n    bits += inBits\n\n    while (bits >= outBits) {\n      bits -= outBits\n      result.push((value >> bits) & maxV)\n    }\n  }\n\n  if (pad) {\n    if (bits > 0) {\n      result.push((value << (outBits - bits)) & maxV)\n    }\n  } else {\n    if (bits >= inBits) throw new Error('Excess padding')\n    if ((value << (outBits - bits)) & maxV) throw new Error('Non-zero padding')\n  }\n\n  return result\n}\n\nfunction toWords (bytes) {\n  return convert(bytes, 8, 5, true)\n}\n\nfunction fromWords (words) {\n  return convert(words, 5, 8, false)\n}\n\nmodule.exports = {\n  decode: decode,\n  encode: encode,\n  toWords: toWords,\n  fromWords: fromWords\n}\n","var bigInt = (function (undefined) {\r\n    \"use strict\";\r\n\r\n    var BASE = 1e7,\r\n        LOG_BASE = 7,\r\n        MAX_INT = 9007199254740992,\r\n        MAX_INT_ARR = smallToArray(MAX_INT),\r\n        LOG_MAX_INT = Math.log(MAX_INT);\r\n\r\n    function Integer(v, radix) {\r\n        if (typeof v === \"undefined\") return Integer[0];\r\n        if (typeof radix !== \"undefined\") return +radix === 10 ? parseValue(v) : parseBase(v, radix);\r\n        return parseValue(v);\r\n    }\r\n\r\n    function BigInteger(value, sign) {\r\n        this.value = value;\r\n        this.sign = sign;\r\n        this.isSmall = false;\r\n    }\r\n    BigInteger.prototype = Object.create(Integer.prototype);\r\n\r\n    function SmallInteger(value) {\r\n        this.value = value;\r\n        this.sign = value < 0;\r\n        this.isSmall = true;\r\n    }\r\n    SmallInteger.prototype = Object.create(Integer.prototype);\r\n\r\n    function isPrecise(n) {\r\n        return -MAX_INT < n && n < MAX_INT;\r\n    }\r\n\r\n    function smallToArray(n) { // For performance reasons doesn't reference BASE, need to change this function if BASE changes\r\n        if (n < 1e7)\r\n            return [n];\r\n        if (n < 1e14)\r\n            return [n % 1e7, Math.floor(n / 1e7)];\r\n        return [n % 1e7, Math.floor(n / 1e7) % 1e7, Math.floor(n / 1e14)];\r\n    }\r\n\r\n    function arrayToSmall(arr) { // If BASE changes this function may need to change\r\n        trim(arr);\r\n        var length = arr.length;\r\n        if (length < 4 && compareAbs(arr, MAX_INT_ARR) < 0) {\r\n            switch (length) {\r\n                case 0: return 0;\r\n                case 1: return arr[0];\r\n                case 2: return arr[0] + arr[1] * BASE;\r\n                default: return arr[0] + (arr[1] + arr[2] * BASE) * BASE;\r\n            }\r\n        }\r\n        return arr;\r\n    }\r\n\r\n    function trim(v) {\r\n        var i = v.length;\r\n        while (v[--i] === 0);\r\n        v.length = i + 1;\r\n    }\r\n\r\n    function createArray(length) { // function shamelessly stolen from Yaffle's library https://github.com/Yaffle/BigInteger\r\n        var x = new Array(length);\r\n        var i = -1;\r\n        while (++i < length) {\r\n            x[i] = 0;\r\n        }\r\n        return x;\r\n    }\r\n\r\n    function truncate(n) {\r\n        if (n > 0) return Math.floor(n);\r\n        return Math.ceil(n);\r\n    }\r\n\r\n    function add(a, b) { // assumes a and b are arrays with a.length >= b.length\r\n        var l_a = a.length,\r\n            l_b = b.length,\r\n            r = new Array(l_a),\r\n            carry = 0,\r\n            base = BASE,\r\n            sum, i;\r\n        for (i = 0; i < l_b; i++) {\r\n            sum = a[i] + b[i] + carry;\r\n            carry = sum >= base ? 1 : 0;\r\n            r[i] = sum - carry * base;\r\n        }\r\n        while (i < l_a) {\r\n            sum = a[i] + carry;\r\n            carry = sum === base ? 1 : 0;\r\n            r[i++] = sum - carry * base;\r\n        }\r\n        if (carry > 0) r.push(carry);\r\n        return r;\r\n    }\r\n\r\n    function addAny(a, b) {\r\n        if (a.length >= b.length) return add(a, b);\r\n        return add(b, a);\r\n    }\r\n\r\n    function addSmall(a, carry) { // assumes a is array, carry is number with 0 <= carry < MAX_INT\r\n        var l = a.length,\r\n            r = new Array(l),\r\n            base = BASE,\r\n            sum, i;\r\n        for (i = 0; i < l; i++) {\r\n            sum = a[i] - base + carry;\r\n            carry = Math.floor(sum / base);\r\n            r[i] = sum - carry * base;\r\n            carry += 1;\r\n        }\r\n        while (carry > 0) {\r\n            r[i++] = carry % base;\r\n            carry = Math.floor(carry / base);\r\n        }\r\n        return r;\r\n    }\r\n\r\n    BigInteger.prototype.add = function (v) {\r\n        var n = parseValue(v);\r\n        if (this.sign !== n.sign) {\r\n            return this.subtract(n.negate());\r\n        }\r\n        var a = this.value, b = n.value;\r\n        if (n.isSmall) {\r\n            return new BigInteger(addSmall(a, Math.abs(b)), this.sign);\r\n        }\r\n        return new BigInteger(addAny(a, b), this.sign);\r\n    };\r\n    BigInteger.prototype.plus = BigInteger.prototype.add;\r\n\r\n    SmallInteger.prototype.add = function (v) {\r\n        var n = parseValue(v);\r\n        var a = this.value;\r\n        if (a < 0 !== n.sign) {\r\n            return this.subtract(n.negate());\r\n        }\r\n        var b = n.value;\r\n        if (n.isSmall) {\r\n            if (isPrecise(a + b)) return new SmallInteger(a + b);\r\n            b = smallToArray(Math.abs(b));\r\n        }\r\n        return new BigInteger(addSmall(b, Math.abs(a)), a < 0);\r\n    };\r\n    SmallInteger.prototype.plus = SmallInteger.prototype.add;\r\n\r\n    function subtract(a, b) { // assumes a and b are arrays with a >= b\r\n        var a_l = a.length,\r\n            b_l = b.length,\r\n            r = new Array(a_l),\r\n            borrow = 0,\r\n            base = BASE,\r\n            i, difference;\r\n        for (i = 0; i < b_l; i++) {\r\n            difference = a[i] - borrow - b[i];\r\n            if (difference < 0) {\r\n                difference += base;\r\n                borrow = 1;\r\n            } else borrow = 0;\r\n            r[i] = difference;\r\n        }\r\n        for (i = b_l; i < a_l; i++) {\r\n            difference = a[i] - borrow;\r\n            if (difference < 0) difference += base;\r\n            else {\r\n                r[i++] = difference;\r\n                break;\r\n            }\r\n            r[i] = difference;\r\n        }\r\n        for (; i < a_l; i++) {\r\n            r[i] = a[i];\r\n        }\r\n        trim(r);\r\n        return r;\r\n    }\r\n\r\n    function subtractAny(a, b, sign) {\r\n        var value;\r\n        if (compareAbs(a, b) >= 0) {\r\n            value = subtract(a, b);\r\n        } else {\r\n            value = subtract(b, a);\r\n            sign = !sign;\r\n        }\r\n        value = arrayToSmall(value);\r\n        if (typeof value === \"number\") {\r\n            if (sign) value = -value;\r\n            return new SmallInteger(value);\r\n        }\r\n        return new BigInteger(value, sign);\r\n    }\r\n\r\n    function subtractSmall(a, b, sign) { // assumes a is array, b is number with 0 <= b < MAX_INT\r\n        var l = a.length,\r\n            r = new Array(l),\r\n            carry = -b,\r\n            base = BASE,\r\n            i, difference;\r\n        for (i = 0; i < l; i++) {\r\n            difference = a[i] + carry;\r\n            carry = Math.floor(difference / base);\r\n            difference %= base;\r\n            r[i] = difference < 0 ? difference + base : difference;\r\n        }\r\n        r = arrayToSmall(r);\r\n        if (typeof r === \"number\") {\r\n            if (sign) r = -r;\r\n            return new SmallInteger(r);\r\n        } return new BigInteger(r, sign);\r\n    }\r\n\r\n    BigInteger.prototype.subtract = function (v) {\r\n        var n = parseValue(v);\r\n        if (this.sign !== n.sign) {\r\n            return this.add(n.negate());\r\n        }\r\n        var a = this.value, b = n.value;\r\n        if (n.isSmall)\r\n            return subtractSmall(a, Math.abs(b), this.sign);\r\n        return subtractAny(a, b, this.sign);\r\n    };\r\n    BigInteger.prototype.minus = BigInteger.prototype.subtract;\r\n\r\n    SmallInteger.prototype.subtract = function (v) {\r\n        var n = parseValue(v);\r\n        var a = this.value;\r\n        if (a < 0 !== n.sign) {\r\n            return this.add(n.negate());\r\n        }\r\n        var b = n.value;\r\n        if (n.isSmall) {\r\n            return new SmallInteger(a - b);\r\n        }\r\n        return subtractSmall(b, Math.abs(a), a >= 0);\r\n    };\r\n    SmallInteger.prototype.minus = SmallInteger.prototype.subtract;\r\n\r\n    BigInteger.prototype.negate = function () {\r\n        return new BigInteger(this.value, !this.sign);\r\n    };\r\n    SmallInteger.prototype.negate = function () {\r\n        var sign = this.sign;\r\n        var small = new SmallInteger(-this.value);\r\n        small.sign = !sign;\r\n        return small;\r\n    };\r\n\r\n    BigInteger.prototype.abs = function () {\r\n        return new BigInteger(this.value, false);\r\n    };\r\n    SmallInteger.prototype.abs = function () {\r\n        return new SmallInteger(Math.abs(this.value));\r\n    };\r\n\r\n    function multiplyLong(a, b) {\r\n        var a_l = a.length,\r\n            b_l = b.length,\r\n            l = a_l + b_l,\r\n            r = createArray(l),\r\n            base = BASE,\r\n            product, carry, i, a_i, b_j;\r\n        for (i = 0; i < a_l; ++i) {\r\n            a_i = a[i];\r\n            for (var j = 0; j < b_l; ++j) {\r\n                b_j = b[j];\r\n                product = a_i * b_j + r[i + j];\r\n                carry = Math.floor(product / base);\r\n                r[i + j] = product - carry * base;\r\n                r[i + j + 1] += carry;\r\n            }\r\n        }\r\n        trim(r);\r\n        return r;\r\n    }\r\n\r\n    function multiplySmall(a, b) { // assumes a is array, b is number with |b| < BASE\r\n        var l = a.length,\r\n            r = new Array(l),\r\n            base = BASE,\r\n            carry = 0,\r\n            product, i;\r\n        for (i = 0; i < l; i++) {\r\n            product = a[i] * b + carry;\r\n            carry = Math.floor(product / base);\r\n            r[i] = product - carry * base;\r\n        }\r\n        while (carry > 0) {\r\n            r[i++] = carry % base;\r\n            carry = Math.floor(carry / base);\r\n        }\r\n        return r;\r\n    }\r\n\r\n    function shiftLeft(x, n) {\r\n        var r = [];\r\n        while (n-- > 0) r.push(0);\r\n        return r.concat(x);\r\n    }\r\n\r\n    function multiplyKaratsuba(x, y) {\r\n        var n = Math.max(x.length, y.length);\r\n\r\n        if (n <= 30) return multiplyLong(x, y);\r\n        n = Math.ceil(n / 2);\r\n\r\n        var b = x.slice(n),\r\n            a = x.slice(0, n),\r\n            d = y.slice(n),\r\n            c = y.slice(0, n);\r\n\r\n        var ac = multiplyKaratsuba(a, c),\r\n            bd = multiplyKaratsuba(b, d),\r\n            abcd = multiplyKaratsuba(addAny(a, b), addAny(c, d));\r\n\r\n        var product = addAny(addAny(ac, shiftLeft(subtract(subtract(abcd, ac), bd), n)), shiftLeft(bd, 2 * n));\r\n        trim(product);\r\n        return product;\r\n    }\r\n\r\n    // The following function is derived from a surface fit of a graph plotting the performance difference\r\n    // between long multiplication and karatsuba multiplication versus the lengths of the two arrays.\r\n    function useKaratsuba(l1, l2) {\r\n        return -0.012 * l1 - 0.012 * l2 + 0.000015 * l1 * l2 > 0;\r\n    }\r\n\r\n    BigInteger.prototype.multiply = function (v) {\r\n        var n = parseValue(v),\r\n            a = this.value, b = n.value,\r\n            sign = this.sign !== n.sign,\r\n            abs;\r\n        if (n.isSmall) {\r\n            if (b === 0) return Integer[0];\r\n            if (b === 1) return this;\r\n            if (b === -1) return this.negate();\r\n            abs = Math.abs(b);\r\n            if (abs < BASE) {\r\n                return new BigInteger(multiplySmall(a, abs), sign);\r\n            }\r\n            b = smallToArray(abs);\r\n        }\r\n        if (useKaratsuba(a.length, b.length)) // Karatsuba is only faster for certain array sizes\r\n            return new BigInteger(multiplyKaratsuba(a, b), sign);\r\n        return new BigInteger(multiplyLong(a, b), sign);\r\n    };\r\n\r\n    BigInteger.prototype.times = BigInteger.prototype.multiply;\r\n\r\n    function multiplySmallAndArray(a, b, sign) { // a >= 0\r\n        if (a < BASE) {\r\n            return new BigInteger(multiplySmall(b, a), sign);\r\n        }\r\n        return new BigInteger(multiplyLong(b, smallToArray(a)), sign);\r\n    }\r\n    SmallInteger.prototype._multiplyBySmall = function (a) {\r\n        if (isPrecise(a.value * this.value)) {\r\n            return new SmallInteger(a.value * this.value);\r\n        }\r\n        return multiplySmallAndArray(Math.abs(a.value), smallToArray(Math.abs(this.value)), this.sign !== a.sign);\r\n    };\r\n    BigInteger.prototype._multiplyBySmall = function (a) {\r\n        if (a.value === 0) return Integer[0];\r\n        if (a.value === 1) return this;\r\n        if (a.value === -1) return this.negate();\r\n        return multiplySmallAndArray(Math.abs(a.value), this.value, this.sign !== a.sign);\r\n    };\r\n    SmallInteger.prototype.multiply = function (v) {\r\n        return parseValue(v)._multiplyBySmall(this);\r\n    };\r\n    SmallInteger.prototype.times = SmallInteger.prototype.multiply;\r\n\r\n    function square(a) {\r\n        //console.assert(2 * BASE * BASE < MAX_INT);\r\n        var l = a.length,\r\n            r = createArray(l + l),\r\n            base = BASE,\r\n            product, carry, i, a_i, a_j;\r\n        for (i = 0; i < l; i++) {\r\n            a_i = a[i];\r\n            carry = 0 - a_i * a_i;\r\n            for (var j = i; j < l; j++) {\r\n                a_j = a[j];\r\n                product = 2 * (a_i * a_j) + r[i + j] + carry;\r\n                carry = Math.floor(product / base);\r\n                r[i + j] = product - carry * base;\r\n            }\r\n            r[i + l] = carry;\r\n        }\r\n        trim(r);\r\n        return r;\r\n    }\r\n\r\n    BigInteger.prototype.square = function () {\r\n        return new BigInteger(square(this.value), false);\r\n    };\r\n\r\n    SmallInteger.prototype.square = function () {\r\n        var value = this.value * this.value;\r\n        if (isPrecise(value)) return new SmallInteger(value);\r\n        return new BigInteger(square(smallToArray(Math.abs(this.value))), false);\r\n    };\r\n\r\n    function divMod1(a, b) { // Left over from previous version. Performs faster than divMod2 on smaller input sizes.\r\n        var a_l = a.length,\r\n            b_l = b.length,\r\n            base = BASE,\r\n            result = createArray(b.length),\r\n            divisorMostSignificantDigit = b[b_l - 1],\r\n            // normalization\r\n            lambda = Math.ceil(base / (2 * divisorMostSignificantDigit)),\r\n            remainder = multiplySmall(a, lambda),\r\n            divisor = multiplySmall(b, lambda),\r\n            quotientDigit, shift, carry, borrow, i, l, q;\r\n        if (remainder.length <= a_l) remainder.push(0);\r\n        divisor.push(0);\r\n        divisorMostSignificantDigit = divisor[b_l - 1];\r\n        for (shift = a_l - b_l; shift >= 0; shift--) {\r\n            quotientDigit = base - 1;\r\n            if (remainder[shift + b_l] !== divisorMostSignificantDigit) {\r\n                quotientDigit = Math.floor((remainder[shift + b_l] * base + remainder[shift + b_l - 1]) / divisorMostSignificantDigit);\r\n            }\r\n            // quotientDigit <= base - 1\r\n            carry = 0;\r\n            borrow = 0;\r\n            l = divisor.length;\r\n            for (i = 0; i < l; i++) {\r\n                carry += quotientDigit * divisor[i];\r\n                q = Math.floor(carry / base);\r\n                borrow += remainder[shift + i] - (carry - q * base);\r\n                carry = q;\r\n                if (borrow < 0) {\r\n                    remainder[shift + i] = borrow + base;\r\n                    borrow = -1;\r\n                } else {\r\n                    remainder[shift + i] = borrow;\r\n                    borrow = 0;\r\n                }\r\n            }\r\n            while (borrow !== 0) {\r\n                quotientDigit -= 1;\r\n                carry = 0;\r\n                for (i = 0; i < l; i++) {\r\n                    carry += remainder[shift + i] - base + divisor[i];\r\n                    if (carry < 0) {\r\n                        remainder[shift + i] = carry + base;\r\n                        carry = 0;\r\n                    } else {\r\n                        remainder[shift + i] = carry;\r\n                        carry = 1;\r\n                    }\r\n                }\r\n                borrow += carry;\r\n            }\r\n            result[shift] = quotientDigit;\r\n        }\r\n        // denormalization\r\n        remainder = divModSmall(remainder, lambda)[0];\r\n        return [arrayToSmall(result), arrayToSmall(remainder)];\r\n    }\r\n\r\n    function divMod2(a, b) { // Implementation idea shamelessly stolen from Silent Matt's library http://silentmatt.com/biginteger/\r\n        // Performs faster than divMod1 on larger input sizes.\r\n        var a_l = a.length,\r\n            b_l = b.length,\r\n            result = [],\r\n            part = [],\r\n            base = BASE,\r\n            guess, xlen, highx, highy, check;\r\n        while (a_l) {\r\n            part.unshift(a[--a_l]);\r\n            trim(part);\r\n            if (compareAbs(part, b) < 0) {\r\n                result.push(0);\r\n                continue;\r\n            }\r\n            xlen = part.length;\r\n            highx = part[xlen - 1] * base + part[xlen - 2];\r\n            highy = b[b_l - 1] * base + b[b_l - 2];\r\n            if (xlen > b_l) {\r\n                highx = (highx + 1) * base;\r\n            }\r\n            guess = Math.ceil(highx / highy);\r\n            do {\r\n                check = multiplySmall(b, guess);\r\n                if (compareAbs(check, part) <= 0) break;\r\n                guess--;\r\n            } while (guess);\r\n            result.push(guess);\r\n            part = subtract(part, check);\r\n        }\r\n        result.reverse();\r\n        return [arrayToSmall(result), arrayToSmall(part)];\r\n    }\r\n\r\n    function divModSmall(value, lambda) {\r\n        var length = value.length,\r\n            quotient = createArray(length),\r\n            base = BASE,\r\n            i, q, remainder, divisor;\r\n        remainder = 0;\r\n        for (i = length - 1; i >= 0; --i) {\r\n            divisor = remainder * base + value[i];\r\n            q = truncate(divisor / lambda);\r\n            remainder = divisor - q * lambda;\r\n            quotient[i] = q | 0;\r\n        }\r\n        return [quotient, remainder | 0];\r\n    }\r\n\r\n    function divModAny(self, v) {\r\n        var value, n = parseValue(v);\r\n        var a = self.value, b = n.value;\r\n        var quotient;\r\n        if (b === 0) throw new Error(\"Cannot divide by zero\");\r\n        if (self.isSmall) {\r\n            if (n.isSmall) {\r\n                return [new SmallInteger(truncate(a / b)), new SmallInteger(a % b)];\r\n            }\r\n            return [Integer[0], self];\r\n        }\r\n        if (n.isSmall) {\r\n            if (b === 1) return [self, Integer[0]];\r\n            if (b == -1) return [self.negate(), Integer[0]];\r\n            var abs = Math.abs(b);\r\n            if (abs < BASE) {\r\n                value = divModSmall(a, abs);\r\n                quotient = arrayToSmall(value[0]);\r\n                var remainder = value[1];\r\n                if (self.sign) remainder = -remainder;\r\n                if (typeof quotient === \"number\") {\r\n                    if (self.sign !== n.sign) quotient = -quotient;\r\n                    return [new SmallInteger(quotient), new SmallInteger(remainder)];\r\n                }\r\n                return [new BigInteger(quotient, self.sign !== n.sign), new SmallInteger(remainder)];\r\n            }\r\n            b = smallToArray(abs);\r\n        }\r\n        var comparison = compareAbs(a, b);\r\n        if (comparison === -1) return [Integer[0], self];\r\n        if (comparison === 0) return [Integer[self.sign === n.sign ? 1 : -1], Integer[0]];\r\n\r\n        // divMod1 is faster on smaller input sizes\r\n        if (a.length + b.length <= 200)\r\n            value = divMod1(a, b);\r\n        else value = divMod2(a, b);\r\n\r\n        quotient = value[0];\r\n        var qSign = self.sign !== n.sign,\r\n            mod = value[1],\r\n            mSign = self.sign;\r\n        if (typeof quotient === \"number\") {\r\n            if (qSign) quotient = -quotient;\r\n            quotient = new SmallInteger(quotient);\r\n        } else quotient = new BigInteger(quotient, qSign);\r\n        if (typeof mod === \"number\") {\r\n            if (mSign) mod = -mod;\r\n            mod = new SmallInteger(mod);\r\n        } else mod = new BigInteger(mod, mSign);\r\n        return [quotient, mod];\r\n    }\r\n\r\n    BigInteger.prototype.divmod = function (v) {\r\n        var result = divModAny(this, v);\r\n        return {\r\n            quotient: result[0],\r\n            remainder: result[1]\r\n        };\r\n    };\r\n    SmallInteger.prototype.divmod = BigInteger.prototype.divmod;\r\n\r\n    BigInteger.prototype.divide = function (v) {\r\n        return divModAny(this, v)[0];\r\n    };\r\n    SmallInteger.prototype.over = SmallInteger.prototype.divide = BigInteger.prototype.over = BigInteger.prototype.divide;\r\n\r\n    BigInteger.prototype.mod = function (v) {\r\n        return divModAny(this, v)[1];\r\n    };\r\n    SmallInteger.prototype.remainder = SmallInteger.prototype.mod = BigInteger.prototype.remainder = BigInteger.prototype.mod;\r\n\r\n    BigInteger.prototype.pow = function (v) {\r\n        var n = parseValue(v),\r\n            a = this.value,\r\n            b = n.value,\r\n            value, x, y;\r\n        if (b === 0) return Integer[1];\r\n        if (a === 0) return Integer[0];\r\n        if (a === 1) return Integer[1];\r\n        if (a === -1) return n.isEven() ? Integer[1] : Integer[-1];\r\n        if (n.sign) {\r\n            return Integer[0];\r\n        }\r\n        if (!n.isSmall) throw new Error(\"The exponent \" + n.toString() + \" is too large.\");\r\n        if (this.isSmall) {\r\n            if (isPrecise(value = Math.pow(a, b)))\r\n                return new SmallInteger(truncate(value));\r\n        }\r\n        x = this;\r\n        y = Integer[1];\r\n        while (true) {\r\n            if (b & 1 === 1) {\r\n                y = y.times(x);\r\n                --b;\r\n            }\r\n            if (b === 0) break;\r\n            b /= 2;\r\n            x = x.square();\r\n        }\r\n        return y;\r\n    };\r\n    SmallInteger.prototype.pow = BigInteger.prototype.pow;\r\n\r\n    BigInteger.prototype.modPow = function (exp, mod) {\r\n        exp = parseValue(exp);\r\n        mod = parseValue(mod);\r\n        if (mod.isZero()) throw new Error(\"Cannot take modPow with modulus 0\");\r\n        var r = Integer[1],\r\n            base = this.mod(mod);\r\n        while (exp.isPositive()) {\r\n            if (base.isZero()) return Integer[0];\r\n            if (exp.isOdd()) r = r.multiply(base).mod(mod);\r\n            exp = exp.divide(2);\r\n            base = base.square().mod(mod);\r\n        }\r\n        return r;\r\n    };\r\n    SmallInteger.prototype.modPow = BigInteger.prototype.modPow;\r\n\r\n    function compareAbs(a, b) {\r\n        if (a.length !== b.length) {\r\n            return a.length > b.length ? 1 : -1;\r\n        }\r\n        for (var i = a.length - 1; i >= 0; i--) {\r\n            if (a[i] !== b[i]) return a[i] > b[i] ? 1 : -1;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    BigInteger.prototype.compareAbs = function (v) {\r\n        var n = parseValue(v),\r\n            a = this.value,\r\n            b = n.value;\r\n        if (n.isSmall) return 1;\r\n        return compareAbs(a, b);\r\n    };\r\n    SmallInteger.prototype.compareAbs = function (v) {\r\n        var n = parseValue(v),\r\n            a = Math.abs(this.value),\r\n            b = n.value;\r\n        if (n.isSmall) {\r\n            b = Math.abs(b);\r\n            return a === b ? 0 : a > b ? 1 : -1;\r\n        }\r\n        return -1;\r\n    };\r\n\r\n    BigInteger.prototype.compare = function (v) {\r\n        // See discussion about comparison with Infinity:\r\n        // https://github.com/peterolson/BigInteger.js/issues/61\r\n        if (v === Infinity) {\r\n            return -1;\r\n        }\r\n        if (v === -Infinity) {\r\n            return 1;\r\n        }\r\n\r\n        var n = parseValue(v),\r\n            a = this.value,\r\n            b = n.value;\r\n        if (this.sign !== n.sign) {\r\n            return n.sign ? 1 : -1;\r\n        }\r\n        if (n.isSmall) {\r\n            return this.sign ? -1 : 1;\r\n        }\r\n        return compareAbs(a, b) * (this.sign ? -1 : 1);\r\n    };\r\n    BigInteger.prototype.compareTo = BigInteger.prototype.compare;\r\n\r\n    SmallInteger.prototype.compare = function (v) {\r\n        if (v === Infinity) {\r\n            return -1;\r\n        }\r\n        if (v === -Infinity) {\r\n            return 1;\r\n        }\r\n\r\n        var n = parseValue(v),\r\n            a = this.value,\r\n            b = n.value;\r\n        if (n.isSmall) {\r\n            return a == b ? 0 : a > b ? 1 : -1;\r\n        }\r\n        if (a < 0 !== n.sign) {\r\n            return a < 0 ? -1 : 1;\r\n        }\r\n        return a < 0 ? 1 : -1;\r\n    };\r\n    SmallInteger.prototype.compareTo = SmallInteger.prototype.compare;\r\n\r\n    BigInteger.prototype.equals = function (v) {\r\n        return this.compare(v) === 0;\r\n    };\r\n    SmallInteger.prototype.eq = SmallInteger.prototype.equals = BigInteger.prototype.eq = BigInteger.prototype.equals;\r\n\r\n    BigInteger.prototype.notEquals = function (v) {\r\n        return this.compare(v) !== 0;\r\n    };\r\n    SmallInteger.prototype.neq = SmallInteger.prototype.notEquals = BigInteger.prototype.neq = BigInteger.prototype.notEquals;\r\n\r\n    BigInteger.prototype.greater = function (v) {\r\n        return this.compare(v) > 0;\r\n    };\r\n    SmallInteger.prototype.gt = SmallInteger.prototype.greater = BigInteger.prototype.gt = BigInteger.prototype.greater;\r\n\r\n    BigInteger.prototype.lesser = function (v) {\r\n        return this.compare(v) < 0;\r\n    };\r\n    SmallInteger.prototype.lt = SmallInteger.prototype.lesser = BigInteger.prototype.lt = BigInteger.prototype.lesser;\r\n\r\n    BigInteger.prototype.greaterOrEquals = function (v) {\r\n        return this.compare(v) >= 0;\r\n    };\r\n    SmallInteger.prototype.geq = SmallInteger.prototype.greaterOrEquals = BigInteger.prototype.geq = BigInteger.prototype.greaterOrEquals;\r\n\r\n    BigInteger.prototype.lesserOrEquals = function (v) {\r\n        return this.compare(v) <= 0;\r\n    };\r\n    SmallInteger.prototype.leq = SmallInteger.prototype.lesserOrEquals = BigInteger.prototype.leq = BigInteger.prototype.lesserOrEquals;\r\n\r\n    BigInteger.prototype.isEven = function () {\r\n        return (this.value[0] & 1) === 0;\r\n    };\r\n    SmallInteger.prototype.isEven = function () {\r\n        return (this.value & 1) === 0;\r\n    };\r\n\r\n    BigInteger.prototype.isOdd = function () {\r\n        return (this.value[0] & 1) === 1;\r\n    };\r\n    SmallInteger.prototype.isOdd = function () {\r\n        return (this.value & 1) === 1;\r\n    };\r\n\r\n    BigInteger.prototype.isPositive = function () {\r\n        return !this.sign;\r\n    };\r\n    SmallInteger.prototype.isPositive = function () {\r\n        return this.value > 0;\r\n    };\r\n\r\n    BigInteger.prototype.isNegative = function () {\r\n        return this.sign;\r\n    };\r\n    SmallInteger.prototype.isNegative = function () {\r\n        return this.value < 0;\r\n    };\r\n\r\n    BigInteger.prototype.isUnit = function () {\r\n        return false;\r\n    };\r\n    SmallInteger.prototype.isUnit = function () {\r\n        return Math.abs(this.value) === 1;\r\n    };\r\n\r\n    BigInteger.prototype.isZero = function () {\r\n        return false;\r\n    };\r\n    SmallInteger.prototype.isZero = function () {\r\n        return this.value === 0;\r\n    };\r\n    BigInteger.prototype.isDivisibleBy = function (v) {\r\n        var n = parseValue(v);\r\n        var value = n.value;\r\n        if (value === 0) return false;\r\n        if (value === 1) return true;\r\n        if (value === 2) return this.isEven();\r\n        return this.mod(n).equals(Integer[0]);\r\n    };\r\n    SmallInteger.prototype.isDivisibleBy = BigInteger.prototype.isDivisibleBy;\r\n\r\n    function isBasicPrime(v) {\r\n        var n = v.abs();\r\n        if (n.isUnit()) return false;\r\n        if (n.equals(2) || n.equals(3) || n.equals(5)) return true;\r\n        if (n.isEven() || n.isDivisibleBy(3) || n.isDivisibleBy(5)) return false;\r\n        if (n.lesser(49)) return true;\r\n        // we don't know if it's prime: let the other functions figure it out\r\n    }\r\n    \r\n    function millerRabinTest(n, a) {\r\n        var nPrev = n.prev(),\r\n            b = nPrev,\r\n            r = 0,\r\n            d, t, i, x;\r\n        while (b.isEven()) b = b.divide(2), r++;\r\n        next : for (i = 0; i < a.length; i++) {\r\n            if (n.lesser(a[i])) continue;\r\n            x = bigInt(a[i]).modPow(b, n);\r\n            if (x.equals(Integer[1]) || x.equals(nPrev)) continue;\r\n            for (d = r - 1; d != 0; d--) {\r\n                x = x.square().mod(n);\r\n                if (x.isUnit()) return false;    \r\n                if (x.equals(nPrev)) continue next;\r\n            }\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n    \r\n// Set \"strict\" to true to force GRH-supported lower bound of 2*log(N)^2\r\n    BigInteger.prototype.isPrime = function (strict) {\r\n        var isPrime = isBasicPrime(this);\r\n        if (isPrime !== undefined) return isPrime;\r\n        var n = this.abs();\r\n        var bits = n.bitLength();\r\n        if(bits <= 64)\r\n            return millerRabinTest(n, [2, 325, 9375, 28178, 450775, 9780504, 1795265022]);\r\n        var logN = Math.log(2) * bits;\r\n        var t = Math.ceil((strict === true) ? (2 * Math.pow(logN, 2)) : logN);\r\n        for (var a = [], i = 0; i < t; i++) {\r\n            a.push(bigInt(i + 2));\r\n        }\r\n        return millerRabinTest(n, a);\r\n    };\r\n    SmallInteger.prototype.isPrime = BigInteger.prototype.isPrime;\r\n\r\n    BigInteger.prototype.isProbablePrime = function (iterations) {\r\n        var isPrime = isBasicPrime(this);\r\n        if (isPrime !== undefined) return isPrime;\r\n        var n = this.abs();\r\n        var t = iterations === undefined ? 5 : iterations;\r\n        for (var a = [], i = 0; i < t; i++) {\r\n            a.push(bigInt.randBetween(2, n.minus(2)));\r\n        }\r\n        return millerRabinTest(n, a);\r\n    };\r\n    SmallInteger.prototype.isProbablePrime = BigInteger.prototype.isProbablePrime;\r\n\r\n    BigInteger.prototype.modInv = function (n) {\r\n        var t = bigInt.zero, newT = bigInt.one, r = parseValue(n), newR = this.abs(), q, lastT, lastR;\r\n        while (!newR.equals(bigInt.zero)) {\r\n            q = r.divide(newR);\r\n            lastT = t;\r\n            lastR = r;\r\n            t = newT;\r\n            r = newR;\r\n            newT = lastT.subtract(q.multiply(newT));\r\n            newR = lastR.subtract(q.multiply(newR));\r\n        }\r\n        if (!r.equals(1)) throw new Error(this.toString() + \" and \" + n.toString() + \" are not co-prime\");\r\n        if (t.compare(0) === -1) {\r\n            t = t.add(n);\r\n        }\r\n        if (this.isNegative()) {\r\n            return t.negate();\r\n        }\r\n        return t;\r\n    };\r\n\r\n    SmallInteger.prototype.modInv = BigInteger.prototype.modInv;\r\n\r\n    BigInteger.prototype.next = function () {\r\n        var value = this.value;\r\n        if (this.sign) {\r\n            return subtractSmall(value, 1, this.sign);\r\n        }\r\n        return new BigInteger(addSmall(value, 1), this.sign);\r\n    };\r\n    SmallInteger.prototype.next = function () {\r\n        var value = this.value;\r\n        if (value + 1 < MAX_INT) return new SmallInteger(value + 1);\r\n        return new BigInteger(MAX_INT_ARR, false);\r\n    };\r\n\r\n    BigInteger.prototype.prev = function () {\r\n        var value = this.value;\r\n        if (this.sign) {\r\n            return new BigInteger(addSmall(value, 1), true);\r\n        }\r\n        return subtractSmall(value, 1, this.sign);\r\n    };\r\n    SmallInteger.prototype.prev = function () {\r\n        var value = this.value;\r\n        if (value - 1 > -MAX_INT) return new SmallInteger(value - 1);\r\n        return new BigInteger(MAX_INT_ARR, true);\r\n    };\r\n\r\n    var powersOfTwo = [1];\r\n    while (2 * powersOfTwo[powersOfTwo.length - 1] <= BASE) powersOfTwo.push(2 * powersOfTwo[powersOfTwo.length - 1]);\r\n    var powers2Length = powersOfTwo.length, highestPower2 = powersOfTwo[powers2Length - 1];\r\n\r\n    function shift_isSmall(n) {\r\n        return ((typeof n === \"number\" || typeof n === \"string\") && +Math.abs(n) <= BASE) ||\r\n            (n instanceof BigInteger && n.value.length <= 1);\r\n    }\r\n\r\n    BigInteger.prototype.shiftLeft = function (n) {\r\n        if (!shift_isSmall(n)) {\r\n            throw new Error(String(n) + \" is too large for shifting.\");\r\n        }\r\n        n = +n;\r\n        if (n < 0) return this.shiftRight(-n);\r\n        var result = this;\r\n        if (result.isZero()) return result;\r\n        while (n >= powers2Length) {\r\n            result = result.multiply(highestPower2);\r\n            n -= powers2Length - 1;\r\n        }\r\n        return result.multiply(powersOfTwo[n]);\r\n    };\r\n    SmallInteger.prototype.shiftLeft = BigInteger.prototype.shiftLeft;\r\n\r\n    BigInteger.prototype.shiftRight = function (n) {\r\n        var remQuo;\r\n        if (!shift_isSmall(n)) {\r\n            throw new Error(String(n) + \" is too large for shifting.\");\r\n        }\r\n        n = +n;\r\n        if (n < 0) return this.shiftLeft(-n);\r\n        var result = this;\r\n        while (n >= powers2Length) {\r\n            if (result.isZero() || (result.isNegative() && result.isUnit())) return result;\r\n            remQuo = divModAny(result, highestPower2);\r\n            result = remQuo[1].isNegative() ? remQuo[0].prev() : remQuo[0];\r\n            n -= powers2Length - 1;\r\n        }\r\n        remQuo = divModAny(result, powersOfTwo[n]);\r\n        return remQuo[1].isNegative() ? remQuo[0].prev() : remQuo[0];\r\n    };\r\n    SmallInteger.prototype.shiftRight = BigInteger.prototype.shiftRight;\r\n\r\n    function bitwise(x, y, fn) {\r\n        y = parseValue(y);\r\n        var xSign = x.isNegative(), ySign = y.isNegative();\r\n        var xRem = xSign ? x.not() : x,\r\n            yRem = ySign ? y.not() : y;\r\n        var xDigit = 0, yDigit = 0;\r\n        var xDivMod = null, yDivMod = null;\r\n        var result = [];\r\n        while (!xRem.isZero() || !yRem.isZero()) {\r\n            xDivMod = divModAny(xRem, highestPower2);\r\n            xDigit = xDivMod[1].toJSNumber();\r\n            if (xSign) {\r\n                xDigit = highestPower2 - 1 - xDigit; // two's complement for negative numbers\r\n            }\r\n\r\n            yDivMod = divModAny(yRem, highestPower2);\r\n            yDigit = yDivMod[1].toJSNumber();\r\n            if (ySign) {\r\n                yDigit = highestPower2 - 1 - yDigit; // two's complement for negative numbers\r\n            }\r\n\r\n            xRem = xDivMod[0];\r\n            yRem = yDivMod[0];\r\n            result.push(fn(xDigit, yDigit));\r\n        }\r\n        var sum = fn(xSign ? 1 : 0, ySign ? 1 : 0) !== 0 ? bigInt(-1) : bigInt(0);\r\n        for (var i = result.length - 1; i >= 0; i -= 1) {\r\n            sum = sum.multiply(highestPower2).add(bigInt(result[i]));\r\n        }\r\n        return sum;\r\n    }\r\n\r\n    BigInteger.prototype.not = function () {\r\n        return this.negate().prev();\r\n    };\r\n    SmallInteger.prototype.not = BigInteger.prototype.not;\r\n\r\n    BigInteger.prototype.and = function (n) {\r\n        return bitwise(this, n, function (a, b) { return a & b; });\r\n    };\r\n    SmallInteger.prototype.and = BigInteger.prototype.and;\r\n\r\n    BigInteger.prototype.or = function (n) {\r\n        return bitwise(this, n, function (a, b) { return a | b; });\r\n    };\r\n    SmallInteger.prototype.or = BigInteger.prototype.or;\r\n\r\n    BigInteger.prototype.xor = function (n) {\r\n        return bitwise(this, n, function (a, b) { return a ^ b; });\r\n    };\r\n    SmallInteger.prototype.xor = BigInteger.prototype.xor;\r\n\r\n    var LOBMASK_I = 1 << 30, LOBMASK_BI = (BASE & -BASE) * (BASE & -BASE) | LOBMASK_I;\r\n    function roughLOB(n) { // get lowestOneBit (rough)\r\n        // SmallInteger: return Min(lowestOneBit(n), 1 << 30)\r\n        // BigInteger: return Min(lowestOneBit(n), 1 << 14) [BASE=1e7]\r\n        var v = n.value, x = typeof v === \"number\" ? v | LOBMASK_I : v[0] + v[1] * BASE | LOBMASK_BI;\r\n        return x & -x;\r\n    }\r\n\r\n    function integerLogarithm(value, base) {\r\n        if (base.compareTo(value) <= 0) {\r\n            var tmp = integerLogarithm(value, base.square(base));\r\n            var p = tmp.p;\r\n            var e = tmp.e;\r\n            var t = p.multiply(base);\r\n            return t.compareTo(value) <= 0 ? { p: t, e: e * 2 + 1 } : { p: p, e: e * 2 };\r\n        }\r\n        return { p: bigInt(1), e: 0 };\r\n    }\r\n\r\n    BigInteger.prototype.bitLength = function () {\r\n        var n = this;\r\n        if (n.compareTo(bigInt(0)) < 0) {\r\n            n = n.negate().subtract(bigInt(1));\r\n        }\r\n        if (n.compareTo(bigInt(0)) === 0) {\r\n            return bigInt(0);\r\n        }\r\n        return bigInt(integerLogarithm(n, bigInt(2)).e).add(bigInt(1));\r\n    }\r\n    SmallInteger.prototype.bitLength = BigInteger.prototype.bitLength;\r\n\r\n    function max(a, b) {\r\n        a = parseValue(a);\r\n        b = parseValue(b);\r\n        return a.greater(b) ? a : b;\r\n    }\r\n    function min(a, b) {\r\n        a = parseValue(a);\r\n        b = parseValue(b);\r\n        return a.lesser(b) ? a : b;\r\n    }\r\n    function gcd(a, b) {\r\n        a = parseValue(a).abs();\r\n        b = parseValue(b).abs();\r\n        if (a.equals(b)) return a;\r\n        if (a.isZero()) return b;\r\n        if (b.isZero()) return a;\r\n        var c = Integer[1], d, t;\r\n        while (a.isEven() && b.isEven()) {\r\n            d = Math.min(roughLOB(a), roughLOB(b));\r\n            a = a.divide(d);\r\n            b = b.divide(d);\r\n            c = c.multiply(d);\r\n        }\r\n        while (a.isEven()) {\r\n            a = a.divide(roughLOB(a));\r\n        }\r\n        do {\r\n            while (b.isEven()) {\r\n                b = b.divide(roughLOB(b));\r\n            }\r\n            if (a.greater(b)) {\r\n                t = b; b = a; a = t;\r\n            }\r\n            b = b.subtract(a);\r\n        } while (!b.isZero());\r\n        return c.isUnit() ? a : a.multiply(c);\r\n    }\r\n    function lcm(a, b) {\r\n        a = parseValue(a).abs();\r\n        b = parseValue(b).abs();\r\n        return a.divide(gcd(a, b)).multiply(b);\r\n    }\r\n    function randBetween(a, b) {\r\n        a = parseValue(a);\r\n        b = parseValue(b);\r\n        var low = min(a, b), high = max(a, b);\r\n        var range = high.subtract(low).add(1);\r\n        if (range.isSmall) return low.add(Math.floor(Math.random() * range));\r\n        var length = range.value.length - 1;\r\n        var result = [], restricted = true;\r\n        for (var i = length; i >= 0; i--) {\r\n            var top = restricted ? range.value[i] : BASE;\r\n            var digit = truncate(Math.random() * top);\r\n            result.unshift(digit);\r\n            if (digit < top) restricted = false;\r\n        }\r\n        result = arrayToSmall(result);\r\n        return low.add(typeof result === \"number\" ? new SmallInteger(result) : new BigInteger(result, false));\r\n    }\r\n    var parseBase = function (text, base) {\r\n        var length = text.length;\r\n        var i;\r\n        var absBase = Math.abs(base);\r\n        for (var i = 0; i < length; i++) {\r\n            var c = text[i].toLowerCase();\r\n            if (c === \"-\") continue;\r\n            if (/[a-z0-9]/.test(c)) {\r\n                if (/[0-9]/.test(c) && +c >= absBase) {\r\n                    if (c === \"1\" && absBase === 1) continue;\r\n                    throw new Error(c + \" is not a valid digit in base \" + base + \".\");\r\n                } else if (c.charCodeAt(0) - 87 >= absBase) {\r\n                    throw new Error(c + \" is not a valid digit in base \" + base + \".\");\r\n                }\r\n            }\r\n        }\r\n        if (2 <= base && base <= 36) {\r\n            if (length <= LOG_MAX_INT / Math.log(base)) {\r\n                var result = parseInt(text, base);\r\n                if (isNaN(result)) {\r\n                    throw new Error(c + \" is not a valid digit in base \" + base + \".\");\r\n                }\r\n                return new SmallInteger(parseInt(text, base));\r\n            }\r\n        }\r\n        base = parseValue(base);\r\n        var digits = [];\r\n        var isNegative = text[0] === \"-\";\r\n        for (i = isNegative ? 1 : 0; i < text.length; i++) {\r\n            var c = text[i].toLowerCase(),\r\n                charCode = c.charCodeAt(0);\r\n            if (48 <= charCode && charCode <= 57) digits.push(parseValue(c));\r\n            else if (97 <= charCode && charCode <= 122) digits.push(parseValue(c.charCodeAt(0) - 87));\r\n            else if (c === \"<\") {\r\n                var start = i;\r\n                do { i++; } while (text[i] !== \">\");\r\n                digits.push(parseValue(text.slice(start + 1, i)));\r\n            }\r\n            else throw new Error(c + \" is not a valid character\");\r\n        }\r\n        return parseBaseFromArray(digits, base, isNegative);\r\n    };\r\n\r\n    function parseBaseFromArray(digits, base, isNegative) {\r\n        var val = Integer[0], pow = Integer[1], i;\r\n        for (i = digits.length - 1; i >= 0; i--) {\r\n            val = val.add(digits[i].times(pow));\r\n            pow = pow.times(base);\r\n        }\r\n        return isNegative ? val.negate() : val;\r\n    }\r\n\r\n    function stringify(digit) {\r\n        if (digit <= 35) {\r\n            return \"0123456789abcdefghijklmnopqrstuvwxyz\".charAt(digit);\r\n        }\r\n        return \"<\" + digit + \">\";\r\n    }\r\n\r\n    function toBase(n, base) {\r\n        base = bigInt(base);\r\n        if (base.isZero()) {\r\n            if (n.isZero()) return { value: [0], isNegative: false };\r\n            throw new Error(\"Cannot convert nonzero numbers to base 0.\");\r\n        }\r\n        if (base.equals(-1)) {\r\n            if (n.isZero()) return { value: [0], isNegative: false };\r\n            if (n.isNegative())\r\n                return {\r\n                    value: [].concat.apply([], Array.apply(null, Array(-n))\r\n                        .map(Array.prototype.valueOf, [1, 0])\r\n                    ),\r\n                    isNegative: false\r\n                };\r\n\r\n            var arr = Array.apply(null, Array(+n - 1))\r\n                .map(Array.prototype.valueOf, [0, 1]);\r\n            arr.unshift([1]);\r\n            return {\r\n                value: [].concat.apply([], arr),\r\n                isNegative: false\r\n            };\r\n        }\r\n\r\n        var neg = false;\r\n        if (n.isNegative() && base.isPositive()) {\r\n            neg = true;\r\n            n = n.abs();\r\n        }\r\n        if (base.equals(1)) {\r\n            if (n.isZero()) return { value: [0], isNegative: false };\r\n\r\n            return {\r\n                value: Array.apply(null, Array(+n))\r\n                    .map(Number.prototype.valueOf, 1),\r\n                isNegative: neg\r\n            };\r\n        }\r\n        var out = [];\r\n        var left = n, divmod;\r\n        while (left.isNegative() || left.compareAbs(base) >= 0) {\r\n            divmod = left.divmod(base);\r\n            left = divmod.quotient;\r\n            var digit = divmod.remainder;\r\n            if (digit.isNegative()) {\r\n                digit = base.minus(digit).abs();\r\n                left = left.next();\r\n            }\r\n            out.push(digit.toJSNumber());\r\n        }\r\n        out.push(left.toJSNumber());\r\n        return { value: out.reverse(), isNegative: neg };\r\n    }\r\n\r\n    function toBaseString(n, base) {\r\n        var arr = toBase(n, base);\r\n        return (arr.isNegative ? \"-\" : \"\") + arr.value.map(stringify).join('');\r\n    }\r\n\r\n    BigInteger.prototype.toArray = function (radix) {\r\n        return toBase(this, radix);\r\n    };\r\n\r\n    SmallInteger.prototype.toArray = function (radix) {\r\n        return toBase(this, radix);\r\n    };\r\n\r\n    BigInteger.prototype.toString = function (radix) {\r\n        if (radix === undefined) radix = 10;\r\n        if (radix !== 10) return toBaseString(this, radix);\r\n        var v = this.value, l = v.length, str = String(v[--l]), zeros = \"0000000\", digit;\r\n        while (--l >= 0) {\r\n            digit = String(v[l]);\r\n            str += zeros.slice(digit.length) + digit;\r\n        }\r\n        var sign = this.sign ? \"-\" : \"\";\r\n        return sign + str;\r\n    };\r\n\r\n    SmallInteger.prototype.toString = function (radix) {\r\n        if (radix === undefined) radix = 10;\r\n        if (radix != 10) return toBaseString(this, radix);\r\n        return String(this.value);\r\n    };\r\n    BigInteger.prototype.toJSON = SmallInteger.prototype.toJSON = function () { return this.toString(); }\r\n\r\n    BigInteger.prototype.valueOf = function () {\r\n        return parseInt(this.toString(), 10);\r\n    };\r\n    BigInteger.prototype.toJSNumber = BigInteger.prototype.valueOf;\r\n\r\n    SmallInteger.prototype.valueOf = function () {\r\n        return this.value;\r\n    };\r\n    SmallInteger.prototype.toJSNumber = SmallInteger.prototype.valueOf;\r\n\r\n    function parseStringValue(v) {\r\n        if (isPrecise(+v)) {\r\n            var x = +v;\r\n            if (x === truncate(x))\r\n                return new SmallInteger(x);\r\n            throw new Error(\"Invalid integer: \" + v);\r\n        }\r\n        var sign = v[0] === \"-\";\r\n        if (sign) v = v.slice(1);\r\n        var split = v.split(/e/i);\r\n        if (split.length > 2) throw new Error(\"Invalid integer: \" + split.join(\"e\"));\r\n        if (split.length === 2) {\r\n            var exp = split[1];\r\n            if (exp[0] === \"+\") exp = exp.slice(1);\r\n            exp = +exp;\r\n            if (exp !== truncate(exp) || !isPrecise(exp)) throw new Error(\"Invalid integer: \" + exp + \" is not a valid exponent.\");\r\n            var text = split[0];\r\n            var decimalPlace = text.indexOf(\".\");\r\n            if (decimalPlace >= 0) {\r\n                exp -= text.length - decimalPlace - 1;\r\n                text = text.slice(0, decimalPlace) + text.slice(decimalPlace + 1);\r\n            }\r\n            if (exp < 0) throw new Error(\"Cannot include negative exponent part for integers\");\r\n            text += (new Array(exp + 1)).join(\"0\");\r\n            v = text;\r\n        }\r\n        var isValid = /^([0-9][0-9]*)$/.test(v);\r\n        if (!isValid) throw new Error(\"Invalid integer: \" + v);\r\n        var r = [], max = v.length, l = LOG_BASE, min = max - l;\r\n        while (max > 0) {\r\n            r.push(+v.slice(min, max));\r\n            min -= l;\r\n            if (min < 0) min = 0;\r\n            max -= l;\r\n        }\r\n        trim(r);\r\n        return new BigInteger(r, sign);\r\n    }\r\n\r\n    function parseNumberValue(v) {\r\n        if (isPrecise(v)) {\r\n            if (v !== truncate(v)) throw new Error(v + \" is not an integer.\");\r\n            return new SmallInteger(v);\r\n        }\r\n        return parseStringValue(v.toString());\r\n    }\r\n\r\n    function parseValue(v) {\r\n        if (typeof v === \"number\") {\r\n            return parseNumberValue(v);\r\n        }\r\n        if (typeof v === \"string\") {\r\n            return parseStringValue(v);\r\n        }\r\n        return v;\r\n    }\r\n    // Pre-define numbers in range [-999,999]\r\n    for (var i = 0; i < 1000; i++) {\r\n        Integer[i] = new SmallInteger(i);\r\n        if (i > 0) Integer[-i] = new SmallInteger(-i);\r\n    }\r\n    // Backwards compatibility\r\n    Integer.one = Integer[1];\r\n    Integer.zero = Integer[0];\r\n    Integer.minusOne = Integer[-1];\r\n    Integer.max = max;\r\n    Integer.min = min;\r\n    Integer.gcd = gcd;\r\n    Integer.lcm = lcm;\r\n    Integer.isInstance = function (x) { return x instanceof BigInteger || x instanceof SmallInteger; };\r\n    Integer.randBetween = randBetween;\r\n\r\n    Integer.fromArray = function (digits, base, isNegative) {\r\n        return parseBaseFromArray(digits.map(parseValue), parseValue(base || 10), isNegative);\r\n    };\r\n\r\n    return Integer;\r\n})();\r\n\r\n// Node.js check\r\nif (typeof module !== \"undefined\" && module.hasOwnProperty(\"exports\")) {\r\n    module.exports = bigInt;\r\n}\r\n\r\n//amd check\r\nif (typeof define === \"function\" && define.amd) {\r\n    define(\"big-integer\", [], function () {\r\n        return bigInt;\r\n    });\r\n}\r\n","var ERROR_MSG_INPUT = 'Input must be an string, Buffer or Uint8Array'\n\n// For convenience, let people hash a string, not just a Uint8Array\nfunction normalizeInput (input) {\n  var ret\n  if (input instanceof Uint8Array) {\n    ret = input\n  } else if (input instanceof Buffer) {\n    ret = new Uint8Array(input)\n  } else if (typeof (input) === 'string') {\n    ret = new Uint8Array(Buffer.from(input, 'utf8'))\n  } else {\n    throw new Error(ERROR_MSG_INPUT)\n  }\n  return ret\n}\n\n// Converts a Uint8Array to a hexadecimal string\n// For example, toHex([255, 0, 255]) returns \"ff00ff\"\nfunction toHex (bytes) {\n  return Array.prototype.map.call(bytes, function (n) {\n    return (n < 16 ? '0' : '') + n.toString(16)\n  }).join('')\n}\n\n// Converts any value in [0...2^32-1] to an 8-character hex string\nfunction uint32ToHex (val) {\n  return (0x100000000 + val).toString(16).substring(1)\n}\n\n// For debugging: prints out hash state in the same format as the RFC\n// sample computation exactly, so that you can diff\nfunction debugPrint (label, arr, size) {\n  var msg = '\\n' + label + ' = '\n  for (var i = 0; i < arr.length; i += 2) {\n    if (size === 32) {\n      msg += uint32ToHex(arr[i]).toUpperCase()\n      msg += ' '\n      msg += uint32ToHex(arr[i + 1]).toUpperCase()\n    } else if (size === 64) {\n      msg += uint32ToHex(arr[i + 1]).toUpperCase()\n      msg += uint32ToHex(arr[i]).toUpperCase()\n    } else throw new Error('Invalid size ' + size)\n    if (i % 6 === 4) {\n      msg += '\\n' + new Array(label.length + 4).join(' ')\n    } else if (i < arr.length - 2) {\n      msg += ' '\n    }\n  }\n  console.log(msg)\n}\n\n// For performance testing: generates N bytes of input, hashes M times\n// Measures and prints MB/second hash performance each time\nfunction testSpeed (hashFn, N, M) {\n  var startMs = new Date().getTime()\n\n  var input = new Uint8Array(N)\n  for (var i = 0; i < N; i++) {\n    input[i] = i % 256\n  }\n  var genMs = new Date().getTime()\n  console.log('Generated random input in ' + (genMs - startMs) + 'ms')\n  startMs = genMs\n\n  for (i = 0; i < M; i++) {\n    var hashHex = hashFn(input)\n    var hashMs = new Date().getTime()\n    var ms = hashMs - startMs\n    startMs = hashMs\n    console.log('Hashed in ' + ms + 'ms: ' + hashHex.substring(0, 20) + '...')\n    console.log(Math.round(N / (1 << 20) / (ms / 1000) * 100) / 100 + ' MB PER SECOND')\n  }\n}\n\nmodule.exports = {\n  normalizeInput: normalizeInput,\n  toHex: toHex,\n  debugPrint: debugPrint,\n  testSpeed: testSpeed\n}\n","// Blake2B in pure Javascript\n// Adapted from the reference implementation in RFC7693\n// Ported to Javascript by DC - https://github.com/dcposch\n\nvar util = require('./util')\n\n// 64-bit unsigned addition\n// Sets v[a,a+1] += v[b,b+1]\n// v should be a Uint32Array\nfunction ADD64AA (v, a, b) {\n  var o0 = v[a] + v[b]\n  var o1 = v[a + 1] + v[b + 1]\n  if (o0 >= 0x100000000) {\n    o1++\n  }\n  v[a] = o0\n  v[a + 1] = o1\n}\n\n// 64-bit unsigned addition\n// Sets v[a,a+1] += b\n// b0 is the low 32 bits of b, b1 represents the high 32 bits\nfunction ADD64AC (v, a, b0, b1) {\n  var o0 = v[a] + b0\n  if (b0 < 0) {\n    o0 += 0x100000000\n  }\n  var o1 = v[a + 1] + b1\n  if (o0 >= 0x100000000) {\n    o1++\n  }\n  v[a] = o0\n  v[a + 1] = o1\n}\n\n// Little-endian byte access\nfunction B2B_GET32 (arr, i) {\n  return (arr[i] ^\n  (arr[i + 1] << 8) ^\n  (arr[i + 2] << 16) ^\n  (arr[i + 3] << 24))\n}\n\n// G Mixing function\n// The ROTRs are inlined for speed\nfunction B2B_G (a, b, c, d, ix, iy) {\n  var x0 = m[ix]\n  var x1 = m[ix + 1]\n  var y0 = m[iy]\n  var y1 = m[iy + 1]\n\n  ADD64AA(v, a, b) // v[a,a+1] += v[b,b+1] ... in JS we must store a uint64 as two uint32s\n  ADD64AC(v, a, x0, x1) // v[a, a+1] += x ... x0 is the low 32 bits of x, x1 is the high 32 bits\n\n  // v[d,d+1] = (v[d,d+1] xor v[a,a+1]) rotated to the right by 32 bits\n  var xor0 = v[d] ^ v[a]\n  var xor1 = v[d + 1] ^ v[a + 1]\n  v[d] = xor1\n  v[d + 1] = xor0\n\n  ADD64AA(v, c, d)\n\n  // v[b,b+1] = (v[b,b+1] xor v[c,c+1]) rotated right by 24 bits\n  xor0 = v[b] ^ v[c]\n  xor1 = v[b + 1] ^ v[c + 1]\n  v[b] = (xor0 >>> 24) ^ (xor1 << 8)\n  v[b + 1] = (xor1 >>> 24) ^ (xor0 << 8)\n\n  ADD64AA(v, a, b)\n  ADD64AC(v, a, y0, y1)\n\n  // v[d,d+1] = (v[d,d+1] xor v[a,a+1]) rotated right by 16 bits\n  xor0 = v[d] ^ v[a]\n  xor1 = v[d + 1] ^ v[a + 1]\n  v[d] = (xor0 >>> 16) ^ (xor1 << 16)\n  v[d + 1] = (xor1 >>> 16) ^ (xor0 << 16)\n\n  ADD64AA(v, c, d)\n\n  // v[b,b+1] = (v[b,b+1] xor v[c,c+1]) rotated right by 63 bits\n  xor0 = v[b] ^ v[c]\n  xor1 = v[b + 1] ^ v[c + 1]\n  v[b] = (xor1 >>> 31) ^ (xor0 << 1)\n  v[b + 1] = (xor0 >>> 31) ^ (xor1 << 1)\n}\n\n// Initialization Vector\nvar BLAKE2B_IV32 = new Uint32Array([\n  0xF3BCC908, 0x6A09E667, 0x84CAA73B, 0xBB67AE85,\n  0xFE94F82B, 0x3C6EF372, 0x5F1D36F1, 0xA54FF53A,\n  0xADE682D1, 0x510E527F, 0x2B3E6C1F, 0x9B05688C,\n  0xFB41BD6B, 0x1F83D9AB, 0x137E2179, 0x5BE0CD19\n])\n\nvar SIGMA8 = [\n  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n  14, 10, 4, 8, 9, 15, 13, 6, 1, 12, 0, 2, 11, 7, 5, 3,\n  11, 8, 12, 0, 5, 2, 15, 13, 10, 14, 3, 6, 7, 1, 9, 4,\n  7, 9, 3, 1, 13, 12, 11, 14, 2, 6, 5, 10, 4, 0, 15, 8,\n  9, 0, 5, 7, 2, 4, 10, 15, 14, 1, 11, 12, 6, 8, 3, 13,\n  2, 12, 6, 10, 0, 11, 8, 3, 4, 13, 7, 5, 15, 14, 1, 9,\n  12, 5, 1, 15, 14, 13, 4, 10, 0, 7, 6, 3, 9, 2, 8, 11,\n  13, 11, 7, 14, 12, 1, 3, 9, 5, 0, 15, 4, 8, 6, 2, 10,\n  6, 15, 14, 9, 11, 3, 0, 8, 12, 2, 13, 7, 1, 4, 10, 5,\n  10, 2, 8, 4, 7, 6, 1, 5, 15, 11, 9, 14, 3, 12, 13, 0,\n  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n  14, 10, 4, 8, 9, 15, 13, 6, 1, 12, 0, 2, 11, 7, 5, 3\n]\n\n// These are offsets into a uint64 buffer.\n// Multiply them all by 2 to make them offsets into a uint32 buffer,\n// because this is Javascript and we don't have uint64s\nvar SIGMA82 = new Uint8Array(SIGMA8.map(function (x) { return x * 2 }))\n\n// Compression function. 'last' flag indicates last block.\n// Note we're representing 16 uint64s as 32 uint32s\nvar v = new Uint32Array(32)\nvar m = new Uint32Array(32)\nfunction blake2bCompress (ctx, last) {\n  var i = 0\n\n  // init work variables\n  for (i = 0; i < 16; i++) {\n    v[i] = ctx.h[i]\n    v[i + 16] = BLAKE2B_IV32[i]\n  }\n\n  // low 64 bits of offset\n  v[24] = v[24] ^ ctx.t\n  v[25] = v[25] ^ (ctx.t / 0x100000000)\n  // high 64 bits not supported, offset may not be higher than 2**53-1\n\n  // last block flag set ?\n  if (last) {\n    v[28] = ~v[28]\n    v[29] = ~v[29]\n  }\n\n  // get little-endian words\n  for (i = 0; i < 32; i++) {\n    m[i] = B2B_GET32(ctx.b, 4 * i)\n  }\n\n  // twelve rounds of mixing\n  // uncomment the DebugPrint calls to log the computation\n  // and match the RFC sample documentation\n  // util.debugPrint('          m[16]', m, 64)\n  for (i = 0; i < 12; i++) {\n    // util.debugPrint('   (i=' + (i < 10 ? ' ' : '') + i + ') v[16]', v, 64)\n    B2B_G(0, 8, 16, 24, SIGMA82[i * 16 + 0], SIGMA82[i * 16 + 1])\n    B2B_G(2, 10, 18, 26, SIGMA82[i * 16 + 2], SIGMA82[i * 16 + 3])\n    B2B_G(4, 12, 20, 28, SIGMA82[i * 16 + 4], SIGMA82[i * 16 + 5])\n    B2B_G(6, 14, 22, 30, SIGMA82[i * 16 + 6], SIGMA82[i * 16 + 7])\n    B2B_G(0, 10, 20, 30, SIGMA82[i * 16 + 8], SIGMA82[i * 16 + 9])\n    B2B_G(2, 12, 22, 24, SIGMA82[i * 16 + 10], SIGMA82[i * 16 + 11])\n    B2B_G(4, 14, 16, 26, SIGMA82[i * 16 + 12], SIGMA82[i * 16 + 13])\n    B2B_G(6, 8, 18, 28, SIGMA82[i * 16 + 14], SIGMA82[i * 16 + 15])\n  }\n  // util.debugPrint('   (i=12) v[16]', v, 64)\n\n  for (i = 0; i < 16; i++) {\n    ctx.h[i] = ctx.h[i] ^ v[i] ^ v[i + 16]\n  }\n  // util.debugPrint('h[8]', ctx.h, 64)\n}\n\n// Creates a BLAKE2b hashing context\n// Requires an output length between 1 and 64 bytes\n// Takes an optional Uint8Array key\nfunction blake2bInit (outlen, key) {\n  if (outlen === 0 || outlen > 64) {\n    throw new Error('Illegal output length, expected 0 < length <= 64')\n  }\n  if (key && key.length > 64) {\n    throw new Error('Illegal key, expected Uint8Array with 0 < length <= 64')\n  }\n\n  // state, 'param block'\n  var ctx = {\n    b: new Uint8Array(128),\n    h: new Uint32Array(16),\n    t: 0, // input count\n    c: 0, // pointer within buffer\n    outlen: outlen // output length in bytes\n  }\n\n  // initialize hash state\n  for (var i = 0; i < 16; i++) {\n    ctx.h[i] = BLAKE2B_IV32[i]\n  }\n  var keylen = key ? key.length : 0\n  ctx.h[0] ^= 0x01010000 ^ (keylen << 8) ^ outlen\n\n  // key the hash, if applicable\n  if (key) {\n    blake2bUpdate(ctx, key)\n    // at the end\n    ctx.c = 128\n  }\n\n  return ctx\n}\n\n// Updates a BLAKE2b streaming hash\n// Requires hash context and Uint8Array (byte array)\nfunction blake2bUpdate (ctx, input) {\n  for (var i = 0; i < input.length; i++) {\n    if (ctx.c === 128) { // buffer full ?\n      ctx.t += ctx.c // add counters\n      blake2bCompress(ctx, false) // compress (not last)\n      ctx.c = 0 // counter to zero\n    }\n    ctx.b[ctx.c++] = input[i]\n  }\n}\n\n// Completes a BLAKE2b streaming hash\n// Returns a Uint8Array containing the message digest\nfunction blake2bFinal (ctx) {\n  ctx.t += ctx.c // mark last block offset\n\n  while (ctx.c < 128) { // fill up with zeros\n    ctx.b[ctx.c++] = 0\n  }\n  blake2bCompress(ctx, true) // final block flag = 1\n\n  // little endian convert and store\n  var out = new Uint8Array(ctx.outlen)\n  for (var i = 0; i < ctx.outlen; i++) {\n    out[i] = ctx.h[i >> 2] >> (8 * (i & 3))\n  }\n  return out\n}\n\n// Computes the BLAKE2B hash of a string or byte array, and returns a Uint8Array\n//\n// Returns a n-byte Uint8Array\n//\n// Parameters:\n// - input - the input bytes, as a string, Buffer or Uint8Array\n// - key - optional key Uint8Array, up to 64 bytes\n// - outlen - optional output length in bytes, default 64\nfunction blake2b (input, key, outlen) {\n  // preprocess inputs\n  outlen = outlen || 64\n  input = util.normalizeInput(input)\n\n  // do the math\n  var ctx = blake2bInit(outlen, key)\n  blake2bUpdate(ctx, input)\n  return blake2bFinal(ctx)\n}\n\n// Computes the BLAKE2B hash of a string or byte array\n//\n// Returns an n-byte hash in hex, all lowercase\n//\n// Parameters:\n// - input - the input bytes, as a string, Buffer, or Uint8Array\n// - key - optional key Uint8Array, up to 64 bytes\n// - outlen - optional output length in bytes, default 64\nfunction blake2bHex (input, key, outlen) {\n  var output = blake2b(input, key, outlen)\n  return util.toHex(output)\n}\n\nmodule.exports = {\n  blake2b: blake2b,\n  blake2bHex: blake2bHex,\n  blake2bInit: blake2bInit,\n  blake2bUpdate: blake2bUpdate,\n  blake2bFinal: blake2bFinal\n}\n","// BLAKE2s hash function in pure Javascript\n// Adapted from the reference implementation in RFC7693\n// Ported to Javascript by DC - https://github.com/dcposch\n\nvar util = require('./util')\n\n// Little-endian byte access.\n// Expects a Uint8Array and an index\n// Returns the little-endian uint32 at v[i..i+3]\nfunction B2S_GET32 (v, i) {\n  return v[i] ^ (v[i + 1] << 8) ^ (v[i + 2] << 16) ^ (v[i + 3] << 24)\n}\n\n// Mixing function G.\nfunction B2S_G (a, b, c, d, x, y) {\n  v[a] = v[a] + v[b] + x\n  v[d] = ROTR32(v[d] ^ v[a], 16)\n  v[c] = v[c] + v[d]\n  v[b] = ROTR32(v[b] ^ v[c], 12)\n  v[a] = v[a] + v[b] + y\n  v[d] = ROTR32(v[d] ^ v[a], 8)\n  v[c] = v[c] + v[d]\n  v[b] = ROTR32(v[b] ^ v[c], 7)\n}\n\n// 32-bit right rotation\n// x should be a uint32\n// y must be between 1 and 31, inclusive\nfunction ROTR32 (x, y) {\n  return (x >>> y) ^ (x << (32 - y))\n}\n\n// Initialization Vector.\nvar BLAKE2S_IV = new Uint32Array([\n  0x6A09E667, 0xBB67AE85, 0x3C6EF372, 0xA54FF53A,\n  0x510E527F, 0x9B05688C, 0x1F83D9AB, 0x5BE0CD19])\n\nvar SIGMA = new Uint8Array([\n  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n  14, 10, 4, 8, 9, 15, 13, 6, 1, 12, 0, 2, 11, 7, 5, 3,\n  11, 8, 12, 0, 5, 2, 15, 13, 10, 14, 3, 6, 7, 1, 9, 4,\n  7, 9, 3, 1, 13, 12, 11, 14, 2, 6, 5, 10, 4, 0, 15, 8,\n  9, 0, 5, 7, 2, 4, 10, 15, 14, 1, 11, 12, 6, 8, 3, 13,\n  2, 12, 6, 10, 0, 11, 8, 3, 4, 13, 7, 5, 15, 14, 1, 9,\n  12, 5, 1, 15, 14, 13, 4, 10, 0, 7, 6, 3, 9, 2, 8, 11,\n  13, 11, 7, 14, 12, 1, 3, 9, 5, 0, 15, 4, 8, 6, 2, 10,\n  6, 15, 14, 9, 11, 3, 0, 8, 12, 2, 13, 7, 1, 4, 10, 5,\n  10, 2, 8, 4, 7, 6, 1, 5, 15, 11, 9, 14, 3, 12, 13, 0])\n\n// Compression function. \"last\" flag indicates last block\nvar v = new Uint32Array(16)\nvar m = new Uint32Array(16)\nfunction blake2sCompress (ctx, last) {\n  var i = 0\n  for (i = 0; i < 8; i++) { // init work variables\n    v[i] = ctx.h[i]\n    v[i + 8] = BLAKE2S_IV[i]\n  }\n\n  v[12] ^= ctx.t // low 32 bits of offset\n  v[13] ^= (ctx.t / 0x100000000) // high 32 bits\n  if (last) { // last block flag set ?\n    v[14] = ~v[14]\n  }\n\n  for (i = 0; i < 16; i++) { // get little-endian words\n    m[i] = B2S_GET32(ctx.b, 4 * i)\n  }\n\n  // ten rounds of mixing\n  // uncomment the DebugPrint calls to log the computation\n  // and match the RFC sample documentation\n  // util.debugPrint('          m[16]', m, 32)\n  for (i = 0; i < 10; i++) {\n    // util.debugPrint('   (i=' + i + ')  v[16]', v, 32)\n    B2S_G(0, 4, 8, 12, m[SIGMA[i * 16 + 0]], m[SIGMA[i * 16 + 1]])\n    B2S_G(1, 5, 9, 13, m[SIGMA[i * 16 + 2]], m[SIGMA[i * 16 + 3]])\n    B2S_G(2, 6, 10, 14, m[SIGMA[i * 16 + 4]], m[SIGMA[i * 16 + 5]])\n    B2S_G(3, 7, 11, 15, m[SIGMA[i * 16 + 6]], m[SIGMA[i * 16 + 7]])\n    B2S_G(0, 5, 10, 15, m[SIGMA[i * 16 + 8]], m[SIGMA[i * 16 + 9]])\n    B2S_G(1, 6, 11, 12, m[SIGMA[i * 16 + 10]], m[SIGMA[i * 16 + 11]])\n    B2S_G(2, 7, 8, 13, m[SIGMA[i * 16 + 12]], m[SIGMA[i * 16 + 13]])\n    B2S_G(3, 4, 9, 14, m[SIGMA[i * 16 + 14]], m[SIGMA[i * 16 + 15]])\n  }\n  // util.debugPrint('   (i=10) v[16]', v, 32)\n\n  for (i = 0; i < 8; i++) {\n    ctx.h[i] ^= v[i] ^ v[i + 8]\n  }\n  // util.debugPrint('h[8]', ctx.h, 32)\n}\n\n// Creates a BLAKE2s hashing context\n// Requires an output length between 1 and 32 bytes\n// Takes an optional Uint8Array key\nfunction blake2sInit (outlen, key) {\n  if (!(outlen > 0 && outlen <= 32)) {\n    throw new Error('Incorrect output length, should be in [1, 32]')\n  }\n  var keylen = key ? key.length : 0\n  if (key && !(keylen > 0 && keylen <= 32)) {\n    throw new Error('Incorrect key length, should be in [1, 32]')\n  }\n\n  var ctx = {\n    h: new Uint32Array(BLAKE2S_IV), // hash state\n    b: new Uint32Array(64), // input block\n    c: 0, // pointer within block\n    t: 0, // input count\n    outlen: outlen // output length in bytes\n  }\n  ctx.h[0] ^= 0x01010000 ^ (keylen << 8) ^ outlen\n\n  if (keylen > 0) {\n    blake2sUpdate(ctx, key)\n    ctx.c = 64 // at the end\n  }\n\n  return ctx\n}\n\n// Updates a BLAKE2s streaming hash\n// Requires hash context and Uint8Array (byte array)\nfunction blake2sUpdate (ctx, input) {\n  for (var i = 0; i < input.length; i++) {\n    if (ctx.c === 64) { // buffer full ?\n      ctx.t += ctx.c // add counters\n      blake2sCompress(ctx, false) // compress (not last)\n      ctx.c = 0 // counter to zero\n    }\n    ctx.b[ctx.c++] = input[i]\n  }\n}\n\n// Completes a BLAKE2s streaming hash\n// Returns a Uint8Array containing the message digest\nfunction blake2sFinal (ctx) {\n  ctx.t += ctx.c // mark last block offset\n  while (ctx.c < 64) { // fill up with zeros\n    ctx.b[ctx.c++] = 0\n  }\n  blake2sCompress(ctx, true) // final block flag = 1\n\n  // little endian convert and store\n  var out = new Uint8Array(ctx.outlen)\n  for (var i = 0; i < ctx.outlen; i++) {\n    out[i] = (ctx.h[i >> 2] >> (8 * (i & 3))) & 0xFF\n  }\n  return out\n}\n\n// Computes the BLAKE2S hash of a string or byte array, and returns a Uint8Array\n//\n// Returns a n-byte Uint8Array\n//\n// Parameters:\n// - input - the input bytes, as a string, Buffer, or Uint8Array\n// - key - optional key Uint8Array, up to 32 bytes\n// - outlen - optional output length in bytes, default 64\nfunction blake2s (input, key, outlen) {\n  // preprocess inputs\n  outlen = outlen || 32\n  input = util.normalizeInput(input)\n\n  // do the math\n  var ctx = blake2sInit(outlen, key)\n  blake2sUpdate(ctx, input)\n  return blake2sFinal(ctx)\n}\n\n// Computes the BLAKE2S hash of a string or byte array\n//\n// Returns an n-byte hash in hex, all lowercase\n//\n// Parameters:\n// - input - the input bytes, as a string, Buffer, or Uint8Array\n// - key - optional key Uint8Array, up to 32 bytes\n// - outlen - optional output length in bytes, default 64\nfunction blake2sHex (input, key, outlen) {\n  var output = blake2s(input, key, outlen)\n  return util.toHex(output)\n}\n\nmodule.exports = {\n  blake2s: blake2s,\n  blake2sHex: blake2sHex,\n  blake2sInit: blake2sInit,\n  blake2sUpdate: blake2sUpdate,\n  blake2sFinal: blake2sFinal\n}\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(\n      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)\n    ))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","var b2b = require('./blake2b')\nvar b2s = require('./blake2s')\n\nmodule.exports = {\n  blake2b: b2b.blake2b,\n  blake2bHex: b2b.blake2bHex,\n  blake2bInit: b2b.blake2bInit,\n  blake2bUpdate: b2b.blake2bUpdate,\n  blake2bFinal: b2b.blake2bFinal,\n  blake2s: b2s.blake2s,\n  blake2sHex: b2s.blake2sHex,\n  blake2sInit: b2s.blake2sInit,\n  blake2sUpdate: b2s.blake2sUpdate,\n  blake2sFinal: b2s.blake2sFinal\n}\n","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol.for === 'function')\n    ? Symbol.for('nodejs.util.inspect.custom')\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nvar K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    var arr = new Uint8Array(1)\n    var proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  var buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\n// Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\nif (typeof Symbol !== 'undefined' && Symbol.species != null &&\n    Buffer[Symbol.species] === Buffer) {\n  Object.defineProperty(Buffer, Symbol.species, {\n    value: null,\n    configurable: true,\n    enumerable: false,\n    writable: false\n  })\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayLike(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  var valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  var b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(\n      value[Symbol.toPrimitive]('string'), encodingOrOffset, length\n    )\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  var length = byteLength(string, encoding) | 0\n  var buf = createBuffer(length)\n\n  var actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  var buf = createBuffer(length)\n  for (var i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  var buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    var buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      buf = Buffer.from(buf)\n    }\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  var len = string.length\n  var mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  var strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n        : (firstByte > 0xBF) ? 2\n          : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (var i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    var len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nvar hexSliceLookupTable = (function () {\n  var alphabet = '0123456789abcdef'\n  var table = new Array(256)\n  for (var i = 0; i < 16; ++i) {\n    var i16 = i * 16\n    for (var j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n","/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.prototype = Object.create(Buffer.prototype)\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n","'use strict'\n// base-x encoding / decoding\n// Copyright (c) 2018 base-x contributors\n// Copyright (c) 2014-2018 The Bitcoin Core developers (base58.cpp)\n// Distributed under the MIT software license, see the accompanying\n// file LICENSE or http://www.opensource.org/licenses/mit-license.php.\n// @ts-ignore\nvar _Buffer = require('safe-buffer').Buffer\nfunction base (ALPHABET) {\n  if (ALPHABET.length >= 255) { throw new TypeError('Alphabet too long') }\n  var BASE_MAP = new Uint8Array(256)\n  for (var j = 0; j < BASE_MAP.length; j++) {\n    BASE_MAP[j] = 255\n  }\n  for (var i = 0; i < ALPHABET.length; i++) {\n    var x = ALPHABET.charAt(i)\n    var xc = x.charCodeAt(0)\n    if (BASE_MAP[xc] !== 255) { throw new TypeError(x + ' is ambiguous') }\n    BASE_MAP[xc] = i\n  }\n  var BASE = ALPHABET.length\n  var LEADER = ALPHABET.charAt(0)\n  var FACTOR = Math.log(BASE) / Math.log(256) // log(BASE) / log(256), rounded up\n  var iFACTOR = Math.log(256) / Math.log(BASE) // log(256) / log(BASE), rounded up\n  function encode (source) {\n    if (Array.isArray(source) || source instanceof Uint8Array) { source = _Buffer.from(source) }\n    if (!_Buffer.isBuffer(source)) { throw new TypeError('Expected Buffer') }\n    if (source.length === 0) { return '' }\n        // Skip & count leading zeroes.\n    var zeroes = 0\n    var length = 0\n    var pbegin = 0\n    var pend = source.length\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++\n      zeroes++\n    }\n        // Allocate enough space in big-endian base58 representation.\n    var size = ((pend - pbegin) * iFACTOR + 1) >>> 0\n    var b58 = new Uint8Array(size)\n        // Process the bytes.\n    while (pbegin !== pend) {\n      var carry = source[pbegin]\n            // Apply \"b58 = b58 * 256 + ch\".\n      var i = 0\n      for (var it1 = size - 1; (carry !== 0 || i < length) && (it1 !== -1); it1--, i++) {\n        carry += (256 * b58[it1]) >>> 0\n        b58[it1] = (carry % BASE) >>> 0\n        carry = (carry / BASE) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      pbegin++\n    }\n        // Skip leading zeroes in base58 result.\n    var it2 = size - length\n    while (it2 !== size && b58[it2] === 0) {\n      it2++\n    }\n        // Translate the result into a string.\n    var str = LEADER.repeat(zeroes)\n    for (; it2 < size; ++it2) { str += ALPHABET.charAt(b58[it2]) }\n    return str\n  }\n  function decodeUnsafe (source) {\n    if (typeof source !== 'string') { throw new TypeError('Expected String') }\n    if (source.length === 0) { return _Buffer.alloc(0) }\n    var psz = 0\n        // Skip leading spaces.\n    if (source[psz] === ' ') { return }\n        // Skip and count leading '1's.\n    var zeroes = 0\n    var length = 0\n    while (source[psz] === LEADER) {\n      zeroes++\n      psz++\n    }\n        // Allocate enough space in big-endian base256 representation.\n    var size = (((source.length - psz) * FACTOR) + 1) >>> 0 // log(58) / log(256), rounded up.\n    var b256 = new Uint8Array(size)\n        // Process the characters.\n    while (source[psz]) {\n            // Decode character\n      var carry = BASE_MAP[source.charCodeAt(psz)]\n            // Invalid character\n      if (carry === 255) { return }\n      var i = 0\n      for (var it3 = size - 1; (carry !== 0 || i < length) && (it3 !== -1); it3--, i++) {\n        carry += (BASE * b256[it3]) >>> 0\n        b256[it3] = (carry % 256) >>> 0\n        carry = (carry / 256) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      psz++\n    }\n        // Skip trailing spaces.\n    if (source[psz] === ' ') { return }\n        // Skip leading zeroes in b256.\n    var it4 = size - length\n    while (it4 !== size && b256[it4] === 0) {\n      it4++\n    }\n    var vch = _Buffer.allocUnsafe(zeroes + (size - it4))\n    vch.fill(0x00, 0, zeroes)\n    var j = zeroes\n    while (it4 !== size) {\n      vch[j++] = b256[it4++]\n    }\n    return vch\n  }\n  function decode (string) {\n    var buffer = decodeUnsafe(string)\n    if (buffer) { return buffer }\n    throw new Error('Non-base' + BASE + ' character')\n  }\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  }\n}\nmodule.exports = base\n","var basex = require('base-x')\nvar ALPHABET = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n\nmodule.exports = basex(ALPHABET)\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol.for === 'function')\n    ? Symbol.for('nodejs.util.inspect.custom')\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nvar K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    var arr = new Uint8Array(1)\n    var proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  var buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayLike(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  var valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  var b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(\n      value[Symbol.toPrimitive]('string'), encodingOrOffset, length\n    )\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  var length = byteLength(string, encoding) | 0\n  var buf = createBuffer(length)\n\n  var actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  var buf = createBuffer(length)\n  for (var i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  var buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    var buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      buf = Buffer.from(buf)\n    }\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  var len = string.length\n  var mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  var strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n        : (firstByte > 0xBF) ? 2\n          : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (var i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    var len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nvar hexSliceLookupTable = (function () {\n  var alphabet = '0123456789abcdef'\n  var table = new Array(256)\n  for (var i = 0; i < 16; ++i) {\n    var i16 = i * 16\n    for (var j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n","\"use strict\";var copy=function copy(I,i){return function(O,o){var oi=o*2;var ii=i*2;O[oi]=I[ii];O[oi+1]=I[ii+1]}};module.exports=copy;","\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:true});exports[\"default\"]=void 0;var _copy=_interopRequireDefault(require(\"../copy\"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{\"default\":obj}}var chi=function chi(_ref){var A=_ref.A,C=_ref.C;for(var y=0;y<25;y+=5){for(var x=0;x<5;x++){(0,_copy[\"default\"])(A,y+x)(C,x)}for(var _x=0;_x<5;_x++){var xy=(y+_x)*2;var x1=(_x+1)%5*2;var x2=(_x+2)%5*2;A[xy]^=~C[x1]&C[x2];A[xy+1]^=~C[x1+1]&C[x2+1]}}};var _default=chi;exports[\"default\"]=_default;","\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:true});exports[\"default\"]=void 0;var ROUND_CONSTANTS=new Uint32Array([0,1,0,32898,2147483648,32906,2147483648,2147516416,0,32907,0,2147483649,2147483648,2147516545,2147483648,32777,0,138,0,136,0,2147516425,0,2147483658,0,2147516555,2147483648,139,2147483648,32905,2147483648,32771,2147483648,32770,2147483648,128,0,32778,2147483648,2147483658,2147483648,2147516545,2147483648,32896,0,2147483649,2147483648,2147516424]);var _default=ROUND_CONSTANTS;exports[\"default\"]=_default;","\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:true});exports[\"default\"]=void 0;var _roundConstants=_interopRequireDefault(require(\"./round-constants\"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{\"default\":obj}}var iota=function iota(_ref){var A=_ref.A,roundIndex=_ref.roundIndex;var i=roundIndex*2;A[0]^=_roundConstants[\"default\"][i];A[1]^=_roundConstants[\"default\"][i+1]};var _default=iota;exports[\"default\"]=_default;","\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:true});exports[\"default\"]=void 0;var PI_SHUFFLES=[10,7,11,17,18,3,5,16,8,21,24,4,15,23,19,13,12,2,20,14,22,9,6,1];var _default=PI_SHUFFLES;exports[\"default\"]=_default;","\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:true});exports[\"default\"]=void 0;var RHO_OFFSETS=[1,3,6,10,15,21,28,36,45,55,2,14,27,41,56,8,25,43,62,18,39,61,20,44];var _default=RHO_OFFSETS;exports[\"default\"]=_default;","\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:true});exports[\"default\"]=void 0;var _piShuffles=_interopRequireDefault(require(\"./pi-shuffles\"));var _rhoOffsets=_interopRequireDefault(require(\"./rho-offsets\"));var _copy=_interopRequireDefault(require(\"../copy\"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{\"default\":obj}}var rhoPi=function rhoPi(_ref){var A=_ref.A,C=_ref.C,W=_ref.W;(0,_copy[\"default\"])(A,1)(W,0);var H=0;var L=0;var Wi=0;var ri=32;for(var i=0;i<24;i++){var j=_piShuffles[\"default\"][i];var r=_rhoOffsets[\"default\"][i];(0,_copy[\"default\"])(A,j)(C,0);H=W[0];L=W[1];ri=32-r;Wi=r<32?0:1;W[Wi]=H<<r|L>>>ri;W[(Wi+1)%2]=L<<r|H>>>ri;(0,_copy[\"default\"])(W,0)(A,j);(0,_copy[\"default\"])(C,0)(W,0)}};var _default=rhoPi;exports[\"default\"]=_default;","\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:true});exports[\"default\"]=void 0;var _copy=_interopRequireDefault(require(\"../copy\"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{\"default\":obj}}var theta=function theta(_ref){var A=_ref.A,C=_ref.C,D=_ref.D,W=_ref.W;var H=0;var L=0;for(var x=0;x<5;x++){var x20=x*2;var x21=(x+5)*2;var x22=(x+10)*2;var x23=(x+15)*2;var x24=(x+20)*2;C[x20]=A[x20]^A[x21]^A[x22]^A[x23]^A[x24];C[x20+1]=A[x20+1]^A[x21+1]^A[x22+1]^A[x23+1]^A[x24+1]}for(var _x=0;_x<5;_x++){(0,_copy[\"default\"])(C,(_x+1)%5)(W,0);H=W[0];L=W[1];W[0]=H<<1|L>>>31;W[1]=L<<1|H>>>31;D[_x*2]=C[(_x+4)%5*2]^W[0];D[_x*2+1]=C[(_x+4)%5*2+1]^W[1];for(var y=0;y<25;y+=5){A[(y+_x)*2]^=D[_x*2];A[(y+_x)*2+1]^=D[_x*2+1]}}};var _default=theta;exports[\"default\"]=_default;","\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:true});exports[\"default\"]=void 0;var _chi=_interopRequireDefault(require(\"./chi\"));var _iota=_interopRequireDefault(require(\"./iota\"));var _rhoPi=_interopRequireDefault(require(\"./rho-pi\"));var _theta=_interopRequireDefault(require(\"./theta\"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{\"default\":obj}}var permute=function permute(){var C=new Uint32Array(10);var D=new Uint32Array(10);var W=new Uint32Array(2);return function(A){for(var roundIndex=0;roundIndex<24;roundIndex++){(0,_theta[\"default\"])({A:A,C:C,D:D,W:W});(0,_rhoPi[\"default\"])({A:A,C:C,W:W});(0,_chi[\"default\"])({A:A,C:C});(0,_iota[\"default\"])({A:A,roundIndex:roundIndex})}C.fill(0);D.fill(0);W.fill(0)}};var _default=permute;exports[\"default\"]=_default;","\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:true});exports[\"default\"]=void 0;var _buffer=require(\"buffer\");var _permute=_interopRequireDefault(require(\"./permute\"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{\"default\":obj}}var xorWords=function xorWords(I,O){for(var i=0;i<I.length;i+=8){var o=i/4;O[o]^=I[i+7]<<24|I[i+6]<<16|I[i+5]<<8|I[i+4];O[o+1]^=I[i+3]<<24|I[i+2]<<16|I[i+1]<<8|I[i]}return O};var readWords=function readWords(I,O){for(var o=0;o<O.length;o+=8){var i=o/4;O[o]=I[i+1];O[o+1]=I[i+1]>>>8;O[o+2]=I[i+1]>>>16;O[o+3]=I[i+1]>>>24;O[o+4]=I[i];O[o+5]=I[i]>>>8;O[o+6]=I[i]>>>16;O[o+7]=I[i]>>>24}return O};var Sponge=function Sponge(_ref){var _this=this;var capacity=_ref.capacity,padding=_ref.padding;var keccak=(0,_permute[\"default\"])();var stateSize=200;var blockSize=capacity/8;var queueSize=stateSize-capacity/4;var queueOffset=0;var state=new Uint32Array(stateSize/4);var queue=_buffer.Buffer.allocUnsafe(queueSize);this.absorb=function(buffer){for(var i=0;i<buffer.length;i++){queue[queueOffset]=buffer[i];queueOffset+=1;if(queueOffset>=queueSize){xorWords(queue,state);keccak(state);queueOffset=0}}return _this};this.squeeze=function(){var options=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};var output={buffer:options.buffer||_buffer.Buffer.allocUnsafe(blockSize),padding:options.padding||padding,queue:_buffer.Buffer.allocUnsafe(queue.length),state:new Uint32Array(state.length)};queue.copy(output.queue);for(var i=0;i<state.length;i++){output.state[i]=state[i]}output.queue.fill(0,queueOffset);output.queue[queueOffset]|=output.padding;output.queue[queueSize-1]|=128;xorWords(output.queue,output.state);for(var offset=0;offset<output.buffer.length;offset+=queueSize){keccak(output.state);readWords(output.state,output.buffer.slice(offset,offset+queueSize))}return output.buffer};this.reset=function(){queue.fill(0);state.fill(0);queueOffset=0;return _this};return this};var _default=Sponge;exports[\"default\"]=_default;","\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:true});exports[\"default\"]=exports.SHAKE=exports.SHA3Hash=exports.SHA3=exports.Keccak=void 0;var _buffer=require(\"buffer\");var _sponge=_interopRequireDefault(require(\"./sponge\"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{\"default\":obj}}var createHash=function createHash(_ref){var allowedSizes=_ref.allowedSizes,padding=_ref.padding;return function Hash(){var _this=this;var size=arguments.length>0&&arguments[0]!==undefined?arguments[0]:512;if(!this||this.constructor!==Hash){return new Hash(size)}if(allowedSizes&&!allowedSizes.includes(size)){throw new Error(\"Unsupported hash length\")}var sponge=new _sponge[\"default\"]({capacity:size});this.update=function(input){var encoding=arguments.length>1&&arguments[1]!==undefined?arguments[1]:\"utf8\";if(_buffer.Buffer.isBuffer(input)){sponge.absorb(input);return _this}if(typeof input===\"string\"){return _this.update(_buffer.Buffer.from(input,encoding))}throw new TypeError(\"Not a string or buffer\")};this.digest=function(){var formatOrOptions=arguments.length>0&&arguments[0]!==undefined?arguments[0]:\"binary\";var options=typeof formatOrOptions===\"string\"?{format:formatOrOptions}:formatOrOptions;var buffer=sponge.squeeze({buffer:options.buffer,padding:options.padding||padding});if(options.format&&options.format!==\"binary\"){return buffer.toString(options.format)}return buffer};this.reset=function(){sponge.reset();return _this};return this}};var Keccak=createHash({allowedSizes:[224,256,384,512],padding:1});exports.Keccak=Keccak;var SHA3=createHash({allowedSizes:[224,256,384,512],padding:6});exports.SHA3=SHA3;var SHAKE=createHash({allowedSizes:[128,256],padding:31});exports.SHAKE=SHAKE;var SHA3Hash=Keccak;exports.SHA3Hash=SHA3Hash;SHA3.SHA3Hash=SHA3Hash;var _default=SHA3;exports[\"default\"]=_default;","// Extracted from https://github.com/crypto-browserify/ripemd160\nconst ARRAY16 = new Array(16);\nconst zl = initU8Array([\n    0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n    7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8,\n    3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12,\n    1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2,\n    4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13\n]);\nconst zr = initU8Array([\n    5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12,\n    6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2,\n    15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13,\n    8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14,\n    12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11\n]);\nconst sl = initU8Array([\n    11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8,\n    7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12,\n    11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5,\n    11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12,\n    9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6\n]);\nconst sr = initU8Array([\n    8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6,\n    9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11,\n    9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5,\n    15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8,\n    8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11\n]);\nconst hl = initU32Array([0x00000000, 0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xa953fd4e]);\nconst hr = initU32Array([0x50a28be6, 0x5c4dd124, 0x6d703ef3, 0x7a6d76e9, 0x00000000]);\nfunction rotl(x, n) {\n    return (x << n) | (x >>> (32 - n));\n}\nfunction fn1(a, b, c, d, e, m, k, s) {\n    return (rotl((a + (b ^ c ^ d) + m + k) | 0, s) + e) | 0;\n}\nfunction fn2(a, b, c, d, e, m, k, s) {\n    return (rotl((a + ((b & c) | ((~b) & d)) + m + k) | 0, s) + e) | 0;\n}\nfunction fn3(a, b, c, d, e, m, k, s) {\n    return (rotl((a + ((b | (~c)) ^ d) + m + k) | 0, s) + e) | 0;\n}\nfunction fn4(a, b, c, d, e, m, k, s) {\n    return (rotl((a + ((b & d) | (c & (~d))) + m + k) | 0, s) + e) | 0;\n}\nfunction fn5(a, b, c, d, e, m, k, s) {\n    return (rotl((a + (b ^ (c | (~d))) + m + k) | 0, s) + e) | 0;\n}\nfunction readInt32LE(buffer, offset) {\n    offset >>>= 0;\n    return (buffer[offset])\n        | (buffer[offset + 1] << 8)\n        | (buffer[offset + 2] << 16)\n        | (buffer[offset + 3] << 24);\n}\nfunction writeUInt32LE(buffer, value, offset) {\n    value = +value;\n    offset >>>= 0;\n    buffer[offset + 3] = (value >>> 24);\n    buffer[offset + 2] = (value >>> 16);\n    buffer[offset + 1] = (value >>> 8);\n    buffer[offset] = (value & 0xff);\n    return offset + 4;\n}\nfunction writeInt32LE(buffer, value, offset) {\n    value = +value;\n    offset >>>= 0;\n    buffer[offset] = (value & 0xff);\n    buffer[offset + 1] = (value >>> 8);\n    buffer[offset + 2] = (value >>> 16);\n    buffer[offset + 3] = (value >>> 24);\n    return offset + 4;\n}\nfunction initU32Array(data) {\n    if (typeof Uint32Array !== 'undefined') {\n        return new Uint32Array(data);\n    }\n    else {\n        return data;\n    }\n}\nfunction initU8Array(data) {\n    if (typeof Uint8Array !== 'undefined') {\n        return new Uint8Array(data);\n    }\n    else {\n        return data;\n    }\n}\nfunction createU8Array(size) {\n    if (typeof Uint8Array !== 'undefined') {\n        return new Uint8Array(size);\n    }\n    else {\n        return new Array(size);\n    }\n}\nexport class RIPEMD160 {\n    constructor() {\n        this._block = createU8Array(64);\n        this._blockSize = 64;\n        this._blockOffset = 0;\n        this._length = [0, 0, 0, 0];\n        this._finalized = false;\n        this._a = 0x67452301;\n        this._b = 0xefcdab89;\n        this._c = 0x98badcfe;\n        this._d = 0x10325476;\n        this._e = 0xc3d2e1f0;\n    }\n    update(data) {\n        if (this._finalized)\n            throw new Error('Digest already called');\n        // consume data\n        const block = this._block;\n        let offset = 0;\n        while (this._blockOffset + data.length - offset >= this._blockSize) {\n            for (let i = this._blockOffset; i < this._blockSize;)\n                block[i++] = data[offset++];\n            this._update();\n            this._blockOffset = 0;\n        }\n        while (offset < data.length)\n            block[this._blockOffset++] = data[offset++];\n        // update length\n        for (let j = 0, carry = data.length * 8; carry > 0; ++j) {\n            this._length[j] += carry;\n            carry = (this._length[j] / 0x0100000000) | 0;\n            if (carry > 0)\n                this._length[j] -= 0x0100000000 * carry;\n        }\n        return this;\n    }\n    _update() {\n        const words = ARRAY16;\n        for (let j = 0; j < 16; ++j) {\n            words[j] = readInt32LE(this._block, j * 4);\n        }\n        let al = this._a | 0;\n        let bl = this._b | 0;\n        let cl = this._c | 0;\n        let dl = this._d | 0;\n        let el = this._e | 0;\n        let ar = this._a | 0;\n        let br = this._b | 0;\n        let cr = this._c | 0;\n        let dr = this._d | 0;\n        let er = this._e | 0;\n        // computation\n        for (let i = 0; i < 80; i += 1) {\n            let tl;\n            let tr;\n            if (i < 16) {\n                tl = fn1(al, bl, cl, dl, el, words[zl[i]], hl[0], sl[i]);\n                tr = fn5(ar, br, cr, dr, er, words[zr[i]], hr[0], sr[i]);\n            }\n            else if (i < 32) {\n                tl = fn2(al, bl, cl, dl, el, words[zl[i]], hl[1], sl[i]);\n                tr = fn4(ar, br, cr, dr, er, words[zr[i]], hr[1], sr[i]);\n            }\n            else if (i < 48) {\n                tl = fn3(al, bl, cl, dl, el, words[zl[i]], hl[2], sl[i]);\n                tr = fn3(ar, br, cr, dr, er, words[zr[i]], hr[2], sr[i]);\n            }\n            else if (i < 64) {\n                tl = fn4(al, bl, cl, dl, el, words[zl[i]], hl[3], sl[i]);\n                tr = fn2(ar, br, cr, dr, er, words[zr[i]], hr[3], sr[i]);\n            }\n            else { // if (i<80) {\n                tl = fn5(al, bl, cl, dl, el, words[zl[i]], hl[4], sl[i]);\n                tr = fn1(ar, br, cr, dr, er, words[zr[i]], hr[4], sr[i]);\n            }\n            al = el;\n            el = dl;\n            dl = rotl(cl, 10);\n            cl = bl;\n            bl = tl;\n            ar = er;\n            er = dr;\n            dr = rotl(cr, 10);\n            cr = br;\n            br = tr;\n        }\n        // update state\n        const t = (this._b + cl + dr) | 0;\n        this._b = (this._c + dl + er) | 0;\n        this._c = (this._d + el + ar) | 0;\n        this._d = (this._e + al + br) | 0;\n        this._e = (this._a + bl + cr) | 0;\n        this._a = t;\n    }\n    digest() {\n        if (this._finalized) {\n            throw new Error('Digest already called');\n        }\n        this._finalized = true;\n        // create padding and handle blocks\n        this._block[this._blockOffset++] = 0x80;\n        if (this._blockOffset > 56) {\n            this._block.fill(0, this._blockOffset, 64);\n            this._update();\n            this._blockOffset = 0;\n        }\n        this._block.fill(0, this._blockOffset, 56);\n        writeUInt32LE(this._block, this._length[0], 56);\n        writeUInt32LE(this._block, this._length[1], 60);\n        this._update();\n        // produce result\n        const buffer = createU8Array(20);\n        writeInt32LE(buffer, this._a, 0);\n        writeInt32LE(buffer, this._b, 4);\n        writeInt32LE(buffer, this._c, 8);\n        writeInt32LE(buffer, this._d, 12);\n        writeInt32LE(buffer, this._e, 16);\n        // reset state\n        this._block.fill(0);\n        this._blockOffset = 0;\n        for (let i = 0; i < 4; ++i) {\n            this._length[i] = 0;\n        }\n        return buffer;\n    }\n}\nexport default RIPEMD160;\n","function t(t){return t&&\"object\"==typeof t&&\"default\"in t?t.default:t}var r=require(\"sha3\"),e=t(require(\"base-x\")),n=require(\"safe-buffer\"),i=t(require(\"big-integer\")),o=t(require(\"bs58\")),f=require(\"ripemd160-min\"),u=require(\"blakejs/blake2b\"),s=\"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567\",a=[\"0\",\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"a\",\"b\",\"c\",\"d\",\"e\",\"f\"],h=function(t){for(var r=new ArrayBuffer(5*t.length/8),e=new Uint8Array(r),n=0;n<t.length/8;n++){for(var i=[0,0,0,0,0,0,0,0],o=0;o<8;++o)i[o]=s.indexOf(t[8*n+o]);e[5*n+0]=i[0]<<3|i[1]>>2,e[5*n+1]=(3&i[1])<<6|i[2]<<1|i[3]>>4,e[5*n+2]=(15&i[3])<<4|i[4]>>1,e[5*n+3]=(1&i[4])<<7|i[5]<<2|i[6]>>3,e[5*n+4]=(7&i[6])<<5|i[7]}return Buffer.from(e)};function c(t,r){this._block=n.Buffer.alloc(t),this._finalSize=r,this._blockSize=t,this._len=0}c.prototype.update=function(t,r){\"string\"==typeof t&&(t=n.Buffer.from(t,r=r||\"utf8\"));for(var e=this._block,i=this._blockSize,o=t.length,f=this._len,u=0;u<o;){for(var s=f%i,a=Math.min(o-u,i-s),h=0;h<a;h++)e[s+h]=t[u+h];u+=a,(f+=a)%i==0&&this._update(e)}return this._len+=o,this},c.prototype.digest=function(t){var r=this._len%this._blockSize;this._block[r]=128,this._block.fill(0,r+1),r>=this._finalSize&&(this._update(this._block),this._block.fill(0));var e=8*this._len;if(e<=4294967295)this._block.writeUInt32BE(e,this._blockSize-4);else{var n=(4294967295&e)>>>0;this._block.writeUInt32BE((e-n)/4294967296,this._blockSize-8),this._block.writeUInt32BE(n,this._blockSize-4)}this._update(this._block);var i=this._hash();return t?i.toString(t):i},c.prototype._update=function(){throw new Error(\"_update must be implemented by subclass\")};var l,d,p=[1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298],v=new Array(64);function y(){this.init(),this._w=v,c.call(this,64,56)}function g(t,r,e){return e^t&(r^e)}function w(t,r,e){return t&r|e&(t|r)}function m(t){return(t>>>2|t<<30)^(t>>>13|t<<19)^(t>>>22|t<<10)}function b(t){return(t>>>6|t<<26)^(t>>>11|t<<21)^(t>>>25|t<<7)}function _(t){return(t>>>7|t<<25)^(t>>>18|t<<14)^t>>>3}function x(t){return void 0!==t.length}l=y,(d=c)&&(l.super_=d,l.prototype=Object.create(d.prototype,{constructor:{value:l,enumerable:!1,writable:!0,configurable:!0}})),y.prototype.init=function(){return this._a=1779033703,this._b=3144134277,this._c=1013904242,this._d=2773480762,this._e=1359893119,this._f=2600822924,this._g=528734635,this._h=1541459225,this},y.prototype._update=function(t){for(var r,e=this._w,n=0|this._a,i=0|this._b,o=0|this._c,f=0|this._d,u=0|this._e,s=0|this._f,a=0|this._g,h=0|this._h,c=0;c<16;++c)e[c]=t.readInt32BE(4*c);for(;c<64;++c)e[c]=0|(((r=e[c-2])>>>17|r<<15)^(r>>>19|r<<13)^r>>>10)+e[c-7]+_(e[c-15])+e[c-16];for(var l=0;l<64;++l){var d=h+b(u)+g(u,s,a)+p[l]+e[l]|0,v=m(n)+w(n,i,o)|0;h=a,a=s,s=u,u=f+d|0,f=o,o=i,i=n,n=d+v|0}this._a=n+this._a|0,this._b=i+this._b|0,this._c=o+this._c|0,this._d=f+this._d|0,this._e=u+this._e|0,this._f=s+this._f|0,this._g=a+this._g|0,this._h=h+this._h|0},y.prototype._hash=function(){var t=n.Buffer.allocUnsafe(32);return t.writeInt32BE(this._a,0),t.writeInt32BE(this._b,4),t.writeInt32BE(this._c,8),t.writeInt32BE(this._d,12),t.writeInt32BE(this._e,16),t.writeInt32BE(this._f,20),t.writeInt32BE(this._g,24),t.writeInt32BE(this._h,28),t};var E=new(function(){function t(t){this.sha256=t.sha256,this.alphabet=t.alphabet,this.codec=e(this.alphabet),this.base=this.alphabet.length}var r=t.prototype;return r.encodeChecked=function(t){var r=this.sha256(this.sha256(t)).slice(0,4);return this.encodeRaw(Buffer.from(function(){for(var t=[],r=arguments.length,e=new Array(r),n=0;n<r;n++)e[n]=arguments[n];return e.forEach(function(r){if(x(r))for(var e=0;e<r.length;e++)t.push(r[e]);else t.push(r)}),t}(t,r)))},r.encodeRaw=function(t){return this.codec.encode(t)},r.decodeChecked=function(t){var r=this.decodeRaw(t);if(r.length<5)throw new Error(\"invalid_input_size: decoded data must have length >= 5\");if(!this.verifyCheckSum(r))throw new Error(\"checksum_invalid\");return r.slice(0,-4)},r.decodeRaw=function(t){return this.codec.decode(t)},r.verifyCheckSum=function(t){return function(t,r){if(t.length!==r.length)return!1;for(var e=0;e<t.length;e++)if(t[e]!==r[e])return!1;return!0}(this.sha256(this.sha256(t.slice(0,-4))).slice(0,4),t.slice(-4))},t}())({sha256:function(t){return(new y).update(Buffer.from(t)).digest()},alphabet:\"rpshnaf39wBUDNEGHJKLM4PQRST7VWXYZ2bcdeCg65jkm8oFqi1tuvAxyz\"}),B=function(t){return\"0x\"===t.slice(0,2)?t.slice(2):t},I=function(t,e){if(void 0===e&&(e=null),\"string\"!=typeof t)throw new Error(\"stripHexPrefix param must be type 'string', is currently type \"+typeof t+\".\");for(var n,i=B(t).toLowerCase(),o=(n=(null!=e?e.toString()+\"0x\":\"\")+i,new r.Keccak(256).update(n).digest()).toString(\"hex\"),f=\"0x\",u=0;u<i.length;u++)f+=parseInt(o[u],16)>=8?i[u].toUpperCase():i[u];return f},A=function(t,r){if(!t)throw r},S=function(t,r){if(!Buffer.isBuffer(t))throw r},k=i.one,z=i.zero,C=i(3);function O(t,r){return t.and(k.shiftLeft(r)).notEquals(z)}function U(t){return i.fromArray(Array.prototype.slice.call(t,0),256)}function P(t,r){var e=t.toArray(256).value,n=r?Math.max(r-e.length,0):0;return Buffer.from([].concat(Array(n).fill(0),e))}function q(t,r,e,n){A(void 0!==n,\"Missing Z coordinate\"),this.curve=t,this.x=r,this.y=e,this.z=n,this._zInv=null,this.compressed=!0}Object.defineProperty(q.prototype,\"zInv\",{get:function(){return null===this._zInv&&(this._zInv=this.z.modInv(this.curve.p)),this._zInv}}),Object.defineProperty(q.prototype,\"affineX\",{get:function(){return this.x.multiply(this.zInv).mod(this.curve.p)}}),Object.defineProperty(q.prototype,\"affineY\",{get:function(){return this.y.multiply(this.zInv).mod(this.curve.p)}}),q.fromAffine=function(t,r,e){return new q(t,r,e,k)},q.prototype.equals=function(t){return t===this||(this.curve.isInfinity(this)?this.curve.isInfinity(t):this.curve.isInfinity(t)?this.curve.isInfinity(this):0===t.y.multiply(this.z).subtract(this.y.multiply(t.z)).mod(this.curve.p).compare(z)&&0===t.x.multiply(this.z).subtract(this.x.multiply(t.z)).mod(this.curve.p).compare(z))},q.prototype.negate=function(){var t=this.curve.p.subtract(this.y);return new q(this.curve,this.x,t,this.z)},q.prototype.add=function(t){if(this.curve.isInfinity(this))return t;if(this.curve.isInfinity(t))return this;var r=this.x,e=this.y,n=t.x,i=t.y.multiply(this.z).subtract(e.multiply(t.z)).mod(this.curve.p),o=n.multiply(this.z).subtract(r.multiply(t.z)).mod(this.curve.p);if(0===o.compare(z))return 0===i.compare(z)?this.twice():this.curve.infinity;var f=o.square(),u=f.multiply(o),s=r.multiply(f),a=i.square().multiply(this.z),h=a.subtract(s.shiftLeft(1)).multiply(t.z).subtract(u).multiply(o).mod(this.curve.p),c=s.multiply(C).multiply(i).subtract(e.multiply(u)).subtract(a.multiply(i)).multiply(t.z).add(i.multiply(u)).mod(this.curve.p),l=u.multiply(this.z).multiply(t.z).mod(this.curve.p);return new q(this.curve,h,c,l)},q.prototype.twice=function(){if(this.curve.isInfinity(this))return this;if(0===this.y.compare(z))return this.curve.infinity;var t=this.x,r=this.y,e=r.multiply(this.z).mod(this.curve.p),n=e.multiply(r).mod(this.curve.p),i=this.curve.a,o=t.square().multiply(C);0!==i.compare(z)&&(o=o.add(this.z.square().multiply(i)));var f=(o=o.mod(this.curve.p)).square().subtract(t.shiftLeft(3).multiply(n)).shiftLeft(1).multiply(e).mod(this.curve.p),u=o.multiply(C).multiply(t).subtract(n.shiftLeft(1)).shiftLeft(2).multiply(n).subtract(o.pow(3)).mod(this.curve.p),s=e.pow(3).shiftLeft(3).mod(this.curve.p);return new q(this.curve,f,u,s)},q.prototype.multiply=function(t){if(this.curve.isInfinity(this))return this;if(0===t.compare(z))return this.curve.infinity;for(var r=t,e=r.multiply(C),n=this.negate(),i=this,o=e.bitLength()-2;o>0;--o){var f=O(e,o),u=O(r,o);i=i.twice(),f!==u&&(i=i.add(f?this:n))}return i},q.prototype.multiplyTwo=function(t,r,e){for(var n=Math.max(t.bitLength(),e.bitLength())-1,i=this.curve.infinity,o=this.add(r);n>=0;){var f=O(t,n),u=O(e,n);i=i.twice(),f?i=i.add(u?o:this):u&&(i=i.add(r)),--n}return i},q.prototype.getEncoded=function(t){if(null==t&&(t=this.compressed),this.curve.isInfinity(this))return new Buffer(\"00\",\"hex\");var r,e=this.affineX,n=this.affineY,i=this.curve.pLength;return t?(r=new Buffer(1+i)).writeUInt8(n.isEven()?2:3,0):((r=new Buffer(1+i+i)).writeUInt8(4,0),P(n,i).copy(r,1+i)),P(e,i).copy(r,1),r},q.decodeFrom=function(t,r){var e,n=r.readUInt8(0),i=4!==n,o=Math.floor((t.p.bitLength()+7)/8),f=U(r.slice(1,1+o));if(i)A(r.length===o+1,\"Invalid sequence length\"),A(2===n||3===n,\"Invalid sequence tag\"),e=t.pointFromX(3===n,f);else{A(r.length===1+o+o,\"Invalid sequence length\");var u=U(r.slice(1+o));e=q.fromAffine(t,f,u)}return e.compressed=i,e},q.prototype.toString=function(){return this.curve.isInfinity(this)?\"(INFINITY)\":\"(\"+this.affineX.toString()+\",\"+this.affineY.toString()+\")\"};var L=i.zero,j=i.one;function R(t,r,e,n,i,o,f){this.p=t,this.a=r,this.b=e,this.G=q.fromAffine(this,n,i),this.n=o,this.h=f,this.infinity=new q(this,null,null,L),this.pOverFour=t.add(j).shiftRight(2),this.pLength=Math.floor((this.p.bitLength()+7)/8)}R.prototype.pointFromX=function(t,r){var e=r.pow(3).add(this.a.multiply(r)).add(this.b).mod(this.p).modPow(this.pOverFour,this.p),n=e;return e.isEven()^!t&&(n=this.p.subtract(n)),q.fromAffine(this,r,n)},R.prototype.isInfinity=function(t){return t===this.infinity||0===t.z.compare(L)&&0!==t.y.compare(L)},R.prototype.isOnCurve=function(t){if(this.isInfinity(t))return!0;var r=t.affineX,e=t.affineY,n=this.a,i=this.b,o=this.p;if(r.compare(L)<0||r.compareTo(o)>=0)return!1;if(e.compare(L)<0||e.compareTo(o)>=0)return!1;var f=e.square().mod(o),u=r.pow(3).add(n.multiply(r)).add(i).mod(o);return f.equals(u)},R.prototype.validate=function(t){A(!this.isInfinity(t),\"Point is at infinity\"),A(this.isOnCurve(t),\"Point is not on the curve\");var r=t.multiply(this.n);return A(this.isInfinity(r),\"Point is not a scalar multiple of G\"),!0};var M={p:\"fffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f\",a:\"00\",b:\"07\",n:\"fffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141\",h:\"01\",Gx:\"79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798\",Gy:\"483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8\"};function F(t,e){return new r.SHA3(256).update(t).digest(e)}function T(t){return Buffer.from((new f.RIPEMD160).update(t).digest())}function D(t){var r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;if(S(t,\"expecting keyBuffer<Buffer>\"),\"sha256x2\"===r){var e=F(F(t)).slice(0,4);return o.encode(Buffer.concat([t,e]))}var n=[t];r&&n.push(Buffer.from(r));var i=T(Buffer.concat(n)).slice(0,4);return o.encode(Buffer.concat([t,i]))}function H(t){var r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;A(t,\"private key expected\");var e,n=new Buffer(o.decode(t)),i=n.slice(-4),f=n.slice(0,-4);if(\"sha256x2\"===r)e=F(F(f)).slice(0,4);else{var u=[f];r&&u.push(Buffer.from(r)),e=T(Buffer.concat(u)).slice(0,4)}if(i.toString(\"hex\")!==e.toString(\"hex\"))throw new Error(\"Invalid checksum, \"+\"\".concat(i.toString(\"hex\"),\" != \").concat(e.toString(\"hex\")));return f}var G=function(t){var r=M;if(!r)return null;var e=i(r.p,16),n=i(r.a,16),o=i(r.b,16),f=i(r.n,16),u=i(r.h,16);return new R(e,n,o,i(r.Gx,16),i(r.Gy,16),f,u)}();function N(t){var r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:\"EOS\";if(\"string\"==typeof t)return N.fromString(t,r);if(Buffer.isBuffer(t))return N.fromBuffer(t);if(\"object\"==typeof t&&t.Q)return N(t.Q);function e(){var r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:t.compressed;return t.getEncoded(r)}function n(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:\"EOS\";return t+D(e())}function i(){return e().toString(\"hex\")}return{Q:t,toString:n,toBuffer:e,toHex:i}}N.isValid=function(t){var r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:\"EOS\";try{return N(t,r),!0}catch(t){return!1}},N.fromBuffer=function(t){return N(q.decodeFrom(G,t))},N.fromString=function(t){var r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:\"EOS\";try{return N.fromStringOrThrow(t,r)}catch(t){return null}},N.fromStringOrThrow=function(t){var r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:\"EOS\",e=t.match(/^PUB_([A-Za-z0-9]+)_([A-Za-z0-9]+)$/);if(null===e){var n=new RegExp(\"^\"+r);return n.test(t)&&(t=t.substring(r.length)),N.fromBuffer(H(t))}var i=e[1],o=e[2];return N.fromBuffer(H(o,i))},N.fromHex=function(t){return N.fromBuffer(new Buffer(t,\"hex\"))},N.fromStringHex=function(t){return N.fromString(new Buffer(t,\"hex\"))};var X=e(\"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567\"),K=X.encode,Y=X.decode,V=function(t){return void 0===t},Q={ed25519PublicKey:48,ed25519SecretSeed:144,preAuthTx:152,sha256Hash:184},Z=function(t){var r=Buffer.alloc(2);return r.writeUInt16LE(function(t,r){Buffer.isBuffer(t)||(t=new Buffer);for(var e=0,n=0;n<t.length;n++){var i=e>>>8&255;i^=255&t[n],e=e<<8&65535,e^=i^=i>>>4,e^=i=i<<5&65535,e^=i=i<<7&65535}return e}(t),0),r};function J(t){return(J=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function W(t,r){return(W=Object.setPrototypeOf||function(t,r){return t.__proto__=r,t})(t,r)}function $(){if(\"undefined\"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if(\"function\"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],function(){})),!0}catch(t){return!1}}function tt(t,r,e){return(tt=$()?Reflect.construct:function(t,r,e){var n=[null];n.push.apply(n,r);var i=new(Function.bind.apply(t,n));return e&&W(i,e.prototype),i}).apply(null,arguments)}function rt(t){var r=\"function\"==typeof Map?new Map:void 0;return(rt=function(t){if(null===t||-1===Function.toString.call(t).indexOf(\"[native code]\"))return t;if(\"function\"!=typeof t)throw new TypeError(\"Super expression must either be null or a function\");if(void 0!==r){if(r.has(t))return r.get(t);r.set(t,e)}function e(){return tt(t,arguments,J(this).constructor)}return e.prototype=Object.create(t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),W(e,t)})(t)}var et=[0,1,2,42,43,68,69],nt=function(t){for(var r=new Uint8Array(t.length),e=0;e<t.length;e++)r[e]=t.charCodeAt(e);return r}(\"SS58PRE\"),it=function(t){var r,e;function n(){return t.apply(this,arguments)||this}return e=t,(r=n).prototype=Object.create(e.prototype),r.prototype.constructor=r,r.__proto__=e,n.prototype.toJSON=function(){return{_type:\"AccountIndex\",data:this+0}},n}(rt(Number));function ot(t,r){t.length||(t=[t]),r.length||(r=[r]);var e=new Uint8Array(t.length+r.length);return e.set(t),e.set(r,t.length),e}function ft(t){var r=new Error;this.name=r.name=\"ValidationError\",this.message=r.message=t,this.stack=r.stack}function ut(t,r){if(null==r&&(r=\"Assertion failed.\"),!t)throw new ft(r)}ft.prototype=Object.create(Error.prototype);var st=function(){function t(t,r){this.hi=0|t,this.lo=0|r}return t.prototype.ushrn32=function(t){var r=this.lo;return 0==(t&=63)||(t<32?(r>>>=t,r|=this.hi<<32-t):r=this.hi>>>t-32),r},t}(),at=Buffer.allocUnsafe(105),ht=\"qpzry9x8gf2tvdw0s3jn54khce6mua7l\",ct=[-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,15,-1,10,17,21,20,26,30,7,5,-1,-1,-1,-1,-1,-1,-1,29,-1,24,13,25,9,8,23,-1,18,22,31,27,19,-1,1,0,3,16,11,28,12,14,6,4,2,-1,-1,-1,-1,-1,-1,29,-1,24,13,25,9,8,23,-1,18,22,31,27,19,-1,1,0,3,16,11,28,12,14,6,4,2,-1,-1,-1,-1,-1],lt=new st(7,4294967295),dt=[new st(152,4072443489),new st(121,3077413346),new st(243,1046459332),new st(174,783016616),new st(30,1329849456)];function pt(t,r){var e=t,n=e.hi>>>3;e.hi&=lt.hi,e.lo&=lt.lo,e.hi<<=5,e.hi|=e.lo>>>27,e.lo<<=5;for(var i=0;i<dt.length;i++)n>>>i&1&&(e.hi^=dt[i].hi,e.lo^=dt[i].lo);return e.lo^=r,e}function vt(t,r,e,n,i,o,f){ut(Buffer.isBuffer(t)),ut(r>>>0===r),ut(Buffer.isBuffer(e)),ut(n>>>0===n),ut((255&i)===i),ut((255&o)===o),ut(\"boolean\"==typeof f);for(var u=(1<<o)-1,s=0,a=0;r<t.length;r++){var h=t[r];if(h>>>i!=0)throw new Error(\"Invalid bits.\");for(s=s<<i|h,a+=i;a>=o;)e[n++]=s>>>(a-=o)&u}if(f)a&&(e[n++]=s<<o-a&u);else if(a>=i||s<<o-a&u)throw new Error(\"Invalid bits.\");return ut(n<=e.length),e.slice(0,n)}var yt=function(t){function r(r){var e=r.slice(0,-4),n=r.slice(-4),i=t(e);if(!(n[0]^i[0]|n[1]^i[1]|n[2]^i[2]|n[3]^i[3]))return e}return{bs58Encode:function(r){var e=t(r);return o.encode(Buffer.concat([r,e],r.length+4))},bs58Decode:function(t){var e=r(o.decode(t));if(!e)throw new Error(\"Invalid checksum\");return e},decodeUnsafe:function(t){var e=o.decodeUnsafe(t);if(e)return r(e)}}}(function(t){var r=(new y).update(t).digest();return(new y).update(r).digest()}),gt=yt.bs58Decode,wt=yt.bs58Encode;exports.b32decode=h,exports.b32encode=function(t){var r=[],e=Math.floor(t.length/5),n=t.length%5;if(0!=n){for(var i=0;i<5-n;i++)t+=\"\\0\";e+=1}for(var o=0;o<e;o++)r.push(s.charAt(t.charCodeAt(5*o)>>3)),r.push(s.charAt((7&t.charCodeAt(5*o))<<2|t.charCodeAt(5*o+1)>>6)),r.push(s.charAt((63&t.charCodeAt(5*o+1))>>1)),r.push(s.charAt((1&t.charCodeAt(5*o+1))<<4|t.charCodeAt(5*o+2)>>4)),r.push(s.charAt((15&t.charCodeAt(5*o+2))<<1|t.charCodeAt(5*o+3)>>7)),r.push(s.charAt((127&t.charCodeAt(5*o+3))>>2)),r.push(s.charAt((3&t.charCodeAt(5*o+3))<<3|t.charCodeAt(5*o+4)>>5)),r.push(s.charAt(31&t.charCodeAt(5*o+4)));var f=0;1==n?f=6:2==n?f=4:3==n?f=3:4==n&&(f=1);for(var u=0;u<f;u++)r.pop();for(var a=0;a<f;a++)r.push(\"=\");return r.join(\"\")},exports.bs58Decode=gt,exports.bs58Encode=wt,exports.calculateChecksum=Z,exports.cashaddrDecode=function(t,r){void 0===r&&(r=\"bitcoincash\"),ut(\"string\"==typeof t),ut(\"string\"==typeof r);var e=function(t,r){if(ut(\"string\"==typeof t),t.length<8||t.length>196)throw new Error(\"Invalid cashaddr data length.\");for(var e=!1,n=!1,i=!1,o=0,f=0;f<t.length;f++){var u=t.charCodeAt(f);if(u>=97&&u<=122)e=!0;else if(u>=65&&u<=90)n=!0;else if(u>=48&&u<=57)i=!0;else{if(58!==u)throw new Error(\"Invalid cashaddr character.\");if(i||0===f||f>83)throw new Error(\"Invalid cashaddr prefix.\");if(0!==o)throw new Error(\"Invalid cashaddr separators.\");o=f}}if(n&&e)throw new Error(\"Invalid cashaddr casing.\");var s,a=new st(0,1);0===o?s=r.toLowerCase():(s=t.substring(0,o).toLowerCase(),o+=1);for(var h=0;h<s.length;h++)pt(a,31&(32|s.charCodeAt(h)));pt(a,0);var c=t.length-o;if(c<=8||c>112)throw new Error(\"Invalid cashaddr data length.\");for(var l=Buffer.allocUnsafe(c),d=o;d<t.length;d++){var p=t.charCodeAt(d),v=65408&p?-1:ct[p];if(-1===v)throw new Error(\"Invalid cashaddr character.\");pt(a,v),d+8<t.length&&(l[d-o]=v)}if(0!==a.hi||1!==a.lo||s!==r)throw new Error(\"Invalid cashaddr checksum.\");return[s,l.slice(0,-8)]}(t,r),n=e[0],i=e[1],o=5*i.length&7;if(o>=5)throw new Error(\"Invalid padding in data.\");if(i[i.length-1]&(1<<o)-1)throw new Error(\"Non zero padding.\");var f=vt(i,0,i,0,5,8,!1),u=f[0]>>>3&31,s=f.slice(1),a=20+4*(3&f[0]);if(4&f[0]&&(a*=2),a!==s.length)throw new Error(\"Invalid cashaddr data length.\");return{prefix:n,type:u,hash:s}},exports.cashaddrEncode=function(t,r,e){if(ut(\"string\"==typeof t),ut((15&r)===r,\"Invalid cashaddr type.\"),ut(Buffer.isBuffer(e)),0===t.length||t.length>83)throw new Error(\"Invalid cashaddr prefix.\");var n=function(t){switch(ut(t>>>0===t),t){case 20:return 0;case 24:return 1;case 28:return 2;case 32:return 3;case 40:return 4;case 48:return 5;case 56:return 6;case 64:return 7;default:throw new Error(\"Non standard length.\")}}(e.length),i=Buffer.allocUnsafe(e.length+1);return i[0]=r<<3|n,e.copy(i,1),function(t,r){ut(\"string\"==typeof t),ut(Buffer.isBuffer(r));for(var e=new st(0,1),n=\"\",i=!1,o=!1,f=0;f<t.length;f++){var u=t.charCodeAt(f);if(65280&u||u>>>5==0)throw new Error(\"Invalid cashaddr character.\");if(u>=97&&u<=122)o=!0;else if(u>=65&&u<=90)i=!0,u=u-65+97;else if(u>=48&&u<=57)throw new Error(\"Invalid cashaddr prefix.\");pt(e,31&u),n+=String.fromCharCode(u)}if(o&&i)throw new Error(\"Invalid cashaddr prefix.\");pt(e,0),n+=\":\";for(var s=0;s<r.length;s++){var a=r[s];if(a>>>5!=0)throw new Error(\"Invalid cashaddr value.\");pt(e,a),n+=ht[a]}for(var h=0;h<8;h++)pt(e,0);e.lo^=1;for(var c=0;c<8;c++){var l=31&e.ushrn32(5*(7-c));n+=ht[l]}return n}(t,vt(i,0,at,0,8,5,!0))},exports.codec=E,exports.decodeCheck=function(t,r){if(\"string\"!=typeof r)throw new TypeError(\"encoded argument must be of type String\");var e=Y(r),n=e[0],i=e.slice(0,-2),o=i.slice(1),f=e.slice(-2);if(r!==K(e))throw new Error(\"invalid encoded string\");var u=Q[t];if(V(u))throw new Error(t+' is not a valid version byte name.  expected one of \"accountId\" or \"seed\"');if(n!==u)throw new Error(\"invalid version byte. expected \"+u+\", got \"+n);if(!function(t,r){if(t.length!==r.length)return!1;if(0===t.length)return!0;for(var e=0;e<t.length;e+=1)if(t[e]!==r[e])return!1;return!0}(Z(i),f))throw new Error(\"invalid checksum\");return Buffer.from(o)},exports.encodeCheck=function(t,r){if(null===r||V(r))throw new Error(\"cannot encode null data\");var e=Q[t];if(V(e))throw new Error(t+' is not a valid version byte name.  expected one of \"ed25519PublicKey\", \"ed25519SecretSeed\", \"preAuthTx\", \"sha256Hash\"');r=Buffer.from(r);var n=Buffer.from([e]),i=Buffer.concat([n,r]),o=Z(i),f=Buffer.concat([i,o]);return K(f)},exports.eosPublicKey=N,exports.hex2a=function(t){for(var r=t.toString(),e=\"\",n=0;n<r.length;n+=2)e+=String.fromCharCode(parseInt(r.substr(n,2),16));return e},exports.isValid=function(t){var e=t.toString().toUpperCase().replace(/-/g,\"\");if(!e||40!==e.length)return!1;var n,i=function(t){for(var r=\"\",e=0;e<t.length;e++){var n=Math.round(t[e]).toString(16);1===n.length&&(n=\"0\"+n),r+=n}return r}(h(e));return n=Buffer.from(i.slice(0,42),\"hex\"),new r.Keccak(256).update(n).digest(\"hex\").toString().substr(0,8)===i.slice(42)},exports.isValidChecksumAddress=function(t,r){return function(t){return/^0x[0-9a-fA-F]{40}$/.test(t)}(t)&&I(t,r)===t},exports.ss58Decode=function(t,r){var e;void 0===r&&(r=0);try{e=o.decode(t)}catch(t){return null}if(-1===et.indexOf(e[0]))return null;if(e.length<3)return null;var n,i=e.length<=3?1:e.length<=5?2:e.length<=9?4:e.length<=17?8:32,f=e.length-1-i,s=e.slice(1,1+i);e.slice(1+e.length),32===i&&(n=s);var a=i<32?new it(function(t){var r=0,e=1;return t.forEach(function(t){r+=t*e,e*=256}),r}(s)):new Buffer.from(s);if(e[0]%1&&!n&&!r)return null;for(var h=u.blake2b(ot(nt,e[0]%1?n||r(a):e.slice(0,1+i))),c=0;c<f;++c)if(h[c]!==e[1+i+c])return null;return a},exports.ss58Encode=function(t,r,e,n,i){var f;if(void 0===r&&(r=42),void 0===e&&(e=null),void 0===n&&(n=null),-1===et.indexOf(r))throw new Error(\"Unknown ss58 address type\",r);if(\"number\"==typeof t||t instanceof it){var s=t<256?1:t<65536?2:t<1?4:8;if(-1===[1,2,4,8].indexOf(n=n||s))throw new Error(\"Invalid length\");if(n=Math.max(s,n),e&&\"number\"!=typeof e)throw new Error(\"Invalid checksum length\");switch(n){case 1:e=1;break;case 2:e=[1,2].indexOf(e)+1||1;break;case 4:e=[1,2,3,4].indexOf(e)+1||1;break;case 8:e=[1,2,3,4,5,6,7,8].indexOf(e)+1||1}f=function(t,r){var e=!1;t<0&&(t=-t-1,e=!0);for(var n=new Uint8Array(r),i=0;i<r;++i)n[i]=t%256,e&&(n[i]=255&~n[i]),t/=256;return n}(t,n)}else{if(!(t instanceof Uint8Array)||32!==t.length&&35!==t.length)throw new Error(\"Unknown item to encode as ss58. Passing back.\",t);e=2,i=f=35===t.length?t.slice(1,33):t}var a=u.blake2b(ot(nt,1&r?i:ot(r,f))),h=ot(ot(r,f),a.slice(0,e));return o.encode(Buffer.from(h))},exports.stripHexPrefix=B,exports.toChecksumAddress=I,exports.ua2hex=function(t){for(var r=\"\",e=0;e<t.length;e++){var n=t[e];r+=a[n>>>4],r+=a[15&n]}return r};\n//# sourceMappingURL=index.js.map\n","const alphabet = '13456789abcdefghijkmnopqrstuwxyz'\r\n\r\n/**\r\n * Encode provided Uint8Array using the Nano-specific Base-32 implementeation.\r\n * @param {Uint8Array} view Input buffer formatted as a Uint8Array\r\n * @returns {string}\r\n */\r\nfunction encode (view) {\r\n  if (view.constructor !== Uint8Array) {\r\n    throw new Error('View must be a Uint8Array!')\r\n  }\r\n  const length = view.length\r\n  const leftover = (length * 8) % 5\r\n  const offset = leftover === 0 ? 0 : 5 - leftover\r\n\r\n  let value = 0\r\n  let output = ''\r\n  let bits = 0\r\n\r\n  for (var i = 0; i < length; i++) {\r\n    value = (value << 8) | view[i]\r\n    bits += 8\r\n\r\n    while (bits >= 5) {\r\n      output += alphabet[(value >>> (bits + offset - 5)) & 31]\r\n      bits -= 5\r\n    }\r\n  }\r\n\r\n  if (bits > 0) {\r\n    output += alphabet[(value << (5 - (bits + offset))) & 31]\r\n  }\r\n\r\n  return output\r\n}\r\n\r\nfunction readChar (char) {\r\n  var idx = alphabet.indexOf(char)\r\n\r\n  if (idx === -1) {\r\n    throw new Error('Invalid character found: ' + char)\r\n  }\r\n\r\n  return idx\r\n}\r\n\r\n/**\r\n * Decodes a Nano-implementation Base32 encoded string into a Uint8Array\r\n * @param {string} input A Nano-Base32 encoded string\r\n * @returns {Uint8Array}\r\n */\r\nfunction decode (input) {\r\n  if (typeof input !== 'string') {\r\n    throw new Error('Input must be a string!')\r\n  }\r\n  var length = input.length\r\n  const leftover = (length * 5) % 8\r\n  const offset = leftover === 0 ? 0 : 8 - leftover\r\n\r\n  var bits = 0\r\n  var value = 0\r\n\r\n  var index = 0\r\n  var output = new Uint8Array(Math.ceil(length * 5 / 8))\r\n\r\n  for (var i = 0; i < length; i++) {\r\n    value = (value << 5) | readChar(input[i])\r\n    bits += 5\r\n\r\n    if (bits >= 8) {\r\n      output[index++] = (value >>> (bits + offset - 8)) & 255\r\n      bits -= 8\r\n    }\r\n  }\r\n  if (bits > 0) {\r\n    output[index++] = (value << (bits + offset - 8)) & 255\r\n  }\r\n\r\n  if (leftover !== 0) {\r\n    output = output.slice(1)\r\n  }\r\n  return output\r\n}\r\n\r\nmodule.exports = {\r\n  encode,\r\n  decode\r\n}\r\n","// https://gitlab.com/mjbecze/leb128 was ported so that we can reuse older version of bn.js (4.0.0) instead of the one leb128 uses (5.1)\n\n// Could not make import work for bn.js as @types/bn.js wasn't working\n/* tslint:disable:no-var-requires */\nconst Bn = require('bn.js')\n// https://gitlab.com/mjbecze/leb128/-/blob/master/stream.js\nclass Stream{\n  public buffer:Buffer\n  private bytesRead:number\n\n  constructor (buf:Buffer = Buffer.from([])) {\n    this.buffer = buf\n    this.bytesRead = 0\n  }\n\n  public read (size:number) {\n    const data = this.buffer.slice(0, size)\n    this.buffer = this.buffer.slice(size)\n    this.bytesRead += size\n    return data\n  }\n\n  public write (buf:[any]) {\n    this.buffer = Buffer.concat([this.buffer, Buffer.from(buf)])\n  }\n}\n\n// https://gitlab.com/mjbecze/leb128/-/blob/master/unsigned.js\nfunction read (stream: Stream) {\n  return readBn(stream).toString()\n}\n\nfunction readBn (stream: Stream) {\n  const num = new Bn(0)\n  let shift = 0\n  let byt\n  while (true) {\n    byt = stream.read(1)[0]\n    /* tslint:disable:no-bitwise */\n    num.ior(new Bn(byt & 0x7f).shln(shift))\n    if (byt >> 7 === 0) {\n      break\n    } else {\n      shift += 7\n    }\n  }\n  return num\n}\n\nfunction write (num:string | number, stream: Stream) {\n  const bigNum = new Bn(num)\n  while (true) {\n    const i = bigNum.maskn(7).toNumber()\n    bigNum.ishrn(7)\n    if (bigNum.isZero()) {\n      stream.write([i])\n      break\n    } else {\n      stream.write([i | 0x80])\n    }\n  }\n}\n\n/**\n * LEB128 encodeds an interger\n * @param {String|Number} num\n * @return {Buffer}\n */\nexport function encode (num: string | number ) {\n  const stream = new Stream()\n  write(num, stream)\n  return stream.buffer\n}\n\n/**\n * decodes a LEB128 encoded interger\n * @param {Buffer} buffer\n * @return {String}\n */\nexport function decode (buffer:Buffer) {\n  const stream = new Stream(buffer)\n  return read(stream)\n}\n","export class Address {\n  public str: Buffer;\n  constructor(str: Buffer) {\n    if (!str || str.length < 1) { throw new Error('Missing str in address') }\n    this.str = str\n  }\n\n  // https://beta.spec.filecoin.io/#appendix__address__protocol-indicator\n  public protocol(): number {\n    if (this.str.length < 1) {\n      throw Error('No address found.')\n    }\n\n    return this.str[0]\n  }\n\n  public payload(): Buffer {\n    if (this.str.length < 1) {\n      throw Error('No address found.')\n    }\n    return this.str.slice(1, this.str.length)\n  }\n}\n","// Ported from https://www.npmjs.com/package/@glif/filecoin-address to reduce file size\n\nimport { blake2b } from 'blakejs'\nimport { b32decode, b32encode, hex2a} from 'crypto-addr-codec';\nimport { decode as lebDecode, encode as lebEncode } from '../leb128/unsigned';\nimport { Address } from './address';\n\nfunction validateChecksum (ingest:Buffer, expect:Buffer){\n    const digest = getChecksum(ingest)\n    return Buffer.compare(Buffer.from(digest), expect)\n}\n\nfunction getChecksum (ingest:Buffer):Buffer {\n    return blake2b(ingest, null, 4)\n}\n\nfunction checkAddressString (address:string){\n    if (!address){throw Error('No bytes to validate.')}\n    if (address.length < 3){throw Error('Address is too short to validate.')}\n    if (address[0] !== 'f' && address[0] !== 't') {\n        throw Error('Unknown address network.')\n    }\n\n    switch (address[1]) {\n        case '0': {\n        if (address.length > 22){throw Error('Invalid ID address length.')}\n        break\n        }\n        case '1': {\n        if (address.length !== 41){throw Error('Invalid secp256k1 address length.')}\n        break\n        }\n        case '2': {\n        if (address.length !== 41){throw Error('Invalid Actor address length.')}\n        break\n        }\n        case '3': {\n        if (address.length !== 86){throw Error('Invalid BLS address length.')}\n        break\n        }\n        default: {\n            throw new Error('Invalid address protocol.')\n        }\n    }\n}\n\nfunction filDecode (address: string) {\n    checkAddressString(address)\n    const network = address[0]\n    const protocol = parseInt(address[1], 10)\n    const protocolByte = Buffer.from([protocol])\n    const raw = address.slice(2)\n\n    if (protocol === 0) {\n      return filNewAddress(protocol, Buffer.from(lebEncode(raw)))\n    }\n\n    const payloadChecksum = Buffer.from(b32decode(raw.toUpperCase()))\n    const { length } = payloadChecksum\n    const payload = payloadChecksum.slice(0, length - 4)\n    const checksum = payloadChecksum.slice(length - 4, length)\n    if (validateChecksum(Buffer.concat([protocolByte, payload]), checksum)) {\n        throw Error(\"Checksums don't match\")\n    }\n\n    const addressObj = filNewAddress(protocol, payload)\n    if (filEncode(network, addressObj) !== address){\n        throw Error(`Did not encode this address properly: ${address}`)\n    }\n    return addressObj\n}\n\n\nfunction filEncode (network:string, address:Address) {\n    if (!address || !address.str){throw Error('Invalid address')}\n    let addressString = ''\n    const payload = address.payload()\n    const protocol = address.protocol()\n\n    switch (protocol) {\n        case 0: {\n            const decoded = lebDecode(payload)\n            addressString = network + String(protocol) + decoded\n            break\n        }\n        default: {\n            const protocolByte = Buffer.from([protocol])\n            const toChecksum = Buffer.concat([protocolByte, payload])\n            const checksum = getChecksum(toChecksum)\n            const bytes = Buffer.concat([payload, Buffer.from(checksum)])\n            const bytes2a = hex2a(bytes.toString('hex'));\n            const bytes32encoded = b32encode(bytes2a).replace(/=/g, '').toLowerCase();\n            addressString = String(network) + String(protocol) + bytes32encoded\n            break\n        }\n    }\n    return addressString\n}\n\nfunction filNewAddress (protocol:number, payload:Buffer): Address {\n    const protocolByte = Buffer.from([protocol])\n    const input = Buffer.concat([protocolByte, payload])\n    return new Address(input)\n}\n  \nexport function filAddrEncoder(data: Buffer): string {\n    const address = filNewAddress(data[0], data.slice(1))\n    return filEncode('f', address).toString()\n}\n    \nexport function filAddrDecoder(data: string): Buffer {\n    return filDecode(data).str\n}    \n","import {\n  decode as bech32Decode,\n  encode as bech32Encode,\n  fromWords as bech32FromWords,\n  toWords as bech32ToWords,\n} from 'bech32';\nimport bigInt from 'big-integer';\nimport { blake2b } from 'blakejs'\nimport { decode as bs58DecodeNoCheck, encode as bs58EncodeNoCheck } from 'bs58';\n// @ts-ignore\nimport { createHash } from 'crypto';\nimport {\n  b32decode,\n  b32encode,\n  bs58Decode,\n  bs58Encode,\n  cashaddrDecode,\n  cashaddrEncode,\n  codec as xrpCodec,\n  decodeCheck as decodeEd25519PublicKey,\n  encodeCheck as encodeEd25519PublicKey,\n  eosPublicKey,\n  hex2a,\n  isValid as isValidXemAddress,\n  isValidChecksumAddress as rskIsValidChecksumAddress,\n  ss58Decode,\n  ss58Encode,\n  stripHexPrefix as rskStripHexPrefix,\n  toChecksumAddress as rskToChecksumAddress,\n} from 'crypto-addr-codec';\nimport { decode as nanoBase32Decode, encode as nanoBase32Encode } from 'nano-base32';\nimport { filAddrDecoder, filAddrEncoder } from './filecoin/index';\n\ntype EnCoder = (data: Buffer) => string;\ntype DeCoder = (data: string) => Buffer;\n\ntype base58CheckVersion = number[]\n\nexport interface IFormat {\n  coinType: number;\n  name: string;\n  encoder: (data: Buffer) => string;\n  decoder: (data: string) => Buffer;\n}\n\n// Support version field of more than one byte (e.g. Zcash)\nfunction makeBitcoinBase58CheckEncoder(p2pkhVersion: base58CheckVersion, p2shVersion: base58CheckVersion): (data: Buffer) => string {\n  return (data: Buffer) => {\n    let addr: Buffer;\n    switch (data.readUInt8(0)) {\n      case 0x76: // P2PKH: OP_DUP OP_HASH160 <pubKeyHash> OP_EQUALVERIFY OP_CHECKSIG\n        if (\n          data.readUInt8(1) !== 0xa9 ||\n          data.readUInt8(data.length - 2) !== 0x88 ||\n          data.readUInt8(data.length - 1) !== 0xac\n        ) {\n          throw Error('Unrecognised address format');\n        }\n        addr = Buffer.concat([Buffer.from(p2pkhVersion), data.slice(3, 3 + data.readUInt8(2))]);\n        // @ts-ignore\n        return bs58Encode(addr);\n      case 0xa9: // P2SH: OP_HASH160 <scriptHash> OP_EQUAL\n        if (data.readUInt8(data.length - 1) !== 0x87) {\n          throw Error('Unrecognised address format');\n        }\n        addr = Buffer.concat([Buffer.from(p2shVersion), data.slice(2, 2 + data.readUInt8(1))]);\n        return bs58Encode(addr);\n      default:\n        throw Error('Unrecognised address format');\n    }\n  };\n}\n\n// Supports version field of more than one byte\n// NOTE: Assumes all versions in p2pkhVersions[] or p2shVersions[] will have the same length\nfunction makeBitcoinBase58CheckDecoder(p2pkhVersions: base58CheckVersion[], p2shVersions: base58CheckVersion[]): (data: string) => Buffer {\n  return (data: string) => {\n    const addr = bs58Decode(data);\n    // Checks if the first addr bytes are exactly equal to provided version field\n    const checkVersion = (version: base58CheckVersion) => {\n      return version.every((value: number, index: number) => index < addr.length && value === addr.readUInt8(index))\n    }\n    if (p2pkhVersions.some(checkVersion)) {\n      return Buffer.concat([Buffer.from([0x76, 0xa9, 0x14]), addr.slice(p2pkhVersions[0].length), Buffer.from([0x88, 0xac])]);\n    } else if (p2shVersions.some(checkVersion)) {\n      return Buffer.concat([Buffer.from([0xa9, 0x14]), addr.slice(p2shVersions[0].length), Buffer.from([0x87])]);\n    }\n    throw Error('Unrecognised address format');\n  };\n}\n\nconst bitcoinBase58Chain = (name: string, coinType: number, p2pkhVersions: base58CheckVersion[], p2shVersions: base58CheckVersion[]) => ({\n  coinType,\n  decoder: makeBitcoinBase58CheckDecoder(p2pkhVersions, p2shVersions),\n  encoder: makeBitcoinBase58CheckEncoder(p2pkhVersions[0], p2shVersions[0]),\n  name,\n});\n\nfunction makeBech32SegwitEncoder(hrp: string): (data: Buffer) => string {\n  return (data: Buffer) => {\n    let version = data.readUInt8(0);\n    if (version >= 0x51 && version <= 0x60) {\n      version -= 0x50;\n    } else if (version !== 0x00) {\n      throw Error('Unrecognised address format');\n    }\n\n    const words = [version].concat(bech32ToWords(data.slice(2, data.readUInt8(1) + 2)));\n    return bech32Encode(hrp, words);\n  };\n}\n\nfunction makeBech32SegwitDecoder(hrp: string): (data: string) => Buffer {\n  return (data: string) => {\n    const { prefix, words } = bech32Decode(data);\n    if (prefix !== hrp) {\n      throw Error('Unexpected human-readable part in bech32 encoded address');\n    }\n    const script = bech32FromWords(words.slice(1));\n    let version = words[0];\n    if (version > 0) {\n      version += 0x50;\n    }\n    return Buffer.concat([Buffer.from([version, script.length]), Buffer.from(script)]);\n  };\n}\n\nfunction makeBitcoinEncoder(hrp: string, p2pkhVersion: base58CheckVersion, p2shVersion: base58CheckVersion): (data: Buffer) => string {\n  const encodeBech32 = makeBech32SegwitEncoder(hrp);\n  const encodeBase58Check = makeBitcoinBase58CheckEncoder(p2pkhVersion, p2shVersion);\n  return (data: Buffer) => {\n    try {\n      return encodeBase58Check(data);\n    } catch {\n      return encodeBech32(data);\n    }\n  };\n}\n\nfunction makeBitcoinDecoder(hrp: string, p2pkhVersions: base58CheckVersion[], p2shVersions: base58CheckVersion[]): (data: string) => Buffer {\n  const decodeBech32 = makeBech32SegwitDecoder(hrp);\n  const decodeBase58Check = makeBitcoinBase58CheckDecoder(p2pkhVersions, p2shVersions);\n  return (data: string) => {\n    if (data.toLowerCase().startsWith(hrp + '1')) {\n      return decodeBech32(data);\n    } else {\n      return decodeBase58Check(data);\n    }\n  };\n}\n\nconst bitcoinChain = (\n  name: string,\n  coinType: number,\n  hrp: string,\n  p2pkhVersions: base58CheckVersion[],\n  p2shVersions: base58CheckVersion[],\n) => ({\n  coinType,\n  decoder: makeBitcoinDecoder(hrp, p2pkhVersions, p2shVersions),\n  encoder: makeBitcoinEncoder(hrp, p2pkhVersions[0], p2shVersions[0]),\n  name,\n});\n\n// Similar to makeBitcoinEncoder but:\n// - Uses Bech32 without SegWit https://zips.z.cash/zip-0173\n// - Supports version field of more than one byte\nfunction makeZcashEncoder(hrp: string, p2pkhVersion: base58CheckVersion, p2shVersion: base58CheckVersion): (data: Buffer) => string {\n  const encodeBech32 = makeBech32Encoder(hrp);\n  const encodeBase58Check = makeBitcoinBase58CheckEncoder(p2pkhVersion, p2shVersion);\n  return (data: Buffer) => {\n    try {\n      return encodeBase58Check(data);\n    } catch {\n      return encodeBech32(data);\n    }\n  };\n}\n\n// Similar to makeBitcoinDecoder but uses makeZcashBase58CheckDecoder to support version field of more than one byte\nfunction makeZcashDecoder(hrp: string, p2pkhVersions: base58CheckVersion[], p2shVersions: base58CheckVersion[]): (data: string) => Buffer {\n  const decodeBase58Check = makeBitcoinBase58CheckDecoder(p2pkhVersions, p2shVersions);\n  const decodeBech32 = makeBech32Decoder(hrp);\n  return (data: string) => {\n    if (data.toLowerCase().startsWith(hrp)) {\n      return decodeBech32(data);\n    } else {\n      return decodeBase58Check(data);\n    }\n  };\n}\n\nconst zcashChain = (\n  name: string,\n  coinType: number,\n  hrp: string,\n  p2pkhVersions: base58CheckVersion[],\n  p2shVersions: base58CheckVersion[],\n) => ({\n  coinType,\n  decoder: makeZcashDecoder(hrp, p2pkhVersions, p2shVersions),\n  encoder: makeZcashEncoder(hrp, p2pkhVersions[0], p2shVersions[0]),\n  name,\n});\n\nfunction encodeCashAddr(data: Buffer): string {\n  switch (data.readUInt8(0)) {\n    case 0x76: // P2PKH: OP_DUP OP_HASH160 <pubKeyHash> OP_EQUALVERIFY OP_CHECKSIG\n      if (\n        data.readUInt8(1) !== 0xa9 ||\n        data.readUInt8(data.length - 2) !== 0x88 ||\n        data.readUInt8(data.length - 1) !== 0xac\n      ) {\n        throw Error('Unrecognised address format');\n      }\n      return cashaddrEncode('bitcoincash', 0, data.slice(3, 3 + data.readUInt8(2)));\n    case 0xa9: // P2SH: OP_HASH160 <scriptHash> OP_EQUAL\n      if (data.readUInt8(data.length - 1) !== 0x87) {\n        throw Error('Unrecognised address format');\n      }\n      return cashaddrEncode('bitcoincash', 1, data.slice(2, 2 + data.readUInt8(1)));\n    default:\n      throw Error('Unrecognised address format');\n  }\n}\n\nfunction decodeCashAddr(data: string): Buffer {\n  const { prefix, type, hash } = cashaddrDecode(data);\n  if (type === 0) {\n    return Buffer.concat([Buffer.from([0x76, 0xa9, 0x14]), Buffer.from(hash), Buffer.from([0x88, 0xac])]);\n  } else if (type === 1) {\n    return Buffer.concat([Buffer.from([0xa9, 0x14]), Buffer.from(hash), Buffer.from([0x87])]);\n  }\n  throw Error('Unrecognised address format');\n}\n\nfunction decodeBitcoinCash(data: string): Buffer {\n  const decodeBase58Check = makeBitcoinBase58CheckDecoder([[0x00]], [[0x05]]);\n  try {\n    return decodeBase58Check(data);\n  } catch {\n    return decodeCashAddr(data);\n  }\n}\n\nfunction makeChecksummedHexEncoder(chainId?: number) {\n  return (data: Buffer) => rskToChecksumAddress(data.toString('hex'), chainId || null);\n}\n\nfunction makeChecksummedHexDecoder(chainId?: number) {\n  return (data: string) => {\n    const stripped = rskStripHexPrefix(data);\n    if (\n      !rskIsValidChecksumAddress(data, chainId || null) &&\n      stripped !== stripped.toLowerCase() &&\n      stripped !== stripped.toUpperCase()\n    ) {\n      throw Error('Invalid address checksum');\n    }\n    return Buffer.from(rskStripHexPrefix(data), 'hex');\n  };\n}\n\nconst hexChecksumChain = (name: string, coinType: number, chainId?: number) => ({\n  coinType,\n  decoder: makeChecksummedHexDecoder(chainId),\n  encoder: makeChecksummedHexEncoder(chainId),\n  name,\n});\n\nfunction makeBech32Encoder(prefix: string) {\n  return (data: Buffer) => bech32Encode(prefix, bech32ToWords(data));\n}\n\nfunction makeBech32Decoder(currentPrefix: string) {\n  return (data: string) => {\n    const { prefix, words } = bech32Decode(data);\n    if (prefix !== currentPrefix) {\n      throw Error('Unrecognised address format');\n    }\n    return Buffer.from(bech32FromWords(words));\n  };\n}\n\nconst bech32Chain = (name: string, coinType: number, prefix: string) => ({\n  coinType,\n  decoder: makeBech32Decoder(prefix),\n  encoder: makeBech32Encoder(prefix),\n  name,\n});\n\n\nfunction b32encodeXemAddr(data: Buffer): string {\n  return b32encode(hex2a(data.toString('hex')));\n}\n\nfunction b32decodeXemAddr(data: string): Buffer {\n  if (!isValidXemAddress(data)) {\n    throw Error('Unrecognised address format');\n  }\n  const address = data\n    .toString()\n    .toUpperCase()\n    .replace(/-/g, '');\n  return b32decode(address);\n}\n\nfunction eosAddrEncoder(data: Buffer): string {\n  if (!eosPublicKey.isValid(data)) {\n    throw Error('Unrecognised address format');\n  }\n  return eosPublicKey.fromHex(data).toString();\n}\n\nfunction eosAddrDecoder(data: string): Buffer {\n  if (!eosPublicKey.isValid(data)) {\n    throw Error('Unrecognised address format');\n  }\n  return eosPublicKey(data).toBuffer();\n}\n\nfunction ksmAddrEncoder(data: Buffer): string {\n  return ss58Encode(Uint8Array.from(data), 2);\n}\n\nfunction dotAddrEncoder(data: Buffer): string {\n  return ss58Encode(Uint8Array.from(data), 0);\n}\n\nfunction ksmAddrDecoder(data: string): Buffer {\n  return new Buffer(ss58Decode(data));\n}\n\nfunction ontAddrEncoder(data: Buffer): string {\n  return bs58Encode(Buffer.concat([Buffer.from([0x17]), data]))\n}\n\nfunction ontAddrDecoder(data: string): Buffer {\n  const address = bs58Decode(data)\n\n  switch (address.readUInt8(0)) {\n   case 0x17:\n     return address.slice(1);\n\n    default:\n      throw Error('Unrecognised address format');\n  }\n}\n\nfunction strDecoder(data: string): Buffer {\n  return decodeEd25519PublicKey('ed25519PublicKey', data);\n}\n\nfunction strEncoder(data: Buffer): string {\n  return encodeEd25519PublicKey('ed25519PublicKey', data);\n}\n\n// Referenced from the followings\n// https://tezos.stackexchange.com/questions/183/base58-encoding-decoding-of-addresses-in-micheline\n// https://tezos.gitlab.io/api/p2p.html?highlight=contract_id#contract-id-22-bytes-8-bit-tag\nfunction tezosAddressEncoder(data: Buffer): string {\n  if (data.length !== 22 && data.length !== 21) {\n    throw Error('Unrecognised address format');\n  }\n\n  let prefix: Buffer;\n  switch (data.readUInt8(0)) {\n    case 0x00:\n      if (data.readUInt8(1) === 0x00) {\n        prefix = Buffer.from([0x06, 0xa1, 0x9f]); // prefix tz1 equal 06a19f\n      } else if (data.readUInt8(1) === 0x01) {\n        prefix = Buffer.from([0x06, 0xa1, 0xa1]); // prefix tz2 equal 06a1a1\n      } else if (data.readUInt8(1) === 0x02) {\n        prefix = Buffer.from([0x06, 0xa1, 0xa4]); // prefix tz3 equal 06a1a4\n      } else {\n        throw Error('Unrecognised address format');\n      }\n      return bs58Encode(Buffer.concat([prefix, data.slice(2)]));\n    case 0x01:\n      prefix = Buffer.from([0x02, 0x5a, 0x79]); // prefix KT1 equal 025a79\n      return bs58Encode(Buffer.concat([prefix, data.slice(1, 21)]));\n    default:\n      throw Error('Unrecognised address format');\n  }\n}\n\nfunction tezosAddressDecoder(data: string): Buffer {\n  const address = bs58Decode(data).slice(3);\n  switch (data.substring(0, 3)) {\n    case 'tz1':\n      return Buffer.concat([Buffer.from([0x00, 0x00]), address]);\n    case 'tz2':\n      return Buffer.concat([Buffer.from([0x00, 0x01]), address]);\n    case 'tz3':\n      return Buffer.concat([Buffer.from([0x00, 0x02]), address]);\n    case 'KT1':\n      return Buffer.concat([Buffer.from([0x01]), address, Buffer.from([0x00])]);\n    default:\n      throw Error('Unrecognised address format');\n  }\n}\n\n// Reference from js library:\n// https://github.com/hashgraph/hedera-sdk-java/blob/120d98ac9cd167db767ed77bb52cefc844b09fc9/src/main/java/com/hedera/hashgraph/sdk/SolidityUtil.java#L26\nfunction hederaAddressEncoder(data: Buffer): string {\n  if (data.length !== 20) {\n    throw Error('Unrecognised address format');\n  }\n\n  const view = new DataView(data.buffer, 0);\n\n  const shard = view.getUint32(0);\n  const realm = view.getBigUint64(4);\n  const account = view.getBigUint64(12);\n\n  return [shard, realm, account].join('.');\n}\n\n// Reference from js library:\n// https://github.com/hashgraph/hedera-sdk-java/blob/120d98ac9cd167db767ed77bb52cefc844b09fc9/src/main/java/com/hedera/hashgraph/sdk/SolidityUtil.java#L26\nfunction hederaAddressDecoder(data: string): Buffer {\n  const buffer = Buffer.alloc(20);\n  const view = new DataView(buffer.buffer, 0, 20);\n\n  const components = data.split('.');\n  if (components.length !== 3) {\n    throw Error('Unrecognised address format');\n  }\n\n  const shard = Number(components[0]);\n  const realm = BigInt(components[1]);\n  const account = BigInt(components[2]);\n\n  view.setUint32(0, shard);\n  view.setBigUint64(4, realm);\n  view.setBigUint64(12, account);\n\n  return buffer;\n}\n\n// Reference from Lisk validator\n// https://github.com/LiskHQ/lisk-sdk/blob/master/elements/lisk-validator/src/validation.ts#L202\nfunction validateLiskAddress(address: string) {\n  if (address.length < 2 || address.length > 22) {\n    throw new Error('Address length does not match requirements. Expected between 2 and 22 characters.');\n  }\n\n  if (address[address.length - 1] !== 'L') {\n    throw new Error('Address format does not match requirements. Expected \"L\" at the end.');\n  }\n\n  if (address.includes('.')) {\n    throw new Error('Address format does not match requirements. Address includes invalid character: `.`.');\n  }\n}\n\nfunction liskAddressEncoder(data: Buffer): string {\n  const address = `${bigInt(data.toString('hex'), 16).toString(10)}L`;\n\n  return address;\n}\n\nfunction liskAddressDecoder(data: string): Buffer {\n  validateLiskAddress(data);\n\n  return Buffer.from(bigInt(data.slice(0, -1)).toString(16), 'hex');\n}\n  \n// Reference:\n// https://github.com/handshake-org/hsd/blob/c85d9b4c743a9e1c9577d840e1bd20dee33473d3/lib/primitives/address.js#L297\nfunction hnsAddressEncoder(data: Buffer): string {\n  if (data.length !== 20) {\n    throw Error('P2WPKH must be 20 bytes');\n  }\n\n  const version = 0;\n  const words = [version].concat(bech32ToWords(data));\n  return bech32Encode('hs', words);\n}\n\n// Reference:\n// https://github.com/handshake-org/hsd/blob/c85d9b4c743a9e1c9577d840e1bd20dee33473d3/lib/primitives/address.js#L225\nfunction hnsAddressDecoder(data: string): Buffer {\n  const { prefix, words } = bech32Decode(data);\n\n  if (prefix !== 'hs') {\n    throw Error('Unrecognised address format');\n  }\n\n  const version = words[0];\n  const hash = bech32FromWords(words.slice(1));\n\n  if (version !== 0) {\n    throw Error('Bad program version');\n  }\n\n  if (hash.length !== 20) {\n    throw Error('Witness program hash is the wrong size');\n  }\n\n  return Buffer.from(hash);\n}\n\n// Referenced from following\n// https://github.com/icon-project/icon-service/blob/master/iconservice/base/address.py#L219\nfunction icxAddressEncoder(data: Buffer): string {\n  if (data.length !== 21) {\n    throw Error('Unrecognised address format');\n  }\n  switch (data.readUInt8(0)) {\n    case 0x00:\n      return 'hx' + data.slice(1).toString('hex');\n    case 0x01:\n      return 'cx' + data.slice(1).toString('hex');\n    default:\n      throw Error('Unrecognised address format');\n  }\n}\n\n// Referenced from following\n// https://github.com/icon-project/icon-service/blob/master/iconservice/base/address.py#L238\nfunction icxAddressDecoder(data: string): Buffer {\n  const prefix = data.slice(0, 2)\n  const body = data.slice(2)\n  switch (prefix) {\n    case 'hx':\n      return Buffer.concat([Buffer.from([0x00]), Buffer.from(body, 'hex')]);\n    case 'cx':\n      return Buffer.concat([Buffer.from([0x01]), Buffer.from(body, 'hex')]);\n    default:\n      throw Error('Unrecognised address format');\n  }\n}\n\nfunction steemAddressEncoder(data: Buffer): string {  \n  const RIPEMD160 = require('ripemd160');\n\n  const checksum = new RIPEMD160().update(data).digest();\n\n  return 'STM' + bs58EncodeNoCheck(Buffer.concat([data, checksum.slice(0, 4)]));\n}\n\nfunction steemAddressDecoder(data: string): Buffer {\n  const RIPEMD160 = require('ripemd160');\n\n  const prefix = data.slice(0, 3);\n  if (prefix !== 'STM') {\n    throw Error('Unrecognised address format');\n  }\n\n  data = data.slice(3);\n\n  const buffer: Buffer = bs58DecodeNoCheck(data);\n  const checksum = buffer.slice(-4);\n  const key = buffer.slice(0, -4);\n  const checksumVerify = new RIPEMD160().update(key).digest().slice(0, 4);\n\n  if(!checksumVerify.equals(checksum)) {\n    throw Error('Invalid checksum');\n  }\n\n  return Buffer.from(key);\n}\n\nconst AlgoChecksumByteLength = 4;\nconst AlgoAddressByteLength = 36;\n\n// Returns 4 last byte (8 chars) of sha512_256(publicKey)\nfunction algoChecksum(pk: Buffer): string {\n  return createHash('SHA512-256')\n    .update(pk)\n    .digest('hex')\n    .substr(-AlgoChecksumByteLength * 2);\n}\n\nfunction algoDecode(data: string): Buffer {\n  const decoded = b32decode(data);\n\n  if (decoded.length !== AlgoAddressByteLength) {\n    throw Error('Unrecognised address format');\n  }\n\n  const publicKey = decoded.slice(0, -AlgoChecksumByteLength);\n  const checksum = decoded.slice(-AlgoChecksumByteLength);\n  const expectedChecksum = algoChecksum(publicKey);\n\n  if (checksum.toString('hex') !== expectedChecksum) {\n    throw Error('Unrecognised address format');\n  }\n\n  return publicKey;\n}\n\nfunction algoEncode(data: Buffer): string {\n  // Calculate publicKey checksum\n  const checksum = algoChecksum(data);\n\n  // Append publicKey and checksum\n  const addr = b32encode(hex2a(data.toString('hex').concat(checksum)));\n\n  // Removing the extra '='\n  const cleanAddr = addr.replace(/=/g, '');\n  return cleanAddr;\n}\n\nfunction arkAddressDecoder(data: string): Buffer {\n  const buffer = bs58Decode(data);\n\n  if (buffer[0] !== 23) {\n    throw Error('Unrecognised address format');\n  }\n\n  return buffer;\n}\n\nfunction nanoAddressEncoder(data: Buffer): string {\n  const encoded = nanoBase32Encode(Uint8Array.from(data));\n  const checksum = blake2b(data, null, 5).reverse();\n  const checksumEncoded = nanoBase32Encode(checksum);\n\n  const address = `nano_${encoded}${checksumEncoded}`;\n  \n  return address;\n}\n\nfunction nanoAddressDecoder(data: string): Buffer {\n  const decoded = nanoBase32Decode(data.slice(5));\n  \n  return Buffer.from(decoded).slice(0, -5);\n}\n\nconst getConfig = (name: string, coinType: number, encoder: EnCoder, decoder: DeCoder) => {\n  return {\n    coinType,\n    decoder,\n    encoder,\n    name,\n  };\n};\n\n// Ordered by coinType\nexport const formats: IFormat[] = [\n  bitcoinChain('BTC', 0, 'bc', [[0x00]], [[0x05]]),\n  bitcoinChain('LTC', 2, 'ltc', [[0x30]], [[0x32], [0x05]]),\n  bitcoinBase58Chain('DOGE', 3, [[0x1e]], [[0x16]]),\n  bitcoinBase58Chain('RDD', 4, [[0x3d]], [[0x05]]),\n  bitcoinBase58Chain('DASH', 5, [[0x4c]], [[0x10]]),\n  bitcoinBase58Chain('PPC', 6, [[0x37]], [[0x75]]),\n  getConfig('NMC', 7, bs58Encode, bs58Decode),\n  bitcoinChain('MONA', 22, 'mona', [[0x32]], [[0x37], [0x05]]),\n  getConfig('DCR', 42, bs58EncodeNoCheck, bs58DecodeNoCheck),\n  getConfig('XEM', 43, b32encodeXemAddr, b32decodeXemAddr),\n  bitcoinBase58Chain('AIB', 55, [[0x17]], [[0x05]]),\n  bitcoinChain('SYS', 57, 'sys', [[0x3f]], [[0x05]]),\n  hexChecksumChain('ETH', 60),\n  hexChecksumChain('ETC', 61),\n  getConfig('ICX', 74, icxAddressEncoder, icxAddressDecoder),\n  getConfig('ARK', 111, bs58Encode, arkAddressDecoder),\n  bech32Chain('ATOM', 118, 'cosmos'),\n  bech32Chain('ZIL', 119, 'zil'),\n  bech32Chain('EGLD', 120, 'erd'),\n  zcashChain('ZEC', 133, 'zs', [[0x1c, 0xb8]], [[0x1c, 0xbd]]),\n  getConfig('LSK', 134, liskAddressEncoder, liskAddressDecoder),\n  getConfig('STEEM', 135, steemAddressEncoder, steemAddressDecoder),\n  hexChecksumChain('RSK', 137, 30),\n  getConfig('XRP', 144, data => xrpCodec.encodeChecked(data), data => xrpCodec.decodeChecked(data)),\n  getConfig('BCH', 145, encodeCashAddr, decodeBitcoinCash),\n  getConfig('XLM', 148, strEncoder, strDecoder),\n  getConfig('NANO', 165, nanoAddressEncoder, nanoAddressDecoder),\n  getConfig('EOS', 194, eosAddrEncoder, eosAddrDecoder),\n  getConfig('TRX', 195, bs58Encode, bs58Decode),\n  getConfig('NEO', 239, bs58Encode, bs58Decode),\n  getConfig('ALGO', 283, algoEncode, algoDecode),\n  bitcoinBase58Chain('DIVI', 301, [[0x1e]], [[0xd]]),\n  bech32Chain('IOTX', 304, 'io'),\n  getConfig('DOT', 354, dotAddrEncoder, ksmAddrDecoder),\n  getConfig('KSM', 434, ksmAddrEncoder, ksmAddrDecoder),\n  getConfig('FIL', 461, filAddrEncoder, filAddrDecoder),\n  bitcoinBase58Chain('CCA', 489, [[0x0b]], [[0x05]]),\n  getConfig('SOL', 501, bs58EncodeNoCheck, bs58DecodeNoCheck),\n  bitcoinBase58Chain('LRG', 568, [[0x1e]], [[0x0d]]),\n  bitcoinChain('CCXX', 571, 'ccx', [[0x89]], [[0x4b], [0x05]]),\n  bitcoinBase58Chain('BPS', 576, [[0x00]], [[0x05]]),\n  hexChecksumChain('XDAI', 700),\n  hexChecksumChain('VET', 703),\n  bech32Chain('BNB', 714, 'bnb'),\n  getConfig('HIVE', 825, steemAddressEncoder, steemAddressDecoder),\n  bech32Chain('ONE', 1023, 'one'),\n  getConfig('ONT', 1024, ontAddrEncoder, ontAddrDecoder),\n  {\n    coinType: 1729,\n    decoder: tezosAddressDecoder,\n    encoder: tezosAddressEncoder,\n    name: 'XTZ',\n  },\n  bech32Chain('ADA', 1815, 'addr'),\n  getConfig('QTUM', 2301, bs58Encode, bs58Decode),\n  getConfig('ELA', 2305, bs58EncodeNoCheck, bs58DecodeNoCheck),\n  {\n    coinType: 3030,\n    decoder: hederaAddressDecoder,\n    encoder: hederaAddressEncoder,\n    name: 'HBAR',\n  },\n  getConfig('HNS', 5353, hnsAddressEncoder, hnsAddressDecoder),\n  hexChecksumChain('CELO', 52752),\n];\n\nexport const formatsByName: { [key: string]: IFormat } = Object.assign({}, ...formats.map(x => ({ [x.name]: x })));\nexport const formatsByCoinType: { [key: number]: IFormat } = Object.assign(\n  {},\n  ...formats.map(x => ({ [x.coinType]: x })),\n);\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getEnsStartBlock = getEnsStartBlock;\nexports.validateName = validateName;\nexports.isLabelValid = isLabelValid;\nObject.defineProperty(exports, \"isEncodedLabelhash\", {\n  enumerable: true,\n  get: function get() {\n    return _labelhash.isEncodedLabelhash;\n  }\n});\nObject.defineProperty(exports, \"isDecrypted\", {\n  enumerable: true,\n  get: function get() {\n    return _labelhash.isDecrypted;\n  }\n});\nObject.defineProperty(exports, \"decodeLabelhash\", {\n  enumerable: true,\n  get: function get() {\n    return _labelhash.decodeLabelhash;\n  }\n});\nObject.defineProperty(exports, \"encodeLabelhash\", {\n  enumerable: true,\n  get: function get() {\n    return _labelhash.encodeLabelhash;\n  }\n});\nObject.defineProperty(exports, \"labelhash\", {\n  enumerable: true,\n  get: function get() {\n    return _labelhash.labelhash;\n  }\n});\nObject.defineProperty(exports, \"encodeContenthash\", {\n  enumerable: true,\n  get: function get() {\n    return _contents.encodeContenthash;\n  }\n});\nObject.defineProperty(exports, \"decodeContenthash\", {\n  enumerable: true,\n  get: function get() {\n    return _contents.decodeContenthash;\n  }\n});\nObject.defineProperty(exports, \"isValidContenthash\", {\n  enumerable: true,\n  get: function get() {\n    return _contents.isValidContenthash;\n  }\n});\nObject.defineProperty(exports, \"namehash\", {\n  enumerable: true,\n  get: function get() {\n    return _namehash.namehash;\n  }\n});\nexports.parseSearchTerm = exports.mergeLabels = exports.checkLabels = exports.emptyAddress = exports.uniq = void 0;\n\nvar _ethers = require(\"ethers\");\n\nvar _labelhash = require(\"./labelhash\");\n\nvar _contents = require(\"./contents\");\n\nvar _ethEnsNamehash = require(\"eth-ens-namehash\");\n\nvar _namehash = require(\"./namehash\");\n\n//import { checkLabelHash } from '../updaters/preImageDB'\nvar uniq = function uniq(a, param) {\n  return a.filter(function (item, pos) {\n    return a.map(function (mapItem) {\n      return mapItem[param];\n    }).indexOf(item[param]) === pos;\n  });\n};\n\nexports.uniq = uniq;\n\nvar checkLabels = function checkLabels() {\n  for (var _len = arguments.length, labelHashes = new Array(_len), _key = 0; _key < _len; _key++) {\n    labelHashes[_key] = arguments[_key];\n  }\n\n  return labelHashes.map(function (hash) {\n    return null;\n  });\n};\n\nexports.checkLabels = checkLabels;\n\nfunction getEnsStartBlock(networkId) {\n  switch (networkId) {\n    case 1:\n    case '1':\n      return 3327417;\n\n    case 3:\n    case '3':\n      return 25409;\n\n    default:\n      return 0;\n  }\n} // export const checkLabels = (...labelHashes) =>\n//   labelHashes.map(labelHash => checkLabelHash(labelHash) || null)\n\n\nvar mergeLabels = function mergeLabels(labels1, labels2) {\n  return labels1.map(function (label, index) {\n    return label ? label : labels2[index];\n  });\n};\n\nexports.mergeLabels = mergeLabels;\n\nfunction validateName(name) {\n  var nameArray = name.split('.');\n  var hasEmptyLabels = nameArray.filter(function (e) {\n    return e.length < 1;\n  }).length > 0;\n  if (hasEmptyLabels) throw new Error('Domain cannot have empty labels');\n  var normalizedArray = nameArray.map(function (label) {\n    return (0, _labelhash.isEncodedLabelhash)(label) ? label : (0, _ethEnsNamehash.normalize)(label);\n  });\n\n  try {\n    return normalizedArray.join('.');\n  } catch (e) {\n    throw e;\n  }\n}\n\nfunction isLabelValid(name) {\n  try {\n    validateName(name);\n\n    if (name.indexOf('.') === -1) {\n      return true;\n    }\n  } catch (e) {\n    console.log(e);\n    return false;\n  }\n}\n\nvar parseSearchTerm = function parseSearchTerm(term, validTld) {\n  var regex = /[^.]+$/;\n\n  try {\n    validateName(term);\n  } catch (e) {\n    return 'invalid';\n  }\n\n  if (term.indexOf('.') !== -1) {\n    var termArray = term.split('.');\n    var tld = term.match(regex) ? term.match(regex)[0] : '';\n\n    if (validTld) {\n      if (tld === 'eth' && termArray[termArray.length - 2].length < 3) {\n        return 'short';\n      }\n\n      return 'supported';\n    }\n\n    return 'unsupported';\n  } else if (_ethers.ethers.utils.isAddress(term)) {\n    return 'address';\n  } else {\n    //check if the search term is actually a tld\n    if (validTld) {\n      return 'tld';\n    }\n\n    return 'search';\n  }\n};\n\nexports.parseSearchTerm = parseSearchTerm;\nvar emptyAddress = '0x0000000000000000000000000000000000000000';\nexports.emptyAddress = emptyAddress;","/**\r\n * [js-sha3]{@link https://github.com/emn178/js-sha3}\r\n *\r\n * @version 0.5.7\r\n * @author Chen, Yi-Cyuan [emn178@gmail.com]\r\n * @copyright Chen, Yi-Cyuan 2015-2016\r\n * @license MIT\r\n */\r\n/*jslint bitwise: true */\r\n(function () {\r\n  'use strict';\r\n\r\n  var root = typeof window === 'object' ? window : {};\r\n  var NODE_JS = !root.JS_SHA3_NO_NODE_JS && typeof process === 'object' && process.versions && process.versions.node;\r\n  if (NODE_JS) {\r\n    root = global;\r\n  }\r\n  var COMMON_JS = !root.JS_SHA3_NO_COMMON_JS && typeof module === 'object' && module.exports;\r\n  var HEX_CHARS = '0123456789abcdef'.split('');\r\n  var SHAKE_PADDING = [31, 7936, 2031616, 520093696];\r\n  var KECCAK_PADDING = [1, 256, 65536, 16777216];\r\n  var PADDING = [6, 1536, 393216, 100663296];\r\n  var SHIFT = [0, 8, 16, 24];\r\n  var RC = [1, 0, 32898, 0, 32906, 2147483648, 2147516416, 2147483648, 32907, 0, 2147483649,\r\n            0, 2147516545, 2147483648, 32777, 2147483648, 138, 0, 136, 0, 2147516425, 0,\r\n            2147483658, 0, 2147516555, 0, 139, 2147483648, 32905, 2147483648, 32771,\r\n            2147483648, 32770, 2147483648, 128, 2147483648, 32778, 0, 2147483658, 2147483648,\r\n            2147516545, 2147483648, 32896, 2147483648, 2147483649, 0, 2147516424, 2147483648];\r\n  var BITS = [224, 256, 384, 512];\r\n  var SHAKE_BITS = [128, 256];\r\n  var OUTPUT_TYPES = ['hex', 'buffer', 'arrayBuffer', 'array'];\r\n\r\n  var createOutputMethod = function (bits, padding, outputType) {\r\n    return function (message) {\r\n      return new Keccak(bits, padding, bits).update(message)[outputType]();\r\n    };\r\n  };\r\n\r\n  var createShakeOutputMethod = function (bits, padding, outputType) {\r\n    return function (message, outputBits) {\r\n      return new Keccak(bits, padding, outputBits).update(message)[outputType]();\r\n    };\r\n  };\r\n\r\n  var createMethod = function (bits, padding) {\r\n    var method = createOutputMethod(bits, padding, 'hex');\r\n    method.create = function () {\r\n      return new Keccak(bits, padding, bits);\r\n    };\r\n    method.update = function (message) {\r\n      return method.create().update(message);\r\n    };\r\n    for (var i = 0; i < OUTPUT_TYPES.length; ++i) {\r\n      var type = OUTPUT_TYPES[i];\r\n      method[type] = createOutputMethod(bits, padding, type);\r\n    }\r\n    return method;\r\n  };\r\n\r\n  var createShakeMethod = function (bits, padding) {\r\n    var method = createShakeOutputMethod(bits, padding, 'hex');\r\n    method.create = function (outputBits) {\r\n      return new Keccak(bits, padding, outputBits);\r\n    };\r\n    method.update = function (message, outputBits) {\r\n      return method.create(outputBits).update(message);\r\n    };\r\n    for (var i = 0; i < OUTPUT_TYPES.length; ++i) {\r\n      var type = OUTPUT_TYPES[i];\r\n      method[type] = createShakeOutputMethod(bits, padding, type);\r\n    }\r\n    return method;\r\n  };\r\n\r\n  var algorithms = [\r\n    {name: 'keccak', padding: KECCAK_PADDING, bits: BITS, createMethod: createMethod},\r\n    {name: 'sha3', padding: PADDING, bits: BITS, createMethod: createMethod},\r\n    {name: 'shake', padding: SHAKE_PADDING, bits: SHAKE_BITS, createMethod: createShakeMethod}\r\n  ];\r\n\r\n  var methods = {}, methodNames = [];\r\n\r\n  for (var i = 0; i < algorithms.length; ++i) {\r\n    var algorithm = algorithms[i];\r\n    var bits  = algorithm.bits;\r\n    for (var j = 0; j < bits.length; ++j) {\r\n      var methodName = algorithm.name +'_' + bits[j];\r\n      methodNames.push(methodName);\r\n      methods[methodName] = algorithm.createMethod(bits[j], algorithm.padding);\r\n    }\r\n  }\r\n\r\n  function Keccak(bits, padding, outputBits) {\r\n    this.blocks = [];\r\n    this.s = [];\r\n    this.padding = padding;\r\n    this.outputBits = outputBits;\r\n    this.reset = true;\r\n    this.block = 0;\r\n    this.start = 0;\r\n    this.blockCount = (1600 - (bits << 1)) >> 5;\r\n    this.byteCount = this.blockCount << 2;\r\n    this.outputBlocks = outputBits >> 5;\r\n    this.extraBytes = (outputBits & 31) >> 3;\r\n\r\n    for (var i = 0; i < 50; ++i) {\r\n      this.s[i] = 0;\r\n    }\r\n  }\r\n\r\n  Keccak.prototype.update = function (message) {\r\n    var notString = typeof message !== 'string';\r\n    if (notString && message.constructor === ArrayBuffer) {\r\n      message = new Uint8Array(message);\r\n    }\r\n    var length = message.length, blocks = this.blocks, byteCount = this.byteCount,\r\n      blockCount = this.blockCount, index = 0, s = this.s, i, code;\r\n\r\n    while (index < length) {\r\n      if (this.reset) {\r\n        this.reset = false;\r\n        blocks[0] = this.block;\r\n        for (i = 1; i < blockCount + 1; ++i) {\r\n          blocks[i] = 0;\r\n        }\r\n      }\r\n      if (notString) {\r\n        for (i = this.start; index < length && i < byteCount; ++index) {\r\n          blocks[i >> 2] |= message[index] << SHIFT[i++ & 3];\r\n        }\r\n      } else {\r\n        for (i = this.start; index < length && i < byteCount; ++index) {\r\n          code = message.charCodeAt(index);\r\n          if (code < 0x80) {\r\n            blocks[i >> 2] |= code << SHIFT[i++ & 3];\r\n          } else if (code < 0x800) {\r\n            blocks[i >> 2] |= (0xc0 | (code >> 6)) << SHIFT[i++ & 3];\r\n            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\r\n          } else if (code < 0xd800 || code >= 0xe000) {\r\n            blocks[i >> 2] |= (0xe0 | (code >> 12)) << SHIFT[i++ & 3];\r\n            blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];\r\n            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\r\n          } else {\r\n            code = 0x10000 + (((code & 0x3ff) << 10) | (message.charCodeAt(++index) & 0x3ff));\r\n            blocks[i >> 2] |= (0xf0 | (code >> 18)) << SHIFT[i++ & 3];\r\n            blocks[i >> 2] |= (0x80 | ((code >> 12) & 0x3f)) << SHIFT[i++ & 3];\r\n            blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];\r\n            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\r\n          }\r\n        }\r\n      }\r\n      this.lastByteIndex = i;\r\n      if (i >= byteCount) {\r\n        this.start = i - byteCount;\r\n        this.block = blocks[blockCount];\r\n        for (i = 0; i < blockCount; ++i) {\r\n          s[i] ^= blocks[i];\r\n        }\r\n        f(s);\r\n        this.reset = true;\r\n      } else {\r\n        this.start = i;\r\n      }\r\n    }\r\n    return this;\r\n  };\r\n\r\n  Keccak.prototype.finalize = function () {\r\n    var blocks = this.blocks, i = this.lastByteIndex, blockCount = this.blockCount, s = this.s;\r\n    blocks[i >> 2] |= this.padding[i & 3];\r\n    if (this.lastByteIndex === this.byteCount) {\r\n      blocks[0] = blocks[blockCount];\r\n      for (i = 1; i < blockCount + 1; ++i) {\r\n        blocks[i] = 0;\r\n      }\r\n    }\r\n    blocks[blockCount - 1] |= 0x80000000;\r\n    for (i = 0; i < blockCount; ++i) {\r\n      s[i] ^= blocks[i];\r\n    }\r\n    f(s);\r\n  };\r\n\r\n  Keccak.prototype.toString = Keccak.prototype.hex = function () {\r\n    this.finalize();\r\n\r\n    var blockCount = this.blockCount, s = this.s, outputBlocks = this.outputBlocks,\r\n        extraBytes = this.extraBytes, i = 0, j = 0;\r\n    var hex = '', block;\r\n    while (j < outputBlocks) {\r\n      for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) {\r\n        block = s[i];\r\n        hex += HEX_CHARS[(block >> 4) & 0x0F] + HEX_CHARS[block & 0x0F] +\r\n               HEX_CHARS[(block >> 12) & 0x0F] + HEX_CHARS[(block >> 8) & 0x0F] +\r\n               HEX_CHARS[(block >> 20) & 0x0F] + HEX_CHARS[(block >> 16) & 0x0F] +\r\n               HEX_CHARS[(block >> 28) & 0x0F] + HEX_CHARS[(block >> 24) & 0x0F];\r\n      }\r\n      if (j % blockCount === 0) {\r\n        f(s);\r\n        i = 0;\r\n      }\r\n    }\r\n    if (extraBytes) {\r\n      block = s[i];\r\n      if (extraBytes > 0) {\r\n        hex += HEX_CHARS[(block >> 4) & 0x0F] + HEX_CHARS[block & 0x0F];\r\n      }\r\n      if (extraBytes > 1) {\r\n        hex += HEX_CHARS[(block >> 12) & 0x0F] + HEX_CHARS[(block >> 8) & 0x0F];\r\n      }\r\n      if (extraBytes > 2) {\r\n        hex += HEX_CHARS[(block >> 20) & 0x0F] + HEX_CHARS[(block >> 16) & 0x0F];\r\n      }\r\n    }\r\n    return hex;\r\n  };\r\n\r\n  Keccak.prototype.arrayBuffer = function () {\r\n    this.finalize();\r\n\r\n    var blockCount = this.blockCount, s = this.s, outputBlocks = this.outputBlocks,\r\n        extraBytes = this.extraBytes, i = 0, j = 0;\r\n    var bytes = this.outputBits >> 3;\r\n    var buffer;\r\n    if (extraBytes) {\r\n      buffer = new ArrayBuffer((outputBlocks + 1) << 2);\r\n    } else {\r\n      buffer = new ArrayBuffer(bytes);\r\n    }\r\n    var array = new Uint32Array(buffer);\r\n    while (j < outputBlocks) {\r\n      for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) {\r\n        array[j] = s[i];\r\n      }\r\n      if (j % blockCount === 0) {\r\n        f(s);\r\n      }\r\n    }\r\n    if (extraBytes) {\r\n      array[i] = s[i];\r\n      buffer = buffer.slice(0, bytes);\r\n    }\r\n    return buffer;\r\n  };\r\n\r\n  Keccak.prototype.buffer = Keccak.prototype.arrayBuffer;\r\n\r\n  Keccak.prototype.digest = Keccak.prototype.array = function () {\r\n    this.finalize();\r\n\r\n    var blockCount = this.blockCount, s = this.s, outputBlocks = this.outputBlocks,\r\n        extraBytes = this.extraBytes, i = 0, j = 0;\r\n    var array = [], offset, block;\r\n    while (j < outputBlocks) {\r\n      for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) {\r\n        offset = j << 2;\r\n        block = s[i];\r\n        array[offset] = block & 0xFF;\r\n        array[offset + 1] = (block >> 8) & 0xFF;\r\n        array[offset + 2] = (block >> 16) & 0xFF;\r\n        array[offset + 3] = (block >> 24) & 0xFF;\r\n      }\r\n      if (j % blockCount === 0) {\r\n        f(s);\r\n      }\r\n    }\r\n    if (extraBytes) {\r\n      offset = j << 2;\r\n      block = s[i];\r\n      if (extraBytes > 0) {\r\n        array[offset] = block & 0xFF;\r\n      }\r\n      if (extraBytes > 1) {\r\n        array[offset + 1] = (block >> 8) & 0xFF;\r\n      }\r\n      if (extraBytes > 2) {\r\n        array[offset + 2] = (block >> 16) & 0xFF;\r\n      }\r\n    }\r\n    return array;\r\n  };\r\n\r\n  var f = function (s) {\r\n    var h, l, n, c0, c1, c2, c3, c4, c5, c6, c7, c8, c9,\r\n        b0, b1, b2, b3, b4, b5, b6, b7, b8, b9, b10, b11, b12, b13, b14, b15, b16, b17,\r\n        b18, b19, b20, b21, b22, b23, b24, b25, b26, b27, b28, b29, b30, b31, b32, b33,\r\n        b34, b35, b36, b37, b38, b39, b40, b41, b42, b43, b44, b45, b46, b47, b48, b49;\r\n    for (n = 0; n < 48; n += 2) {\r\n      c0 = s[0] ^ s[10] ^ s[20] ^ s[30] ^ s[40];\r\n      c1 = s[1] ^ s[11] ^ s[21] ^ s[31] ^ s[41];\r\n      c2 = s[2] ^ s[12] ^ s[22] ^ s[32] ^ s[42];\r\n      c3 = s[3] ^ s[13] ^ s[23] ^ s[33] ^ s[43];\r\n      c4 = s[4] ^ s[14] ^ s[24] ^ s[34] ^ s[44];\r\n      c5 = s[5] ^ s[15] ^ s[25] ^ s[35] ^ s[45];\r\n      c6 = s[6] ^ s[16] ^ s[26] ^ s[36] ^ s[46];\r\n      c7 = s[7] ^ s[17] ^ s[27] ^ s[37] ^ s[47];\r\n      c8 = s[8] ^ s[18] ^ s[28] ^ s[38] ^ s[48];\r\n      c9 = s[9] ^ s[19] ^ s[29] ^ s[39] ^ s[49];\r\n\r\n      h = c8 ^ ((c2 << 1) | (c3 >>> 31));\r\n      l = c9 ^ ((c3 << 1) | (c2 >>> 31));\r\n      s[0] ^= h;\r\n      s[1] ^= l;\r\n      s[10] ^= h;\r\n      s[11] ^= l;\r\n      s[20] ^= h;\r\n      s[21] ^= l;\r\n      s[30] ^= h;\r\n      s[31] ^= l;\r\n      s[40] ^= h;\r\n      s[41] ^= l;\r\n      h = c0 ^ ((c4 << 1) | (c5 >>> 31));\r\n      l = c1 ^ ((c5 << 1) | (c4 >>> 31));\r\n      s[2] ^= h;\r\n      s[3] ^= l;\r\n      s[12] ^= h;\r\n      s[13] ^= l;\r\n      s[22] ^= h;\r\n      s[23] ^= l;\r\n      s[32] ^= h;\r\n      s[33] ^= l;\r\n      s[42] ^= h;\r\n      s[43] ^= l;\r\n      h = c2 ^ ((c6 << 1) | (c7 >>> 31));\r\n      l = c3 ^ ((c7 << 1) | (c6 >>> 31));\r\n      s[4] ^= h;\r\n      s[5] ^= l;\r\n      s[14] ^= h;\r\n      s[15] ^= l;\r\n      s[24] ^= h;\r\n      s[25] ^= l;\r\n      s[34] ^= h;\r\n      s[35] ^= l;\r\n      s[44] ^= h;\r\n      s[45] ^= l;\r\n      h = c4 ^ ((c8 << 1) | (c9 >>> 31));\r\n      l = c5 ^ ((c9 << 1) | (c8 >>> 31));\r\n      s[6] ^= h;\r\n      s[7] ^= l;\r\n      s[16] ^= h;\r\n      s[17] ^= l;\r\n      s[26] ^= h;\r\n      s[27] ^= l;\r\n      s[36] ^= h;\r\n      s[37] ^= l;\r\n      s[46] ^= h;\r\n      s[47] ^= l;\r\n      h = c6 ^ ((c0 << 1) | (c1 >>> 31));\r\n      l = c7 ^ ((c1 << 1) | (c0 >>> 31));\r\n      s[8] ^= h;\r\n      s[9] ^= l;\r\n      s[18] ^= h;\r\n      s[19] ^= l;\r\n      s[28] ^= h;\r\n      s[29] ^= l;\r\n      s[38] ^= h;\r\n      s[39] ^= l;\r\n      s[48] ^= h;\r\n      s[49] ^= l;\r\n\r\n      b0 = s[0];\r\n      b1 = s[1];\r\n      b32 = (s[11] << 4) | (s[10] >>> 28);\r\n      b33 = (s[10] << 4) | (s[11] >>> 28);\r\n      b14 = (s[20] << 3) | (s[21] >>> 29);\r\n      b15 = (s[21] << 3) | (s[20] >>> 29);\r\n      b46 = (s[31] << 9) | (s[30] >>> 23);\r\n      b47 = (s[30] << 9) | (s[31] >>> 23);\r\n      b28 = (s[40] << 18) | (s[41] >>> 14);\r\n      b29 = (s[41] << 18) | (s[40] >>> 14);\r\n      b20 = (s[2] << 1) | (s[3] >>> 31);\r\n      b21 = (s[3] << 1) | (s[2] >>> 31);\r\n      b2 = (s[13] << 12) | (s[12] >>> 20);\r\n      b3 = (s[12] << 12) | (s[13] >>> 20);\r\n      b34 = (s[22] << 10) | (s[23] >>> 22);\r\n      b35 = (s[23] << 10) | (s[22] >>> 22);\r\n      b16 = (s[33] << 13) | (s[32] >>> 19);\r\n      b17 = (s[32] << 13) | (s[33] >>> 19);\r\n      b48 = (s[42] << 2) | (s[43] >>> 30);\r\n      b49 = (s[43] << 2) | (s[42] >>> 30);\r\n      b40 = (s[5] << 30) | (s[4] >>> 2);\r\n      b41 = (s[4] << 30) | (s[5] >>> 2);\r\n      b22 = (s[14] << 6) | (s[15] >>> 26);\r\n      b23 = (s[15] << 6) | (s[14] >>> 26);\r\n      b4 = (s[25] << 11) | (s[24] >>> 21);\r\n      b5 = (s[24] << 11) | (s[25] >>> 21);\r\n      b36 = (s[34] << 15) | (s[35] >>> 17);\r\n      b37 = (s[35] << 15) | (s[34] >>> 17);\r\n      b18 = (s[45] << 29) | (s[44] >>> 3);\r\n      b19 = (s[44] << 29) | (s[45] >>> 3);\r\n      b10 = (s[6] << 28) | (s[7] >>> 4);\r\n      b11 = (s[7] << 28) | (s[6] >>> 4);\r\n      b42 = (s[17] << 23) | (s[16] >>> 9);\r\n      b43 = (s[16] << 23) | (s[17] >>> 9);\r\n      b24 = (s[26] << 25) | (s[27] >>> 7);\r\n      b25 = (s[27] << 25) | (s[26] >>> 7);\r\n      b6 = (s[36] << 21) | (s[37] >>> 11);\r\n      b7 = (s[37] << 21) | (s[36] >>> 11);\r\n      b38 = (s[47] << 24) | (s[46] >>> 8);\r\n      b39 = (s[46] << 24) | (s[47] >>> 8);\r\n      b30 = (s[8] << 27) | (s[9] >>> 5);\r\n      b31 = (s[9] << 27) | (s[8] >>> 5);\r\n      b12 = (s[18] << 20) | (s[19] >>> 12);\r\n      b13 = (s[19] << 20) | (s[18] >>> 12);\r\n      b44 = (s[29] << 7) | (s[28] >>> 25);\r\n      b45 = (s[28] << 7) | (s[29] >>> 25);\r\n      b26 = (s[38] << 8) | (s[39] >>> 24);\r\n      b27 = (s[39] << 8) | (s[38] >>> 24);\r\n      b8 = (s[48] << 14) | (s[49] >>> 18);\r\n      b9 = (s[49] << 14) | (s[48] >>> 18);\r\n\r\n      s[0] = b0 ^ (~b2 & b4);\r\n      s[1] = b1 ^ (~b3 & b5);\r\n      s[10] = b10 ^ (~b12 & b14);\r\n      s[11] = b11 ^ (~b13 & b15);\r\n      s[20] = b20 ^ (~b22 & b24);\r\n      s[21] = b21 ^ (~b23 & b25);\r\n      s[30] = b30 ^ (~b32 & b34);\r\n      s[31] = b31 ^ (~b33 & b35);\r\n      s[40] = b40 ^ (~b42 & b44);\r\n      s[41] = b41 ^ (~b43 & b45);\r\n      s[2] = b2 ^ (~b4 & b6);\r\n      s[3] = b3 ^ (~b5 & b7);\r\n      s[12] = b12 ^ (~b14 & b16);\r\n      s[13] = b13 ^ (~b15 & b17);\r\n      s[22] = b22 ^ (~b24 & b26);\r\n      s[23] = b23 ^ (~b25 & b27);\r\n      s[32] = b32 ^ (~b34 & b36);\r\n      s[33] = b33 ^ (~b35 & b37);\r\n      s[42] = b42 ^ (~b44 & b46);\r\n      s[43] = b43 ^ (~b45 & b47);\r\n      s[4] = b4 ^ (~b6 & b8);\r\n      s[5] = b5 ^ (~b7 & b9);\r\n      s[14] = b14 ^ (~b16 & b18);\r\n      s[15] = b15 ^ (~b17 & b19);\r\n      s[24] = b24 ^ (~b26 & b28);\r\n      s[25] = b25 ^ (~b27 & b29);\r\n      s[34] = b34 ^ (~b36 & b38);\r\n      s[35] = b35 ^ (~b37 & b39);\r\n      s[44] = b44 ^ (~b46 & b48);\r\n      s[45] = b45 ^ (~b47 & b49);\r\n      s[6] = b6 ^ (~b8 & b0);\r\n      s[7] = b7 ^ (~b9 & b1);\r\n      s[16] = b16 ^ (~b18 & b10);\r\n      s[17] = b17 ^ (~b19 & b11);\r\n      s[26] = b26 ^ (~b28 & b20);\r\n      s[27] = b27 ^ (~b29 & b21);\r\n      s[36] = b36 ^ (~b38 & b30);\r\n      s[37] = b37 ^ (~b39 & b31);\r\n      s[46] = b46 ^ (~b48 & b40);\r\n      s[47] = b47 ^ (~b49 & b41);\r\n      s[8] = b8 ^ (~b0 & b2);\r\n      s[9] = b9 ^ (~b1 & b3);\r\n      s[18] = b18 ^ (~b10 & b12);\r\n      s[19] = b19 ^ (~b11 & b13);\r\n      s[28] = b28 ^ (~b20 & b22);\r\n      s[29] = b29 ^ (~b21 & b23);\r\n      s[38] = b38 ^ (~b30 & b32);\r\n      s[39] = b39 ^ (~b31 & b33);\r\n      s[48] = b48 ^ (~b40 & b42);\r\n      s[49] = b49 ^ (~b41 & b43);\r\n\r\n      s[0] ^= RC[n];\r\n      s[1] ^= RC[n + 1];\r\n    }\r\n  };\r\n\r\n  if (COMMON_JS) {\r\n    module.exports = methods;\r\n  } else {\r\n    for (var i = 0; i < methodNames.length; ++i) {\r\n      root[methodNames[i]] = methods[methodNames[i]];\r\n    }\r\n  }\r\n})();\r\n","(function(root, factory) {\n  /* istanbul ignore next */\n  if (typeof define === 'function' && define.amd) {\n    define(['punycode', './idna-map'], function(punycode, idna_map) {\n      return factory(punycode, idna_map);\n    });\n  }\n  else if (typeof exports === 'object') {\n    module.exports = factory(require('punycode'), require('./idna-map'));\n  }\n  else {\n    root.uts46 = factory(root.punycode, root.idna_map);\n  }\n}(this, function(punycode, idna_map) {\n\n  function mapLabel(label, useStd3ASCII, transitional) {\n    var mapped = [];\n    var chars = punycode.ucs2.decode(label);\n    for (var i = 0; i < chars.length; i++) {\n      var cp = chars[i];\n      var ch = punycode.ucs2.encode([chars[i]]);\n      var composite = idna_map.mapChar(cp);\n      var flags = (composite >> 23);\n      var kind = (composite >> 21) & 3;\n      var index = (composite >> 5) & 0xffff;\n      var length = composite & 0x1f;\n      var value = idna_map.mapStr.substr(index, length);\n      if (kind === 0 || (useStd3ASCII && (flags & 1))) {\n        throw new Error(\"Illegal char \" + ch);\n      }\n      else if (kind === 1) {\n        mapped.push(value);\n      }\n      else if (kind === 2) {\n        mapped.push(transitional ? value : ch);\n      }\n      /* istanbul ignore next */\n      else if (kind === 3) {\n        mapped.push(ch);\n      }\n    }\n\n    var newLabel = mapped.join(\"\").normalize(\"NFC\");\n    return newLabel;\n  }\n\n  function process(domain, transitional, useStd3ASCII) {\n    /* istanbul ignore if */\n    if (useStd3ASCII === undefined)\n      useStd3ASCII = false;\n    var mappedIDNA = mapLabel(domain, useStd3ASCII, transitional);\n\n    // Step 3. Break\n    var labels = mappedIDNA.split(\".\");\n\n    // Step 4. Convert/Validate\n    labels = labels.map(function(label) {\n      if (label.startsWith(\"xn--\")) {\n        label = punycode.decode(label.substring(4));\n        validateLabel(label, useStd3ASCII, false);\n      }\n      else {\n        validateLabel(label, useStd3ASCII, transitional);\n      }\n      return label;\n    });\n\n    return labels.join(\".\");\n  }\n\n  function validateLabel(label, useStd3ASCII, transitional) {\n    // 2. The label must not contain a U+002D HYPHEN-MINUS character in both the\n    // third position and fourth positions.\n    if (label[2] === '-' && label[3] === '-')\n      throw new Error(\"Failed to validate \" + label);\n\n    // 3. The label must neither begin nor end with a U+002D HYPHEN-MINUS\n    // character.\n    if (label.startsWith('-') || label.endsWith('-'))\n      throw new Error(\"Failed to validate \" + label);\n\n    // 4. The label must not contain a U+002E ( . ) FULL STOP.\n    // this should nerver happen as label is chunked internally by this character\n    /* istanbul ignore if */\n    if (label.includes('.'))\n      throw new Error(\"Failed to validate \" + label);\n\n    if (mapLabel(label, useStd3ASCII, transitional) !== label)\n      throw new Error(\"Failed to validate \" + label);\n\n    // 5. The label must not begin with a combining mark, that is:\n    // General_Category=Mark.\n    var ch = label.codePointAt(0);\n    if (idna_map.mapChar(ch) & (0x2 << 23))\n      throw new Error(\"Label contains illegal character: \" + ch);\n  }\n\n  function toAscii(domain, options) {\n    if (options === undefined)\n      options = {};\n    var transitional = 'transitional' in options ? options.transitional : true;\n    var useStd3ASCII = 'useStd3ASCII' in options ? options.useStd3ASCII : false;\n    var verifyDnsLength = 'verifyDnsLength' in options ? options.verifyDnsLength : false;\n    var labels = process(domain, transitional, useStd3ASCII).split('.');\n    var asciiLabels = labels.map(punycode.toASCII);\n    var asciiString = asciiLabels.join('.');\n    var i;\n    if (verifyDnsLength) {\n      if (asciiString.length < 1 || asciiString.length > 253) {\n        throw new Error(\"DNS name has wrong length: \" + asciiString);\n      }\n      for (i = 0; i < asciiLabels.length; i++) {//for .. of replacement\n        var label = asciiLabels[i];\n        if (label.length < 1 || label.length > 63)\n          throw new Error(\"DNS label has wrong length: \" + label);\n      }\n    }\n    return asciiString;\n  }\n\n  function toUnicode(domain, options) {\n    if (options === undefined)\n      options = {};\n    var useStd3ASCII = 'useStd3ASCII' in options ? options.useStd3ASCII : false;\n    return process(domain, false, useStd3ASCII);\n  }\n\n  return {\n    toUnicode: toUnicode,\n    toAscii: toAscii,\n  };\n}));\n","/* This file is generated from the Unicode IDNA table, using\n   the build-unicode-tables.py script. Please edit that\n   script instead of this file. */\n\n/* istanbul ignore next */\n(function (root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define([], function () { return factory(); });\n  } else if (typeof exports === 'object') {\n    module.exports = factory();\n  } else {\n    root.uts46_map = factory();\n  }\n}(this, function () {\nvar blocks = [\n  new Uint32Array([2157250,2157314,2157378,2157442,2157506,2157570,2157634,0,2157698,2157762,2157826,2157890,2157954,0,2158018,0]),\n  new Uint32Array([2179041,6291456,2179073,6291456,2179105,6291456,2179137,6291456,2179169,6291456,2179201,6291456,2179233,6291456,2179265,6291456]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,14680064,14680064,14680064,14680064,14680064]),\n  new Uint32Array([0,2113729,2197345,2197377,2113825,2197409,2197441,2113921,2197473,2114017,2197505,2197537,2197569,2197601,2197633,2197665]),\n  new Uint32Array([6291456,6291456,6291456,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,6291456,23068672,23068672,0,0]),\n  new Uint32Array([6291456,6291456,6291456,6291456,0,0,0,0,23068672,23068672,23068672,0,0,0,0,23068672]),\n  new Uint32Array([14680064,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,14680064,14680064]),\n  new Uint32Array([2196001,2196033,2196065,2196097,2196129,2196161,2196193,2196225,2196257,2196289,2196321,2196353,2196385,2196417,2196449,2196481]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,23068672,6291456,0,0,0,0,0]),\n  new Uint32Array([2097281,2105921,2097729,2106081,0,2097601,2162337,2106017,2133281,2097505,2105889,2097185,2097697,2135777,2097633,2097441]),\n  new Uint32Array([2177025,6291456,2177057,6291456,2177089,6291456,2177121,6291456,2177153,6291456,2177185,6291456,2177217,6291456,2177249,6291456]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,0,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([6291456,6291456,6291456,0,6291456,6291456,0,0,0,0,0,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,0,0,0,6291456]),\n  new Uint32Array([0,23068672,23068672,23068672,0,6291456,6291456,6291456,6291456,6291456,6291456,0,0,0,0,6291456]),\n  new Uint32Array([2134435,2134531,2134627,2134723,2134723,2134819,2134819,2134915,2134915,2135011,2105987,2135107,2135203,2135299,2131587,2135395]),\n  new Uint32Array([0,0,0,0,0,0,0,6291456,2168673,2169249,6291456,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([2147906,2147970,2148034,2148098,2148162,2148226,2148290,2148354,2147906,2147970,2148034,2148098,2148162,2148226,2148290,2148354]),\n  new Uint32Array([2125219,2125315,2152834,2152898,2125411,2152962,2153026,2125506,2125507,2125603,2153090,2153154,2153218,2153282,2153346,2105348]),\n  new Uint32Array([2203393,6291456,2203425,6291456,2203457,6291456,2203489,6291456,6291456,6291456,6291456,2203521,6291456,2181281,6291456,6291456]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,23068672,23068672,6291456,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([6291456,23068672,6291456,2145538,23068672,23068672,23068672,23068672,23068672,23068672,23068672,0,0,0,0,6291456]),\n  new Uint32Array([2139426,2160834,2160898,2160962,2134242,2161026,2161090,2161154,2161218,2161282,2161346,2161410,2138658,2161474,2161538,2134722]),\n  new Uint32Array([2119939,2124930,2125026,2106658,2125218,2128962,2129058,2129154,2129250,2129346,2129442,2108866,2108770,2150466,2150530,2150594]),\n  new Uint32Array([2201601,6291456,2201633,6291456,2201665,6291456,2201697,6291456,2201729,6291456,2201761,6291456,2201793,6291456,2201825,6291456]),\n  new Uint32Array([2193537,2193569,2193601,2193633,2193665,2193697,2193729,2193761,2193793,2193825,2193857,2193889,2193921,2193953,2193985,2194017]),\n  new Uint32Array([6291456,23068672,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([0,6291456,6291456,0,0,0,0,0,0,0,0,0,0,0,0,0]),\n  new Uint32Array([2190561,6291456,2190593,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,2190625,6291456,2190657,6291456,23068672]),\n  new Uint32Array([2215905,2215937,2215969,2216001,2216033,2216065,2216097,2216129,2216161,2216193,2216225,2216257,2105441,2216289,2216321,2216353]),\n  new Uint32Array([23068672,18884130,23068672,23068672,23068672,6291456,23068672,23068672,6291456,6291456,6291456,6291456,6291456,23068672,23068672,23068672]),\n  new Uint32Array([23068672,23068672,0,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672]),\n  new Uint32Array([6291456,6291456,23068672,23068672,0,0,0,0,0,0,0,0,0,0,0,0]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672]),\n  new Uint32Array([2191233,2191265,2191297,2191329,2191361,2191393,2191425,2117377,2191457,2191489,2191521,2191553,2191585,2191617,2191649,2117953]),\n  new Uint32Array([2132227,2132323,2132419,2132419,2132515,2132515,2132611,2132707,2132707,2132803,2132899,2132899,2132995,2132995,2133091,2133187]),\n  new Uint32Array([0,0,0,0,0,0,0,0,0,6291456,6291456,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([23068672,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,23068672,23068672,23068672,6291456,0,0]),\n  new Uint32Array([2112481,2112577,2098177,2098305,2108321,2108289,2100865,2113153,2108481,2113345,2113441,10609889,10610785,10609921,10610817,2222241]),\n  new Uint32Array([6291456,6291456,6291456,23068672,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,23068672,23068672,0,0]),\n  new Uint32Array([2219969,2157121,2157441,2157505,2157889,2157953,2220001,2158465,2158529,10575617,2156994,2157058,2129923,2130019,2157122,2157186]),\n  new Uint32Array([6291456,6291456,6291456,6291456,23068672,23068672,23068672,23068672,23068672,23068672,23068672,0,0,0,0,0]),\n  new Uint32Array([2185249,6291456,2185281,6291456,2185313,6291456,2185345,6291456,2185377,6291456,2185409,6291456,2185441,6291456,2185473,6291456]),\n  new Uint32Array([0,0,0,0,6291456,6291456,6291456,6291456,0,6291456,6291456,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([6291456,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672]),\n  new Uint32Array([23068672,23068672,23068672,23068672,23068672,0,0,23068672,23068672,0,0,23068672,23068672,23068672,6291456,0]),\n  new Uint32Array([2183361,6291456,2183393,6291456,2183425,6291456,2183457,6291456,2183489,6291456,2183521,6291456,2183553,6291456,2183585,6291456]),\n  new Uint32Array([2192161,2192193,2192225,2192257,2192289,2192321,2192353,2192385,2192417,2192449,2192481,2192513,2192545,2192577,2192609,2192641]),\n  new Uint32Array([2212001,2212033,2212065,2212097,2212129,2212161,2212193,2212225,2212257,2212289,2212321,2212353,2212385,2212417,2212449,2207265]),\n  new Uint32Array([2249825,2249857,2249889,2249921,2249954,2250018,2250082,2250145,2250177,2250209,2250241,2250274,2250337,2250370,2250433,2250465]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,2147905,2147969,2148033,2148097,2148161,2148225,2148289,2148353]),\n  new Uint32Array([10485857,6291456,2197217,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,0,0,0,0,23068672,23068672]),\n  new Uint32Array([0,23068672,23068672,23068672,0,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,0,6291456,6291456]),\n  new Uint32Array([2180353,2180385,2144033,2180417,2180449,2180481,2180513,0,0,6291456,6291456,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([2112481,2112577,2098177,2098305,2108321,2108289,2100865,2113153,2108481,2113345,2113441,10610209,10610465,10610241,10610753,10609857]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,23068672,0,0]),\n  new Uint32Array([2223842,2223906,2223970,2224034,2224098,2224162,2224226,2224290,2224354,2224418,2224482,2224546,2224610,2224674,2224738,2224802]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,23068672,23068672,23068672,23068672,6291456,23068672,23068672,23068672,23068672,23068672]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,0,6291456]),\n  new Uint32Array([23068672,23068672,23068672,18923650,23068672,23068672,23068672,23068672,0,23068672,23068672,23068672,23068672,18923714,23068672,23068672]),\n  new Uint32Array([2126179,2125538,2126275,2126371,2126467,2125634,2126563,2105603,2105604,2125346,2126659,2126755,2126851,2098179,2098181,2098182]),\n  new Uint32Array([2227426,2227490,2227554,2227618,0,0,0,0,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([2192353,2240642,2240642,2240705,2240737,2240737,2240769,2240802,2240866,2240929,2240961,2240993,2241025,2241057,2241089,2241121]),\n  new Uint32Array([6291456,2170881,2170913,2170945,6291456,2170977,6291456,2171009,2171041,6291456,6291456,6291456,2171073,6291456,6291456,6291456]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672]),\n  new Uint32Array([2132226,2132514,2163586,2132610,2160386,2133090,2133186,2160450,2160514,2160578,2133570,2106178,2160642,2133858,2160706,2160770]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,0,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,10532162,10532226,10532290,10532354,10532418,10532482,6291456,6291456]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,0,6291456,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,6291456,23068672]),\n  new Uint32Array([2098209,2108353,2108193,2108481,2170241,2111713,2105473,2105569,2105601,2112289,2112481,2098305,2108321,0,0,0]),\n  new Uint32Array([2209121,2209153,2209185,2209217,2209249,2209281,2209313,2209345,2209377,2209409,2209441,2209473,2207265,2209505,2209537,2209569]),\n  new Uint32Array([2189025,6291456,2189057,6291456,2189089,6291456,2189121,6291456,2189153,6291456,2189185,6291456,2189217,6291456,2189249,6291456]),\n  new Uint32Array([2173825,2153473,2173857,2173889,2173921,2173953,2173985,2173761,2174017,2174049,2174081,2174113,2174145,2174177,2149057,2233057]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,2165764,2140004]),\n  new Uint32Array([2215105,6291456,2215137,6291456,6291456,2215169,2215201,6291456,6291456,6291456,2215233,2215265,2215297,2215329,2215361,2215393]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,0,0,6291456,0,6291456,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([23068672,23068672,6291456,6291456,6291456,23068672,0,0,0,0,0,0,0,0,0,0]),\n  new Uint32Array([10505091,10505187,10505283,10505379,10505475,10505571,10505667,10505763,10505859,10505955,10506051,10506147,10506243,10506339,10506435,10506531]),\n  new Uint32Array([2229730,2229794,2229858,2229922,2229986,2230050,2230114,2230178,2230242,2230306,2230370,2230434,2230498,2230562,2230626,2230690]),\n  new Uint32Array([2105505,2098241,2108353,2108417,2105825,0,2100897,2111905,2105473,2105569,2105601,2112289,2108193,2112481,2112577,2098177]),\n  new Uint32Array([6291456,6291456,6291456,6291456,10502115,10502178,10502211,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([0,23068672,23068672,23068672,0,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,0,0,6291456]),\n  new Uint32Array([2190305,6291456,2190337,6291456,2190369,6291456,2190401,6291456,2190433,6291456,2190465,6291456,2190497,6291456,2190529,6291456]),\n  new Uint32Array([2173793,2173985,2174017,6291456,2173761,2173697,6291456,2174689,6291456,2174017,2174721,6291456,6291456,2174753,2174785,2174817]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([2099521,2099105,2120705,2098369,2120801,2103361,2097985,2098433,2121377,2121473,2099169,2099873,2098401,2099393,2152609,2100033]),\n  new Uint32Array([2132898,2163842,2163906,2133282,2132034,2131938,2137410,2132802,2132706,2164866,2133282,2160578,2165186,2165186,6291456,6291456]),\n  new Uint32Array([10500003,10500099,10500195,10500291,10500387,10500483,10500579,10500675,10500771,10500867,10500963,10501059,10501155,10501251,10501347,10501443]),\n  new Uint32Array([2163458,2130978,2131074,2131266,2131362,2163522,2160130,2132066,2131010,2131106,2106018,2131618,2131298,2132034,2131938,2137410]),\n  new Uint32Array([2212961,2116993,2212993,2213025,2213057,2213089,2213121,2213153,2213185,2213217,2213249,2209633,2213281,2213313,2213345,2213377]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,23068672,6291456,6291456,6291456,6291456,6291456,6291456,0,6291456,6291456]),\n  new Uint32Array([2113729,2113825,2113921,2114017,2114113,2114209,2114305,2114401,2114497,2114593,2114689,2114785,2114881,2114977,2115073,2115169]),\n  new Uint32Array([2238177,2238209,2238241,2238273,2238305,2238337,2238337,2217537,2238369,2238401,2238433,2238465,2215649,2238497,2238529,2238561]),\n  new Uint32Array([2108289,2100865,2113153,2108481,2113345,2113441,2098209,2111137,2105505,2098241,2108353,2108417,2105825,2111713,2100897,2111905]),\n  new Uint32Array([6291456,6291456,0,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,0,6291456,0,0]),\n  new Uint32Array([6291456,0,6291456,2145026,0,6291456,2145090,0,6291456,6291456,0,0,23068672,0,23068672,23068672]),\n  new Uint32Array([2099233,2122017,2200673,2098113,2121537,2103201,2200705,2104033,2121857,2121953,2122401,2099649,2099969,2123009,2100129,2100289]),\n  new Uint32Array([6291456,23068672,6291456,0,0,0,0,0,0,0,0,0,0,0,0,0]),\n  new Uint32Array([6291456,6291456,23068672,23068672,0,0,23068672,23068672,23068672,23068672,23068672,23068672,23068672,0,0,0]),\n  new Uint32Array([2187681,2187713,2187745,2187777,2187809,2187841,2187873,2187905,2187937,2187969,2188001,2188033,2188065,2188097,2188129,2188161]),\n  new Uint32Array([0,10554498,10554562,10554626,10554690,10554754,10554818,10554882,10554946,10555010,10555074,6291456,6291456,0,0,0]),\n  new Uint32Array([2235170,2235234,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,0,0,0,0,0,0,0]),\n  new Uint32Array([2181153,6291456,2188897,6291456,6291456,2188929,6291456,6291456,6291456,6291456,6291456,6291456,2111905,2100865,2188961,2188993]),\n  new Uint32Array([2100833,2100897,0,0,2101569,2101697,2101825,2101953,2102081,2102209,10575617,2187041,10502177,10489601,10489697,2112289]),\n  new Uint32Array([6291456,2172833,6291456,2172865,2172897,2172929,2172961,6291456,2172993,6291456,2173025,6291456,2173057,6291456,2173089,6291456]),\n  new Uint32Array([6291456,0,6291456,6291456,0,6291456,6291456,6291456,6291456,6291456,0,0,23068672,6291456,23068672,23068672]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,0,0,0,0,0,0,0,2190721]),\n  new Uint32Array([23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,6291456,6291456,6291456,6291456,23068672,6291456,6291456]),\n  new Uint32Array([2184993,6291456,2185025,6291456,2185057,6291456,2185089,6291456,2185121,6291456,2185153,6291456,2185185,6291456,2185217,6291456]),\n  new Uint32Array([2115265,2115361,2115457,2115553,2115649,2115745,2115841,2115937,2116033,2116129,2116225,2116321,2150658,2150722,2200225,6291456]),\n  new Uint32Array([2168321,6291456,2168353,6291456,2168385,6291456,2168417,6291456,2168449,6291456,2168481,6291456,2168513,6291456,2168545,6291456]),\n  new Uint32Array([23068672,23068672,23068672,6291456,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672]),\n  new Uint32Array([6291456,0,6291456,6291456,6291456,6291456,0,0,0,6291456,6291456,0,6291456,0,6291456,6291456]),\n  new Uint32Array([6291456,6291456,6291456,2186625,0,0,6291456,6291456,2186657,2186689,2186721,2173505,0,10496067,10496163,10496259]),\n  new Uint32Array([2178785,6291456,2178817,6291456,2178849,6291456,2178881,6291456,2178913,6291456,2178945,6291456,2178977,6291456,2179009,6291456]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,0,0,0,0,0]),\n  new Uint32Array([2097152,0,0,0,2097152,0,0,0,0,0,0,0,0,0,0,0]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,6291456,6291456]),\n  new Uint32Array([6291456,0,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([0,0,2197857,2197889,2197921,2197953,2197985,2198017,0,0,2198049,2198081,2198113,2198145,2198177,2198209]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,2098209,2167297,2111137,6291456]),\n  new Uint32Array([2171393,6291456,2171425,6291456,2171457,6291456,2171489,6291456,2171521,6291456,2171553,6291456,2171585,6291456,2171617,6291456]),\n  new Uint32Array([2206753,2206785,2195457,2206817,2206849,2206881,2206913,2197153,2197153,2206945,2117857,2206977,2207009,2207041,2207073,2207105]),\n  new Uint32Array([0,0,0,0,0,0,0,23068672,0,0,0,0,2144834,2144898,0,2144962]),\n  new Uint32Array([23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,0,0,23068672]),\n  new Uint32Array([2108193,2112481,2112577,2098177,2098305,2108321,2108289,2100865,2113153,2108481,2113345,2113441,2098209,0,2105505,2098241]),\n  new Uint32Array([6291456,6291456,6291456,6291456,0,6291456,6291456,6291456,0,6291456,6291456,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,0,0,0,6291456,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),\n  new Uint32Array([6291456,6291456,2202049,6291456,2202081,6291456,2202113,6291456,2202145,6291456,2202177,6291456,2202209,6291456,2202241,6291456]),\n  new Uint32Array([10501155,10501251,10501347,10501443,10501539,10501635,10501731,10501827,10501923,10502019,2141731,2105505,2098177,2155586,2166530,0]),\n  new Uint32Array([2102081,2102209,2100833,2100737,2098337,2101441,2101569,2101697,2101825,2101953,2102081,2102209,2100833,2100737,2098337,2101441]),\n  new Uint32Array([2146882,2146946,2147010,2147074,2147138,2147202,2147266,2147330,2146882,2146946,2147010,2147074,2147138,2147202,2147266,2147330]),\n  new Uint32Array([23068672,23068672,23068672,23068672,23068672,23068672,23068672,6291456,6291456,6291456,6291456,6291456,6291456,6291456,0,0]),\n  new Uint32Array([10502307,10502403,10502499,10502595,10502691,10502787,10502883,10502979,10503075,10503171,10503267,10503363,10503459,10503555,10503651,10503747]),\n  new Uint32Array([2179937,2179969,2180001,2180033,2156545,2180065,2156577,2180097,2180129,2180161,2180193,2180225,2180257,2180289,2156737,2180321]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,0,6291456,6291456,0,0,0,6291456,0,0,6291456]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,0]),\n  new Uint32Array([2227682,2227746,2227810,2227874,2227938,2228002,2228066,2228130,2228194,2228258,2228322,2228386,2228450,2228514,2228578,2228642]),\n  new Uint32Array([2105601,2169121,2108193,2170049,2181025,2181057,2112481,2108321,2108289,2181089,2170497,2100865,2181121,2173601,2173633,2173665]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,2180641,6291456,6291456,6291456]),\n  new Uint32Array([0,6291456,6291456,6291456,0,6291456,0,6291456,0,0,6291456,6291456,0,6291456,6291456,6291456]),\n  new Uint32Array([2178273,6291456,2178305,6291456,2178337,6291456,2178369,6291456,2178401,6291456,2178433,6291456,2178465,6291456,2178497,6291456]),\n  new Uint32Array([6291456,6291456,23068672,23068672,23068672,6291456,0,0,0,0,0,0,0,0,0,0]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,14680064,14680064,14680064,14680064,14680064,14680064]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,6291456]),\n  new Uint32Array([2237377,2237409,2236225,2237441,2237473,2217441,2215521,2215553,2217473,2237505,2237537,2209697,2237569,2215585,2237601,2237633]),\n  new Uint32Array([2221985,2165601,2165601,2165665,2165665,2222017,2222017,2165729,2165729,2158913,2158913,2158913,2158913,2097281,2097281,2105921]),\n  new Uint32Array([23068672,23068672,23068672,23068672,23068672,0,23068672,23068672,23068672,0,23068672,23068672,23068672,23068672,0,0]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,2149634,6291456,6291456,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([2176897,6291456,6291456,23068672,23068672,23068672,23068672,23068672,23068672,23068672,2176929,6291456,2176961,6291456,2176993,6291456]),\n  new Uint32Array([2172641,6291456,2172673,6291456,6291456,6291456,6291456,6291456,6291456,6291456,2172705,2172737,6291456,2172769,2172801,6291456]),\n  new Uint32Array([2099173,2104196,2121667,2099395,2121763,2152258,2152322,2098946,2152386,2121859,2121955,2099333,2122051,2104324,2099493,2122147]),\n  new Uint32Array([6291456,6291456,6291456,2145794,6291456,6291456,6291456,6291456,0,6291456,6291456,6291456,6291456,2145858,6291456,6291456]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,23068672,23068672,23068672,0,0,6291456,0]),\n  new Uint32Array([0,2105921,2097729,0,2097377,0,0,2106017,0,2097505,2105889,2097185,2097697,2135777,2097633,2097441]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672]),\n  new Uint32Array([2239074,2239138,2239201,2239233,2239265,2239297,2239329,2239361,0,2239393,2239425,2239425,2239458,2239521,2239553,2209569]),\n  new Uint32Array([14680064,2098209,2111137,2105505,2098241,2108353,2108417,2105825,2111713,2100897,2111905,2105473,2105569,2105601,2112289,2108193]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,23068672,23068672,23068672,23068672,23068672,23068672,23068672,0,6291456,23068672]),\n  new Uint32Array([2108321,2108289,2113153,2098209,2180897,2180929,2180961,2111137,2098241,2108353,2170241,2170273,2180993,2105825,6291456,2105473]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,2146114,6291456,6291456,6291456,0,0,0]),\n  new Uint32Array([2105921,2105921,2105921,2222049,2222049,2130977,2130977,2130977,2130977,2160065,2160065,2160065,2160065,2097729,2097729,2097729]),\n  new Uint32Array([2218145,2214785,2207937,2218177,2218209,2192993,2210113,2212769,2218241,2218273,2216129,2218305,2216161,2218337,2218369,2218401]),\n  new Uint32Array([0,0,0,2156546,2156610,2156674,2156738,2156802,0,0,0,0,0,2156866,23068672,2156930]),\n  new Uint32Array([23068672,23068672,23068672,0,0,0,0,23068672,23068672,0,0,23068672,23068672,23068672,0,0]),\n  new Uint32Array([2213409,2213441,2213473,2213505,2213537,2213569,2213601,2213633,2213665,2195681,2213697,2213729,2213761,2213793,2213825,2213857]),\n  new Uint32Array([2100033,2099233,2122017,2200673,2098113,2121537,2103201,2200705,2104033,2121857,2121953,2122401,2099649,2099969,2123009,2100129]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,0,0,0,0,0,0,0,0,0]),\n  new Uint32Array([2201857,6291456,2201889,6291456,2201921,6291456,2201953,6291456,2201985,6291456,2202017,6291456,2176193,2176257,23068672,23068672]),\n  new Uint32Array([6291456,6291456,23068672,23068672,0,0,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([2188193,2188225,2188257,2188289,2188321,2188353,2188385,2188417,2188449,2188481,2188513,2188545,2188577,2188609,2188641,0]),\n  new Uint32Array([10554529,2221089,0,10502113,10562017,10537921,10538049,2221121,2221153,0,0,0,0,0,0,0]),\n  new Uint32Array([2213889,2213921,2213953,2213985,2214017,2214049,2214081,2194177,2214113,2214145,2214177,2214209,2214241,2214273,2214305,2214337]),\n  new Uint32Array([2166978,2167042,2099169,0,0,0,0,0,0,0,0,0,0,0,0,0]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,2180545,6291456,6291456,6291456]),\n  new Uint32Array([10518915,10519011,10519107,10519203,2162242,2162306,2159554,2162370,2159362,2159618,2105922,2162434,2159746,2162498,2159810,2159874]),\n  new Uint32Array([2161730,2161794,2135586,2161858,2161922,2137186,2131810,2160290,2135170,2161986,2137954,2162050,2162114,2162178,10518723,10518819]),\n  new Uint32Array([10506627,10506723,10506819,10506915,10507011,10507107,10507203,10507299,10507395,10507491,10507587,10507683,10507779,10507875,10507971,10508067]),\n  new Uint32Array([6291456,23068672,23068672,23068672,0,23068672,23068672,0,0,0,0,0,23068672,23068672,23068672,23068672]),\n  new Uint32Array([23068672,23068672,23068672,23068672,6291456,6291456,6291456,6291456,6291456,6291456,6291456,0,0,0,0,0]),\n  new Uint32Array([2175873,2175905,2175937,2175969,2176001,2176033,2176065,2176097,2176129,2176161,2176193,2176225,2176257,2176289,2176321,2176353]),\n  new Uint32Array([2140006,2140198,2140390,2140582,2140774,23068672,23068672,23068672,23068672,23068672,6291456,6291456,6291456,23068672,23068672,23068672]),\n  new Uint32Array([2108193,2112481,2112577,2098177,2098305,2108321,2108289,2100865,2113153,2108481,2113345,2113441,2098209,2111137,2105505,2098241]),\n  new Uint32Array([0,23068672,0,0,0,0,0,0,0,2145154,2145218,2145282,6291456,0,2145346,0]),\n  new Uint32Array([0,0,0,0,10531458,10495395,2148545,2143201,2173473,2148865,2173505,0,2173537,0,2173569,2149121]),\n  new Uint32Array([10537282,10495683,2148738,2148802,2148866,0,6291456,2148930,2186593,2173473,2148737,2148865,2148802,10495779,10495875,10495971]),\n  new Uint32Array([23068672,23068672,23068672,23068672,23068672,0,0,0,0,0,0,0,0,0,0,0]),\n  new Uint32Array([2215425,2215457,2215489,2215521,2215553,2215585,2215617,2215649,2215681,2215713,2215745,2215777,2192033,2215809,2215841,2215873]),\n  new Uint32Array([2242049,2242081,2242113,2242145,2242177,2242209,2242241,2242273,2215937,2242305,2242338,2242401,2242433,2242465,2242497,2216001]),\n  new Uint32Array([10554529,2221089,0,0,10562017,10502113,10538049,10537921,2221185,10489601,10489697,10609889,10609921,2141729,2141793,10610273]),\n  new Uint32Array([2141923,2142019,2142115,2142211,2142307,2142403,2142499,2142595,2142691,0,0,0,0,0,0,0]),\n  new Uint32Array([0,2221185,2221217,10609857,10609857,10489601,10489697,10609889,10609921,2141729,2141793,2221345,2221377,2221409,2221441,2187105]),\n  new Uint32Array([6291456,23068672,23068672,23068672,23068672,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,0]),\n  new Uint32Array([23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,18923970,23068672,23068672,23068672,0,6291456,6291456]),\n  new Uint32Array([2183105,6291456,2183137,6291456,2183169,6291456,2183201,6291456,2183233,6291456,2183265,6291456,2183297,6291456,2183329,6291456]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,0,6291456,6291456,6291456,6291456,6291456,6291456,6291456,0]),\n  new Uint32Array([23068672,23068672,23068672,23068672,0,0,0,0,0,0,0,0,6291456,6291456,6291456,6291456]),\n  new Uint32Array([2134434,2134818,2097666,2097186,2097474,2097698,2105986,2131586,2132450,2131874,2131778,2135970,2135778,2161602,2136162,2161666]),\n  new Uint32Array([2236865,2236897,2236930,2236993,2237025,2235681,2237058,2237121,2237153,2237185,2237217,2217281,2237250,2191233,2237313,2237345]),\n  new Uint32Array([2190049,6291456,2190081,6291456,2190113,6291456,2190145,6291456,2190177,6291456,2190209,6291456,2190241,6291456,2190273,6291456]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,23068672,23068672,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([2101922,2102050,2102178,2102306,10498755,10498851,10498947,10499043,10499139,10499235,10499331,10499427,10499523,10489604,10489732,10489860]),\n  new Uint32Array([2166914,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,0,0,0,0,0]),\n  new Uint32Array([2181601,2170561,2181633,2181665,2170753,2181697,2172897,2170881,2181729,2170913,2172929,2113441,2181761,2181793,2171009,2173761]),\n  new Uint32Array([0,2105921,2097729,2106081,0,2097601,2162337,2106017,2133281,2097505,0,2097185,2097697,2135777,2097633,2097441]),\n  new Uint32Array([6291456,6291456,6291456,23068672,23068672,23068672,23068672,23068672,6291456,6291456,6291456,6291456,0,0,0,0]),\n  new Uint32Array([2248001,2248033,2248066,2248130,2248193,2248226,2248289,2248322,2248385,2248417,2216673,2248450,2248514,2248577,2248610,2248673]),\n  new Uint32Array([6291456,6291456,0,0,0,0,0,0,0,6291456,6291456,6291456,6291456,0,0,0]),\n  new Uint32Array([2169729,6291456,2169761,6291456,2169793,6291456,2169825,6291456,2169857,2169889,6291456,2169921,6291456,2143329,6291456,2098305]),\n  new Uint32Array([2162178,2163202,2163266,2135170,2136226,2161986,2137954,2159426,2159490,2163330,2159554,2163394,2159682,2139522,2136450,2159746]),\n  new Uint32Array([2173953,2173985,0,2174017,2174049,2174081,2174113,2174145,2174177,2149057,2174209,2174241,6291456,6291456,6291456,6291456]),\n  new Uint32Array([6291456,6291456,4271169,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,2174273]),\n  new Uint32Array([23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672]),\n  new Uint32Array([6291456,6291456,0,0,0,0,0,0,0,6291456,0,0,0,0,0,0]),\n  new Uint32Array([6291456,6291456,6291456,2190785,0,0,0,0,0,0,0,0,0,0,0,0]),\n  new Uint32Array([2189793,6291456,2189825,6291456,2189857,6291456,2189889,6291456,2189921,6291456,2189953,6291456,2189985,6291456,2190017,6291456]),\n  new Uint32Array([2105601,2112289,2108193,2112481,2112577,0,2098305,2108321,2108289,2100865,2113153,2108481,2113345,0,2098209,2111137]),\n  new Uint32Array([2172129,6291456,2172161,6291456,2172193,6291456,2172225,6291456,2172257,6291456,2172289,6291456,2172321,6291456,2172353,6291456]),\n  new Uint32Array([2214753,6291456,2214785,6291456,6291456,2214817,2214849,2214881,2214913,2214945,2214977,2215009,2215041,2215073,2194401,6291456]),\n  new Uint32Array([23068672,23068672,23068672,23068672,23068672,6291456,0,0,0,0,0,0,0,0,0,0]),\n  new Uint32Array([0,0,0,0,6291456,6291456,6291456,23068672,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([10610305,10610337,10575617,2221761,10610401,10610433,10502177,0,10610465,10610497,10610529,10610561,0,0,0,0]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,0,0,0,23068672,0,0,0,0,23068672]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,2187105,2187137,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([2199393,2199425,2199457,2199489,2199521,2199553,2199585,2199617,2199649,2199681,2199713,2199745,2199777,2199809,2199841,0]),\n  new Uint32Array([2217249,2217281,2217313,2217345,2217377,2217409,2217441,2217473,2215617,2217505,2217537,2217569,2214753,2217601,2217633,2217665]),\n  new Uint32Array([2170273,2170305,6291456,2170337,2170369,6291456,2170401,2170433,2170465,6291456,6291456,6291456,2170497,2170529,6291456,2170561]),\n  new Uint32Array([2188673,6291456,2188705,2188737,2188769,6291456,6291456,2188801,6291456,2188833,6291456,2188865,6291456,2180929,2181505,2180897]),\n  new Uint32Array([10489988,10490116,10490244,10490372,10490500,10490628,10490756,10490884,0,0,0,0,0,0,0,0]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,2147393,2147457,2147521,2147585,2147649,2147713,2147777,2147841]),\n  new Uint32Array([23068672,23068672,0,23068672,23068672,0,23068672,23068672,23068672,23068672,23068672,0,0,0,0,0]),\n  new Uint32Array([2241153,2241185,2241217,2215809,2241250,2241313,2241345,2241377,2217921,2241377,2241409,2215873,2241441,2241473,2241505,2241537]),\n  new Uint32Array([23068672,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([2220417,2220417,2220449,2220449,2220481,2220481,2220513,2220513,2220545,2220545,2220577,2220577,2220609,2220609,2220641,2220641]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,2144002,0,6291456,6291456,0,0,6291456,6291456,6291456]),\n  new Uint32Array([2167105,2167137,2167169,2167201,2167233,2167265,2167297,2167329,2167361,2167393,2167425,2167457,2167489,2167521,2167553,2167585]),\n  new Uint32Array([10575521,2098209,2111137,2105505,2098241,2108353,2108417,2105825,2111713,2100897,2111905,2105473,2105569,2105601,2112289,2108193]),\n  new Uint32Array([2234146,2234210,2234274,2234338,2234402,2234466,2234530,2234594,2234658,2234722,2234786,2234850,2234914,2234978,2235042,2235106]),\n  new Uint32Array([0,0,0,0,0,0,0,2180577,0,0,0,0,0,2180609,0,0]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,23068672,23068672,23068672,23068672,23068672,0,0,6291456,6291456]),\n  new Uint32Array([2098209,2111137,2105505,2098241,2108353,2108417,2105825,2111713,2100897,2111905,2105473,2105569,2105601,2112289,2108193,2112481]),\n  new Uint32Array([23068672,23068672,23068672,23068672,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([2242529,2242561,2242593,2242625,2242657,2242689,2242721,2242753,2207937,2218177,2242785,2242817,2242849,2242882,2242945,2242977]),\n  new Uint32Array([2118049,2105345,2118241,2105441,2118433,2118529,2118625,2118721,2118817,2200257,2200289,2191809,2200321,2200353,2200385,2200417]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,23068672,23068672,23068672,6291456,6291456]),\n  new Uint32Array([23068672,23068672,23068672,23068672,23068672,6291456,6291456,6291456,6291456,6291456,6291456,6291456,0,0,0,0]),\n  new Uint32Array([2185505,6291456,2185537,6291456,2185569,6291456,2185601,6291456,2185633,6291456,2185665,6291456,2185697,6291456,2185729,6291456]),\n  new Uint32Array([2231970,2232034,2232098,2232162,2232226,2232290,2232354,2232418,2232482,2232546,2232610,2232674,2232738,2232802,2232866,2232930]),\n  new Uint32Array([2218625,2246402,2246466,2246530,2246594,2246657,2246689,2246689,2218657,2219681,2246721,2246753,2246785,2246818,2246881,2208481]),\n  new Uint32Array([2197025,2197057,2197089,2197121,2197153,2197185,0,0,0,0,0,0,0,0,0,0]),\n  new Uint32Array([2219137,2216961,2219169,2219201,2219233,2219265,2219297,2217025,2215041,2219329,2217057,2219361,2217089,2219393,2197153,2219426]),\n  new Uint32Array([23068672,23068672,23068672,0,0,0,23068672,23068672,23068672,0,23068672,23068672,23068672,23068672,0,0]),\n  new Uint32Array([2098305,2108321,2108289,2100865,2113153,2108481,2113345,2113441,2098209,2111137,2105505,2098241,2108353,2108417,2105825,2111713]),\n  new Uint32Array([2243522,2243585,2243617,2243649,2243681,2210113,2243713,2243746,2243810,2243874,2243937,2243970,2244033,2244065,2244097,2244129]),\n  new Uint32Array([2178017,6291456,2178049,6291456,2178081,6291456,2178113,6291456,2178145,6291456,2178177,6291456,2178209,6291456,2178241,6291456]),\n  new Uint32Array([10553858,2165314,10518722,6291456,10518818,0,10518914,2130690,10519010,2130786,10519106,2130882,10519202,2165378,10554050,2165506]),\n  new Uint32Array([0,0,2135491,2135587,2135683,2135779,2135875,2135971,2135971,2136067,2136163,2136259,2136355,2136355,2136451,2136547]),\n  new Uint32Array([23068672,23068672,23068672,6291456,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,6291456,6291456]),\n  new Uint32Array([0,0,0,0,0,0,0,0,0,0,0,0,6291456,6291456,6291456,6291456]),\n  new Uint32Array([23068672,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),\n  new Uint32Array([2220033,2220033,2220065,2220065,2220065,2220065,2220097,2220097,2220097,2220097,2220129,2220129,2220129,2220129,2220161,2220161]),\n  new Uint32Array([6291456,6291456,6291456,0,0,0,0,0,0,0,6291456,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([23068672,23068672,23068672,23068672,23068672,0,23068672,0,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672]),\n  new Uint32Array([2100897,2100898,2100899,2150018,2100865,2100866,2100867,2100868,2150082,2108481,2109858,2109859,2105569,2105505,2098241,2105601]),\n  new Uint32Array([2097217,2097505,2097505,2097505,2097505,2165570,2165570,2165634,2165634,2165698,2165698,2097858,2097858,0,0,2097152]),\n  new Uint32Array([23068672,6291456,23068672,23068672,23068672,6291456,6291456,23068672,23068672,6291456,6291456,6291456,6291456,6291456,23068672,23068672]),\n  new Uint32Array([23068672,23068672,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,0,0]),\n  new Uint32Array([10503843,10503939,10504035,10504131,10504227,10504323,10504419,10504515,10504611,10504707,10504803,10504899,10504995,10491140,10491268,0]),\n  new Uint32Array([2173697,2173729,2148801,2173761,2143969,2173793,2173825,2153473,2173857,2173889,2173921,2173953,2173985,2173761,2174017,2174049]),\n  new Uint32Array([23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,0,23068672,23068672,23068672,23068672,23068672,23068672,23068672]),\n  new Uint32Array([2134145,2097153,2134241,2105953,2132705,2130977,2160065,2131297,2162049,2133089,2160577,2133857,2235297,2220769,2235329,2235361]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,23068672,23068672,23068672,23068672,23068672,23068672,23068672]),\n  new Uint32Array([2222401,2222433,2222465,10531394,2222497,2222529,2222561,0,2222593,2222625,2222657,2222689,2222721,2222753,2222785,0]),\n  new Uint32Array([2184481,6291456,2184513,6291456,2184545,6291456,2184577,6291456,2184609,6291456,2184641,6291456,2184673,6291456,2184705,6291456]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,23068672,23068672,23068672,23068672,6291456,6291456,6291456,6291456,23068672,23068672]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,23068672,23068672,0,0,0,0,0,0,0,0,0]),\n  new Uint32Array([2105570,2156034,2126947,2156098,2153666,2127043,2127139,2156162,0,2127235,2156226,2156290,2156354,2156418,2127331,2127427]),\n  new Uint32Array([2215905,2207041,2153185,2241569,2241601,2241633,2241665,2241697,2241730,2241793,2241825,2241857,2241889,2241921,2241954,2242017]),\n  new Uint32Array([2203777,6291456,2203809,6291456,2203841,6291456,2203873,6291456,2203905,6291456,2173121,2180993,2181249,2203937,2181313,0]),\n  new Uint32Array([2168577,6291456,2168609,6291456,2168641,6291456,2168673,6291456,2168705,6291456,2168737,6291456,2168769,6291456,2168801,6291456]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,0,0,6291456,23068672,23068672,6291456]),\n  new Uint32Array([23068672,23068672,23068672,23068672,23068672,23068672,0,23068672,23068672,23068672,0,23068672,23068672,23068672,0,0]),\n  new Uint32Array([2210113,2195521,2210145,2210177,2210209,2210241,2210273,2210305,2210337,2210369,2210401,2210433,2210465,2210497,2210529,2210561]),\n  new Uint32Array([6291456,0,0,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,0]),\n  new Uint32Array([2228706,2228770,2228834,2228898,2228962,2229026,2229090,2229154,2229218,2229282,2229346,2229410,2229474,2229538,2229602,2229666]),\n  new Uint32Array([23068672,6291456,6291456,6291456,6291456,0,0,0,0,0,0,0,0,0,0,0]),\n  new Uint32Array([6291456,6291456,6291456,0,0,0,0,0,0,0,0,0,0,0,0,6291456]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,0,6291456,6291456,6291456,6291456,18874368,18874368,18874368,0,0]),\n  new Uint32Array([2133089,2133281,2133281,2133281,2133281,2160577,2160577,2160577,2160577,2097441,2097441,2097441,2097441,2133857,2133857,2133857]),\n  new Uint32Array([6291456,0,0,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,0,0,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([2173825,2153473,2173857,2173889,2173921,2173953,2173985,2174017,2174017,2174049,2174081,2174113,2174145,2174177,2149057,2233089]),\n  new Uint32Array([2178529,6291456,2178561,6291456,2178593,6291456,2178625,6291456,2178657,6291456,2178689,6291456,2178721,6291456,2178753,6291456]),\n  new Uint32Array([2221025,2221025,2221057,2221057,2159329,2159329,2159329,2159329,2097217,2097217,2158914,2158914,2158978,2158978,2159042,2159042]),\n  new Uint32Array([2208161,2208193,2208225,2208257,2194433,2208289,2208321,2208353,2208385,2208417,2208449,2208481,2208513,2208545,2208577,2208609]),\n  new Uint32Array([2169217,6291456,2169249,6291456,2169281,6291456,2169313,6291456,2169345,6291456,2169377,6291456,2169409,6291456,2169441,6291456]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,0,0,6291456,6291456,6291456,6291456]),\n  new Uint32Array([2133187,2133283,2133283,2133379,2133475,2133571,2133667,2133667,2133763,2133859,2133955,2134051,2134147,2134147,2134243,2134339]),\n  new Uint32Array([2197697,2114113,2114209,2197729,2197761,2114305,2197793,2114401,2114497,2197825,2114593,2114689,2114785,2114881,2114977,0]),\n  new Uint32Array([2193089,2193121,2193153,2193185,2117665,2117569,2193217,2193249,2193281,2193313,2193345,2193377,2193409,2193441,2193473,2193505]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,23068672,23068672,23068672,23068672,23068672]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,0,0,0]),\n  new Uint32Array([6291456,6291456,6291456,0,0,0,0,0,0,0,0,0,0,0,0,0]),\n  new Uint32Array([6291456,6291456,6291456,0,0,0,0,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([2184225,6291456,2184257,6291456,2184289,6291456,2184321,6291456,2184353,6291456,2184385,6291456,2184417,6291456,2184449,6291456]),\n  new Uint32Array([2112577,2098177,2098305,2108321,2108289,2100865,2113153,2108481,2113345,2113441,2100833,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,23068672,23068672,23068672,23068672,23068672,23068672]),\n  new Uint32Array([2098657,2098049,2200737,2123489,2123681,2200769,2098625,2100321,2098145,2100449,2098017,2098753,2200801,2200833,2200865,0]),\n  new Uint32Array([23068672,23068672,23068672,0,0,0,0,0,0,0,0,23068672,23068672,23068672,23068672,23068672]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,23068672,23068672,23068672,23068672,23068672,0,0,0,0,0]),\n  new Uint32Array([2098305,2108321,2108289,2100865,2113153,2108481,2113345,2113441,2098209,2111137,0,2098241,2108353,2108417,2105825,0]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,2181153,2105505,2181185,2167617,2180993]),\n  new Uint32Array([2160002,2160066,2160130,2160194,2160258,2132066,2131010,2131106,2106018,2131618,2160322,2131298,2132034,2131938,2137410,2132226]),\n  new Uint32Array([6291456,6291456,6291456,6291456,0,0,0,0,0,0,0,0,0,0,0,6291456]),\n  new Uint32Array([2183617,6291456,2183649,6291456,2183681,6291456,2183713,6291456,2183745,6291456,2183777,6291456,2183809,6291456,2183841,6291456]),\n  new Uint32Array([0,6291456,6291456,0,6291456,0,0,6291456,6291456,0,6291456,0,0,6291456,0,0]),\n  new Uint32Array([2250977,2251009,2251041,2251073,2195009,2251106,2251169,2251201,2251233,2251265,2251297,2251330,2251394,2251457,2251489,2251521]),\n  new Uint32Array([2205729,2205761,2205793,2205825,2205857,2205889,2205921,2205953,2205985,2206017,2206049,2206081,2206113,2206145,2206177,2206209]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,0,0,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([2143170,2168993,6291456,2169025,6291456,2169057,6291456,2169089,6291456,2143234,2169121,6291456,2169153,6291456,2169185,6291456]),\n  new Uint32Array([23068672,23068672,2190689,6291456,0,0,0,0,0,6291456,6291456,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([2248706,2248769,2248801,2248833,2248865,2248897,2248929,2248962,2249026,2249090,2249154,2240705,2249217,2249249,2249281,2249313]),\n  new Uint32Array([10485857,6291456,6291456,6291456,6291456,6291456,6291456,6291456,10495394,6291456,2098209,6291456,6291456,2097152,6291456,10531394]),\n  new Uint32Array([0,6291456,6291456,6291456,6291456,6291456,6291456,0,0,6291456,6291456,6291456,6291456,6291456,6291456,0]),\n  new Uint32Array([14680064,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([2173985,2173953,2148481,2173601,2173633,2173665,2173697,2173729,2148801,2173761,2143969,2173793,2173825,2153473,2173857,2173889]),\n  new Uint32Array([6291456,2186977,6291456,6291456,6291456,6291456,6291456,10537858,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([2209601,2209633,2209665,2209697,2209729,2209761,2209793,2209825,2209857,2209889,2209921,2209953,2209985,2210017,2210049,2210081]),\n  new Uint32Array([10501539,10501635,10501731,10501827,10501923,10502019,2098209,2111137,2105505,2098241,2108353,2108417,2105825,2111713,2100897,2111905]),\n  new Uint32Array([2173697,2173729,2148801,2173761,2143969,2173793,2173825,2153473,2173857,2173889,2173921,2173953,2173985,2174017,2174017,2174049]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,0,6291456,6291456,6291456,6291456,0,0]),\n  new Uint32Array([6291456,6291456,23068672,23068672,23068672,0,0,0,0,0,0,0,0,0,0,0]),\n  new Uint32Array([2194561,2194593,2194625,2119777,2119873,2194657,2194689,2194721,2194753,2194785,2194817,2194849,2194881,2194913,2194945,2194977]),\n  new Uint32Array([2113153,2108481,2113345,2113441,2098209,2111137,2105505,2098241,2108353,2108417,2105825,2111713,2100897,2111905,2105473,2105569]),\n  new Uint32Array([2222818,2222882,2222946,2223010,2223074,2223138,2223202,2223266,2223330,2223394,2223458,2223522,2223586,2223650,2223714,2223778]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,23068672]),\n  new Uint32Array([0,2179553,2179585,2179617,2179649,2144001,2179681,2179713,2179745,2179777,2179809,2156705,2179841,2156833,2179873,2179905]),\n  new Uint32Array([6291456,23068672,6291456,2145602,23068672,23068672,23068672,23068672,23068672,23068672,0,23068672,23068672,6291456,0,0]),\n  new Uint32Array([2196513,2196545,2196577,2196609,2196641,2196673,2196705,2196737,2196769,2196801,2196833,2196865,2196897,2196929,2196961,2196993]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,0,0,0,6291456,6291456,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([2177281,6291456,2177313,6291456,2177345,6291456,2177377,6291456,2177409,6291456,2177441,6291456,2177473,6291456,2177505,6291456]),\n  new Uint32Array([2187137,2221473,2221505,2221537,2221569,6291456,6291456,10610209,10610241,10537986,10537986,10537986,10537986,10609857,10609857,10609857]),\n  new Uint32Array([2243009,2243041,2216033,2243074,2243137,2243169,2243201,2219617,2243233,2243265,2243297,2243329,2243362,2243425,2243457,2243489]),\n  new Uint32Array([10485857,10485857,10485857,10485857,10485857,10485857,10485857,10485857,10485857,10485857,10485857,2097152,4194304,4194304,0,0]),\n  new Uint32Array([2143042,6291456,2143106,2143106,2168833,6291456,2168865,6291456,6291456,2168897,6291456,2168929,6291456,2168961,6291456,2143170]),\n  new Uint32Array([6291456,6291456,23068672,23068672,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([2204193,2204225,2204257,2204289,2204321,2204353,2204385,2204417,2204449,2204481,2204513,2204545,2204577,2204609,2204641,2204673]),\n  new Uint32Array([2202753,6291456,2202785,6291456,2202817,6291456,2202849,6291456,2202881,6291456,2202913,6291456,2202945,6291456,2202977,6291456]),\n  new Uint32Array([23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,0,0,23068672,23068672,23068672,23068672,23068672]),\n  new Uint32Array([2108353,2108417,2105825,2111713,2100897,2111905,2105473,2105569,2105601,2112289,2108193,2112481,2112577,2098177,2098305,2108321]),\n  new Uint32Array([2147394,2147458,2147522,2147586,2147650,2147714,2147778,2147842,2147394,2147458,2147522,2147586,2147650,2147714,2147778,2147842]),\n  new Uint32Array([2253313,2253346,2253409,2253441,2253473,2253505,2253537,2253569,2253601,2253634,2219393,2253697,2253729,2253761,2253793,2253825]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,23068672,23068672,23068672,23068672,6291456,6291456]),\n  new Uint32Array([2162562,2162626,2131362,2162690,2159938,2160002,2162754,2162818,2160130,2162882,2160194,2160258,2160834,2160898,2161026,2161090]),\n  new Uint32Array([2175361,2175393,2175425,2175457,2175489,2175521,2175553,2175585,2175617,2175649,2175681,2175713,2175745,2175777,2175809,2175841]),\n  new Uint32Array([2253858,2253921,2253954,2254018,2254082,2196737,2254145,2196865,2254177,2254209,2254241,2254273,2197025,2254306,0,0]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,2202113,2204129,2188705,2204161]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,0,6291456,0,6291456,6291456,6291456,6291456,0,0]),\n  new Uint32Array([2173985,2174017,2174017,2174049,2174081,2174113,2174145,2174177,2149057,2233089,2173697,2173761,2173793,2174113,2173985,2173953]),\n  new Uint32Array([2101569,2101697,2101825,2101953,2102081,2102209,2100833,2100737,2098337,2101441,2101569,2101697,2101825,2101953,2102081,2102209]),\n  new Uint32Array([2108289,2100865,2113153,2108481,2113345,2113441,2098209,2111137,2105505,2098241,0,2108417,0,2111713,2100897,2111905]),\n  new Uint32Array([23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,0,0,0,0,0,0,0,0]),\n  new Uint32Array([2175425,2175489,2175809,2175905,2175937,2175937,2176193,2176417,2180865,0,0,0,0,0,0,0]),\n  new Uint32Array([6291456,6291456,6291456,6291456,2143298,2143298,2143298,2143362,2143362,2143362,2143426,2143426,2143426,2171105,6291456,2171137]),\n  new Uint32Array([2120162,2120258,2151618,2151682,2151746,2151810,2151874,2151938,2152002,2120035,2120131,2120227,2152066,2120323,2152130,2120419]),\n  new Uint32Array([23068672,23068672,23068672,23068672,23068672,23068672,0,0,0,0,0,23068672,23068672,23068672,23068672,23068672]),\n  new Uint32Array([23068672,23068672,23068672,23068672,23068672,0,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([2195361,2142433,2236065,2236097,2236129,2236161,2118241,2117473,2236193,2236225,2236257,2236289,0,0,0,0]),\n  new Uint32Array([2189281,6291456,2189313,6291456,2189345,6291456,2189377,6291456,2189409,6291456,2189441,6291456,2189473,6291456,2189505,6291456]),\n  new Uint32Array([6291456,6291456,2145922,6291456,6291456,6291456,6291456,2145986,6291456,6291456,6291456,6291456,2146050,6291456,6291456,6291456]),\n  new Uint32Array([2100833,2100737,2098337,2101441,2101569,2101697,2101825,2101953,2102081,2102209,10502113,10562017,10610401,10502177,10610433,10538049]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,0,2186401,0,2186433,0,2186465,0,2186497]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,0,0,0,23068672,23068672,23068672]),\n  new Uint32Array([0,0,2198241,2198273,2198305,2198337,2198369,2198401,0,0,2198433,2198465,2198497,0,0,0]),\n  new Uint32Array([6291456,0,6291456,6291456,6291456,6291456,0,0,6291456,6291456,6291456,6291456,6291456,6291456,6291456,0]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,0,6291456,0,23068672,23068672,23068672,23068672,23068672,23068672,0,0]),\n  new Uint32Array([6291456,6291456,6291456,6291456,0,6291456,6291456,6291456,6291456,6291456,0,0,23068672,6291456,23068672,23068672]),\n  new Uint32Array([0,2105921,2097729,0,2097377,0,0,2106017,2133281,2097505,2105889,0,2097697,2135777,2097633,2097441]),\n  new Uint32Array([2197889,2197921,2197953,2197985,2198017,2198049,2198081,2198113,2198145,2198177,2198209,2198241,2198273,2198305,2198337,2198369]),\n  new Uint32Array([2132514,2132610,2160386,2133090,2133186,2160450,2160514,2133282,2160578,2133570,2106178,2160642,2133858,2160706,2160770,2134146]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,23068672,23068672,0,0,0,0,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([6291456,23068672,23068672,6291456,23068672,23068672,6291456,23068672,0,0,0,0,0,0,0,0]),\n  new Uint32Array([2184737,6291456,2184769,6291456,2184801,6291456,2184833,6291456,2184865,6291456,2184897,6291456,2184929,6291456,2184961,6291456]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,0,6291456,0,6291456,6291456,6291456,6291456,0,6291456]),\n  new Uint32Array([6291456,6291456,0,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([23068672,23068672,23068672,23068672,6291456,23068672,23068672,23068672,6291456,23068672,23068672,23068672,23068672,23068672,0,0]),\n  new Uint32Array([6291456,6291456,6291456,2186753,6291456,6291456,6291456,6291456,2186785,2186817,2186849,2173569,2186881,10496355,10495395,10575521]),\n  new Uint32Array([0,0,2097729,0,0,0,0,2106017,0,2097505,0,2097185,0,2135777,2097633,2097441]),\n  new Uint32Array([2189537,6291456,2189569,6291456,2189601,6291456,2189633,6291456,2189665,6291456,2189697,6291456,2189729,6291456,2189761,6291456]),\n  new Uint32Array([2202497,6291456,2202529,6291456,2202561,6291456,2202593,6291456,2202625,6291456,2202657,6291456,2202689,6291456,2202721,6291456]),\n  new Uint32Array([2245217,2218369,2245249,2245282,2245345,2245377,2245410,2245474,2245537,2245569,2245601,2245633,2245665,2245665,2245697,2245729]),\n  new Uint32Array([6291456,0,23068672,23068672,0,0,0,0,0,0,0,0,0,0,0,0]),\n  new Uint32Array([6291456,0,0,0,0,0,0,23068672,0,0,0,0,0,0,0,0]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,23068672,6291456,23068672,6291456,23068672,6291456,6291456,6291456,6291456,23068672,23068672]),\n  new Uint32Array([0,6291456,6291456,6291456,6291456,6291456,6291456,0,0,0,0,0,0,0,0,0]),\n  new Uint32Array([2097281,2105921,2097729,2106081,2097377,2097601,2162337,2106017,2133281,2097505,0,2097185,2097697,2135777,2097633,2097441]),\n  new Uint32Array([2176641,6291456,2176673,6291456,2176705,6291456,2176737,6291456,2176769,6291456,2176801,6291456,2176833,6291456,2176865,6291456]),\n  new Uint32Array([2174145,2174177,2149057,2233089,2173697,2173761,2173793,2174113,2173985,2173953,2174369,2174369,0,0,2100833,2100737]),\n  new Uint32Array([2116513,2190817,2190849,2190881,2190913,2190945,2116609,2190977,2191009,2191041,2191073,2117185,2191105,2191137,2191169,2191201]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,0,0,0,0,0,6291456,6291456,6291456]),\n  new Uint32Array([0,0,0,0,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672]),\n  new Uint32Array([23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,6291456]),\n  new Uint32Array([2167617,2167649,2167681,2167713,2167745,2167777,2167809,6291456,2167841,2167873,2167905,2167937,2167969,2168001,2168033,4240130]),\n  new Uint32Array([2165122,2163970,2164034,2164098,2164162,2164226,2164290,2164354,2164418,2164482,2164546,2133122,2134562,2132162,2132834,2136866]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,0,0,2186209,2186241,2186273,2186305,2186337,2186369,0,0]),\n  new Uint32Array([2112481,2112577,2098177,2098305,2108321,2108289,2100865,2113153,2108481,2113345,2113441,14680064,14680064,14680064,14680064,14680064]),\n  new Uint32Array([0,0,23068672,6291456,0,6291456,6291456,6291456,6291456,6291456,6291456,0,0,0,6291456,6291456]),\n  new Uint32Array([0,10537921,10610689,10610273,10610497,10610529,10610305,10610721,10489601,10489697,10610337,10575617,10554529,2221761,2197217,10496577]),\n  new Uint32Array([2105473,2105569,2105601,2112289,0,2112481,2112577,2098177,2098305,2108321,2108289,2100865,2113153,2108481,2113345,2113441]),\n  new Uint32Array([2100897,2111905,2105473,2105569,2105601,2112289,2108193,2112481,2112577,2098177,2098305,2108321,2108289,2100865,2113153,2108481]),\n  new Uint32Array([2125346,2153410,2153474,2127394,2153538,2153602,2153666,2153730,2105507,2105476,2153794,2153858,2153922,2153986,2154050,2105794]),\n  new Uint32Array([2200449,2119681,2200481,2153313,2199873,2199905,2199937,2200513,2200545,2200577,2200609,2119105,2119201,2119297,2119393,2119489]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,2175777,6291456,6291456,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([2222273,2197217,2221473,2221505,2221089,2222305,2200865,2099681,2104481,2222337,2099905,2120737,2222369,2103713,2100225,2098785]),\n  new Uint32Array([2201377,6291456,2201409,6291456,2201441,6291456,2201473,6291456,2201505,6291456,2201537,6291456,2201569,6291456,6291456,23068672]),\n  new Uint32Array([2174081,2174113,2174145,2174177,2149057,2233057,2148481,2173601,2173633,2173665,2173697,2173729,2148801,2173761,2143969,2173793]),\n  new Uint32Array([2200897,6291456,2200929,6291456,2200961,6291456,2200993,6291456,2201025,6291456,2180865,6291456,2201057,6291456,2201089,6291456]),\n  new Uint32Array([0,0,0,0,0,23068672,23068672,0,6291456,6291456,6291456,0,0,0,0,0]),\n  new Uint32Array([2161154,2161410,2138658,2161474,2161538,2097666,2097186,2097474,2162946,2132450,2163010,2163074,2136162,2163138,2161666,2161730]),\n  new Uint32Array([2148481,2173601,2173633,2173665,2173697,2173729,2148801,2173761,2143969,2173793,2173825,2153473,2173857,2173889,2173921,2173953]),\n  new Uint32Array([0,0,0,0,0,0,23068672,23068672,0,0,0,0,2145410,2145474,0,6291456]),\n  new Uint32Array([2244161,2216065,2212769,2244193,2244225,2244257,2244290,2244353,2244385,2244417,2244449,2218273,2244481,2244514,2244577,2244609]),\n  new Uint32Array([2125730,2125699,2125795,2125891,2125987,2154114,2154178,2154242,2154306,2154370,2154434,2154498,2126082,2126178,2126274,2126083]),\n  new Uint32Array([2237665,2237697,2237697,2237697,2237730,2237793,2237825,2237857,2237890,2237953,2237985,2238017,2238049,2238081,2238113,2238145]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,2150146,6291456,6291456,6291456]),\n  new Uint32Array([23068672,23068672,23068672,23068672,23068672,0,0,23068672,23068672,0,0,23068672,23068672,23068672,0,0]),\n  new Uint32Array([2214369,2238593,2238625,2238657,2238689,2238721,2238753,2238785,2238817,2238850,2238913,2238945,2238977,2235457,2239009,2239041]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,0,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,0,0]),\n  new Uint32Array([2252066,2252130,2252193,2252225,2252257,2252290,2252353,2252385,2252417,2252449,2252481,2252513,2252545,2252578,2252641,2252673]),\n  new Uint32Array([2197697,2114113,2114209,2197729,2197761,2114305,2197793,2114401,2114497,2197825,2114593,2114689,2114785,2114881,2114977,2197857]),\n  new Uint32Array([2224866,2224930,2224994,2225058,2225122,2225186,2225250,2225314,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([2219490,2219554,2219617,2219649,2219681,2219714,2219778,2219842,2219905,2219937,0,0,0,0,0,0]),\n  new Uint32Array([6291456,23068672,23068672,23068672,0,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,0,0,6291456]),\n  new Uint32Array([2113345,2113441,2098209,2111137,2105505,2098241,2108353,2108417,2105825,2111713,2100897,2111905,2105473,2105569,2105601,2112289]),\n  new Uint32Array([2174081,2174113,2174145,2174177,2149057,2233089,2173697,2173761,2173793,2174113,2173985,2173953,2148481,2173601,2173633,2173665]),\n  new Uint32Array([2220161,2220161,2220193,2220193,2220193,2220193,2220225,2220225,2220225,2220225,2220257,2220257,2220257,2220257,2220289,2220289]),\n  new Uint32Array([2192673,2192705,2192737,2192769,2192801,2192833,2192865,2118049,2192897,2117473,2117761,2192929,2192961,2192993,2193025,2193057]),\n  new Uint32Array([2179297,6291456,2179329,6291456,2179361,6291456,2179393,6291456,2179425,6291456,2179457,6291456,2179489,6291456,2179521,6291456]),\n  new Uint32Array([6291456,6291456,6291456,23068672,6291456,6291456,6291456,0,0,0,0,0,0,0,0,0]),\n  new Uint32Array([2235745,2235777,2193633,2235809,2235841,2235873,2235905,2235937,2235969,2116513,2116705,2236001,2200513,2199905,2200545,2236033]),\n  new Uint32Array([2113153,2108481,2113345,2113441,2232993,2233025,0,0,2148481,2173601,2173633,2173665,2173697,2173729,2148801,2173761]),\n  new Uint32Array([2170593,6291456,2170625,6291456,2170657,6291456,2170689,2170721,6291456,2170753,6291456,6291456,2170785,6291456,2170817,2170849]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,2166786,2166850,0,0,0,0]),\n  new Uint32Array([23068672,6291456,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,0,6291456,6291456]),\n  new Uint32Array([2100833,2100737,2098337,2101441,2101569,2101697,2101825,2101953,2102081,2102209,10575617,2187041,10502177,10489601,10489697,0]),\n  new Uint32Array([0,0,0,0,0,0,0,0,0,0,0,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([2134562,2132162,2132834,2136866,2136482,2164610,2164674,2164738,2164802,2132802,2132706,2164866,2132898,2164930,2164994,2165058]),\n  new Uint32Array([6291456,6291456,2098337,2101441,10531458,2153473,6291456,6291456,10531522,2100737,2108193,6291456,2106499,2106595,2106691,6291456]),\n  new Uint32Array([23068672,23068672,23068672,23068672,23068672,23068672,23068672,0,0,0,0,0,0,0,0,0]),\n  new Uint32Array([2233122,2233186,2233250,2233314,2233378,2233442,2233506,2233570,2233634,2233698,2233762,2233826,2233890,2233954,2234018,2234082]),\n  new Uint32Array([23068672,6291456,23068672,23068672,23068672,6291456,6291456,23068672,23068672,23068672,23068672,23068672,23068672,23068672,6291456,6291456]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,0,0]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,0,0,0,0,6291456,6291456]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,0,0,0,0,0,0,0,0,0,0,0]),\n  new Uint32Array([2205217,2205249,2205281,2205313,2205345,2205377,2205409,2205441,2205473,2205505,2205537,2205569,2205601,2205633,2205665,2205697]),\n  new Uint32Array([6291456,0,6291456,0,0,0,6291456,6291456,6291456,6291456,0,0,23068672,6291456,23068672,23068672]),\n  new Uint32Array([2173601,2173761,2174081,2173569,2174241,2174113,2173953,6291456,2174305,6291456,2174337,6291456,2174369,6291456,2174401,6291456]),\n  new Uint32Array([6291456,23068672,23068672,23068672,0,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,0,6291456,6291456]),\n  new Uint32Array([2152450,2152514,2099653,2104452,2099813,2122243,2099973,2152578,2122339,2122435,2122531,2122627,2122723,2104580,2122819,2152642]),\n  new Uint32Array([2236385,2236417,2236449,2236482,2236545,2215425,2236577,2236609,2236641,2236673,2215457,2236705,2236737,2236770,2215489,2236833]),\n  new Uint32Array([2163394,2159746,2163458,2131362,2163522,2160130,2163778,2132226,2163842,2132898,2163906,2161410,2138658,2097666,2136162,2163650]),\n  new Uint32Array([2218721,2246913,2246946,2216385,2247010,2247074,2215009,2247137,2247169,2216481,2247201,2247233,2247266,2247330,2247330,0]),\n  new Uint32Array([2129730,2129762,2129858,2129731,2129827,2156482,2156482,0,0,0,0,0,0,0,0,0]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,0,0,0,6291456,6291456,6291456]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,0,6291456,0,0,0,0,0,6291456,0,0]),\n  new Uint32Array([2203969,2204001,2181377,2204033,2204065,6291456,2204097,6291456,0,0,0,0,0,0,0,0]),\n  new Uint32Array([2169473,6291456,2169505,6291456,2169537,6291456,2169569,6291456,2169601,6291456,2169633,6291456,2169665,6291456,2169697,6291456]),\n  new Uint32Array([2141542,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([2220801,2220801,2220801,2220801,2220833,2220833,2220865,2220865,2220865,2220865,2220897,2220897,2220897,2220897,2139873,2139873]),\n  new Uint32Array([0,0,0,0,0,23068672,23068672,0,0,0,0,0,0,0,6291456,0]),\n  new Uint32Array([2214849,2218433,2218465,2218497,2218529,2218561,2214881,2218593,2218625,2218657,2218689,2218721,2218753,2216545,2218785,2218817]),\n  new Uint32Array([23068672,23068672,23068672,23068672,0,0,0,0,0,0,0,0,0,0,0,6291456]),\n  new Uint32Array([2136482,2164610,2164674,2164738,2164802,2132802,2132706,2164866,2132898,2164930,2164994,2165058,2165122,2132802,2132706,2164866]),\n  new Uint32Array([2207649,2207681,2207713,2207745,2207777,2207809,2207841,2207873,2207905,2207937,2207969,2208001,2208033,2208065,2208097,2208129]),\n  new Uint32Array([2123683,2105092,2152706,2123779,2105220,2152770,2100453,2098755,2123906,2124002,2124098,2124194,2124290,2124386,2124482,2124578]),\n  new Uint32Array([6291456,6291456,6291456,6291456,0,0,0,6291456,0,0,0,0,0,0,0,10485857]),\n  new Uint32Array([6291456,6291456,6291456,6291456,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672]),\n  new Uint32Array([10508163,10508259,10508355,10508451,2200129,2200161,2192737,2200193,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([2203553,6291456,2203585,6291456,6291456,6291456,2203617,6291456,2203649,6291456,2203681,6291456,2203713,6291456,2203745,6291456]),\n  new Uint32Array([18884449,18884065,23068672,18884417,18884034,18921185,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,18874368]),\n  new Uint32Array([2247393,2247426,2247489,2247521,2247553,2247586,2247649,2247681,2247713,2247745,2247777,2247810,2247873,2247905,2247937,2247969]),\n  new Uint32Array([6291456,6291456,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,6291456,23068672]),\n  new Uint32Array([2134145,2097153,2134241,0,2132705,2130977,2160065,2131297,0,2133089,2160577,2133857,2235297,0,2235329,0]),\n  new Uint32Array([2182593,6291456,2182625,6291456,2182657,6291456,2182689,6291456,2182721,6291456,2182753,6291456,2182785,6291456,2182817,6291456]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,2102402,2102403,6291456,2110050]),\n  new Uint32Array([2149890,2108323,2149954,6291456,2113441,6291456,2149057,6291456,2113441,6291456,2105473,2167265,2111137,2105505,6291456,2108353]),\n  new Uint32Array([2219105,2219137,2195233,2251554,2251617,2251649,2251681,2251713,2251746,2251810,2251873,2251905,2251937,2251970,2252033,2219169]),\n  new Uint32Array([2203009,6291456,2203041,6291456,2203073,6291456,2203105,6291456,2203137,6291456,2203169,6291456,2203201,6291456,2203233,6291456]),\n  new Uint32Array([2128195,2128291,2128387,2128483,2128579,2128675,2128771,2128867,2128963,2129059,2129155,2129251,2129347,2129443,2129539,2129635]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,2140964,2141156,2140966,2141158,2141350]),\n  new Uint32Array([0,0,0,0,0,0,0,0,0,0,0,23068672,23068672,23068672,23068672,23068672]),\n  new Uint32Array([23068672,23068672,23068672,23068672,23068672,23068672,23068672,6291456,6291456,6291456,6291456,23068672,23068672,23068672,23068672,23068672]),\n  new Uint32Array([2225378,2225442,2225506,2225570,2225634,2225698,2225762,2225826,2225890,2225954,2226018,2226082,2226146,2226210,2226274,2226338]),\n  new Uint32Array([23068672,23068672,23068672,23068672,23068672,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([23068672,23068672,23068672,23068672,0,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,0,6291456,6291456]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,0,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([2112577,2098177,2098305,2108321,2108289,2100865,2113153,2108481,2113345,2113441,2098209,2111137,2105505,2098241,2108353,2108417]),\n  new Uint32Array([2108353,2108417,0,2105601,2108193,2157121,2157313,2157377,2157441,2100897,6291456,2108419,2173953,2173633,2173633,2173953]),\n  new Uint32Array([2111713,2173121,2111905,2098177,2173153,2173185,2173217,2113153,2113345,6291456,6291456,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,0,6291456,6291456,6291456,6291456,2190753]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,2197249,6291456,2117377,2197281,2197313,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([6291456,0,0,0,0,0,0,23068672,0,0,0,0,0,6291456,6291456,6291456]),\n  new Uint32Array([2098337,2101441,2101569,2101697,2101825,2101953,2102081,2102209,2100833,2100737,2098337,2101441,2101569,2101697,2101825,2101953]),\n  new Uint32Array([23068672,23068672,23068672,23068672,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,0,0,0]),\n  new Uint32Array([0,0,0,0,0,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,0,0,23068672,23068672,23068672]),\n  new Uint32Array([2173281,6291456,2173313,6291456,2173345,6291456,2173377,6291456,0,0,10532546,6291456,6291456,6291456,10562017,2173441]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,23068672,23068672,0,0]),\n  new Uint32Array([23068672,23068672,23068672,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([23068672,23068672,23068672,23068672,23068672,23068672,23068672,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([2159426,2159490,2159554,2159362,2159618,2159682,2139522,2136450,2159746,2159810,2159874,2130978,2131074,2131266,2131362,2159938]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,0,0,0,0,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([2203233,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,2203265,6291456,2203297,6291456,2203329,2203361,6291456]),\n  new Uint32Array([6291456,6291456,2148418,2148482,2148546,0,6291456,2148610,2186529,2186561,2148417,2148545,2148482,10495778,2143969,10495778]),\n  new Uint32Array([2134146,2139426,2160962,2134242,2161218,2161282,2161346,2161410,2138658,2134722,2134434,2134818,2097666,2097346,2097698,2105986]),\n  new Uint32Array([2198881,2198913,2198945,2198977,2199009,2199041,2199073,2199105,2199137,2199169,2199201,2199233,2199265,2199297,2199329,2199361]),\n  new Uint32Array([0,23068672,23068672,23068672,0,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,0,6291456]),\n  new Uint32Array([10610561,2098209,2111137,2105505,2098241,2108353,2108417,2105825,2111713,2100897,2111905,2105473,2105569,2105601,2112289,2108193]),\n  new Uint32Array([2183873,6291456,2183905,6291456,2183937,6291456,2183969,6291456,2184001,6291456,2184033,6291456,2184065,6291456,2184097,6291456]),\n  new Uint32Array([2244642,2244706,2244769,2244801,2218305,2244833,2244865,2244897,2244929,2244961,2244993,2245026,2245089,2245122,2245185,0]),\n  new Uint32Array([6291456,6291456,2116513,2116609,2116705,2116801,2199873,2199905,2199937,2199969,2190913,2200001,2200033,2200065,2200097,2191009]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,0,0,2180673,2180705,2180737,2180769,2180801,2180833,0,0]),\n  new Uint32Array([2098081,2099521,2099105,2120705,2098369,2120801,2103361,2097985,2098433,2121377,2121473,2099169,2099873,2098401,2099393,2152609]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,2150402]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,0,0,2145666,2145730,6291456,6291456]),\n  new Uint32Array([2173921,2173953,2173985,2173761,2174017,2174049,2174081,2174113,2174145,2174177,2149057,2233057,2148481,2173601,2173633,2173665]),\n  new Uint32Array([2187073,6291456,6291456,6291456,6291456,2098241,2098241,2108353,2100897,2111905,6291456,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,2102404,6291456,6291456,6291456]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,2100612,6291456,6291456,6291456,6291456,6291456,6291456,6291456,10485857]),\n  new Uint32Array([2149057,2233057,2148481,2173601,2173633,2173665,2173697,2173729,2148801,2173761,2143969,2173793,2173825,2153473,2173857,2173889]),\n  new Uint32Array([2217697,2217729,2217761,2217793,2217825,2217857,2217889,2217921,2217953,2215873,2217985,2215905,2218017,2218049,2218081,2218113]),\n  new Uint32Array([2211233,2218849,2216673,2218881,2218913,2218945,2218977,2219009,2216833,2219041,2215137,2219073,2216865,2209505,2219105,2216897]),\n  new Uint32Array([2240097,2240129,2240161,2240193,2240225,2240257,2240289,2240321,2240353,2240386,2240449,2240481,2240513,2240545,2207905,2240578]),\n  new Uint32Array([6291456,6291456,2202273,6291456,2202305,6291456,2202337,6291456,2202369,6291456,2202401,6291456,2202433,6291456,2202465,6291456]),\n  new Uint32Array([0,23068672,23068672,18923394,23068672,18923458,18923522,18884099,18923586,18884195,23068672,23068672,23068672,23068672,23068672,23068672]),\n  new Uint32Array([2201121,6291456,2201153,6291456,2201185,6291456,2201217,6291456,2201249,6291456,2201281,6291456,2201313,6291456,2201345,6291456]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,0,0,0,6291456,6291456]),\n  new Uint32Array([2211041,2211073,2211105,2211137,2211169,2211201,2211233,2211265,2211297,2211329,2211361,2211393,2211425,2211457,2211489,2211521]),\n  new Uint32Array([2181825,6291456,2181857,6291456,2181889,6291456,2181921,6291456,2181953,6291456,2181985,6291456,2182017,6291456,2182049,6291456]),\n  new Uint32Array([2162337,2097633,2097633,2097633,2097633,2132705,2132705,2132705,2132705,2097153,2097153,2097153,2097153,2133089,2133089,2133089]),\n  new Uint32Array([6291456,6291456,6291456,6291456,0,0,0,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([6291456,2148545,6291456,2173473,6291456,2148865,6291456,2173505,6291456,2173537,6291456,2173569,6291456,2149121,0,0]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,0,0,0,0,0,0,0,0,0,0]),\n  new Uint32Array([23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,6291456,6291456,0,6291456,6291456]),\n  new Uint32Array([6291456,6291456,6291456,6291456,23068672,6291456,6291456,6291456,6291456,6291456,6291456,6291456,0,0,0,0]),\n  new Uint32Array([2148801,2173761,2143969,2173793,2173825,2153473,2173857,2173889,2173921,2173953,2173985,2174017,2174017,2174049,2174081,2174113]),\n  new Uint32Array([23068672,23068672,23068672,23068672,23068672,23068672,23068672,0,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672]),\n  new Uint32Array([2207137,2207169,2207201,2207233,2207265,2207297,2207329,2207361,2207393,2207425,2207457,2207489,2207521,2207553,2207585,2207617]),\n  new Uint32Array([6291456,6291456,23068672,23068672,23068672,6291456,6291456,0,23068672,23068672,0,0,0,0,0,0]),\n  new Uint32Array([2198401,2198433,2198465,2198497,0,2198529,2198561,2198593,2198625,2198657,2198689,2198721,2198753,2198785,2198817,2198849]),\n  new Uint32Array([2105505,2098241,2108353,2108417,2105825,2111713,2100897,2111905,2105473,2105569,2105601,2112289,2108193,2112481,2112577,2098177]),\n  new Uint32Array([23068672,23068672,23068672,23068672,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,23068672,0,0]),\n  new Uint32Array([2216385,2118721,2216417,2216449,2216481,2216513,2216545,2211233,2216577,2216609,2216641,2216673,2216705,2216737,2216737,2216769]),\n  new Uint32Array([2216801,2216833,2216865,2216897,2216929,2216961,2216993,2215169,2217025,2217057,2217089,2217121,2217154,2217217,0,0]),\n  new Uint32Array([2210593,2191809,2210625,2210657,2210689,2210721,2210753,2210785,2210817,2210849,2191297,2210881,2210913,2210945,2210977,2211009]),\n  new Uint32Array([0,0,2105825,0,0,2111905,2105473,0,0,2112289,2108193,2112481,2112577,0,2098305,2108321]),\n  new Uint32Array([0,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([0,2097153,2134241,0,2132705,0,0,2131297,0,2133089,0,2133857,0,2220769,0,2235361]),\n  new Uint32Array([14680064,14680064,14680064,14680064,14680064,14680064,14680064,14680064,14680064,14680064,14680064,14680064,14680064,6291456,6291456,14680064]),\n  new Uint32Array([23068672,23068672,6291456,6291456,6291456,6291456,6291456,6291456,0,0,0,0,0,0,0,0]),\n  new Uint32Array([2171873,6291456,2171905,6291456,2171937,6291456,2171969,6291456,2172001,6291456,2172033,6291456,2172065,6291456,2172097,6291456]),\n  new Uint32Array([2220929,2220929,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([2133857,2134145,2134145,2134145,2134145,2134241,2134241,2134241,2134241,2105889,2105889,2105889,2105889,2097185,2097185,2097185]),\n  new Uint32Array([2173697,2173761,2173793,2174113,2173985,2173953,2148481,2173601,2173633,2173665,2173697,2173729,2148801,2173761,2143969,2173793]),\n  new Uint32Array([0,0,0,0,0,0,0,0,0,0,0,0,10499619,10499715,10499811,10499907]),\n  new Uint32Array([0,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672]),\n  new Uint32Array([6291456,0,0,0,0,0,0,0,0,0,0,0,0,0,0,23068672]),\n  new Uint32Array([6291456,6291456,6291456,6291456,0,0,0,0,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([23068672,23068672,23068672,23068672,23068672,23068672,0,0,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,0,6291456,6291456,0,6291456]),\n  new Uint32Array([23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,6291456,6291456,6291456]),\n  new Uint32Array([23068672,23068672,23068672,23068672,23068672,0,23068672,23068672,23068672,0,23068672,23068672,23068672,23068672,6291456,6291456]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,0,0,0,6291456,23068672,23068672]),\n  new Uint32Array([23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,0,0,0,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([6291456,23068672,23068672,23068672,23068672,23068672,23068672,23068672,2144322,2144386,2144450,2144514,2144578,2144642,2144706,2144770]),\n  new Uint32Array([23068672,23068672,23068672,6291456,6291456,23068672,23068672,23068672,23068672,23068672,23068672,23068672,6291456,6291456,6291456,6291456]),\n  new Uint32Array([2113153,2108481,2113345,2113441,2098209,2111137,0,2098241,2108353,2108417,2105825,0,0,2111905,2105473,2105569]),\n  new Uint32Array([2236321,2236353,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),\n  new Uint32Array([2152194,2121283,2103684,2103812,2097986,2098533,2097990,2098693,2098595,2098853,2099013,2103940,2121379,2121475,2121571,2104068]),\n  new Uint32Array([2206241,2206273,2206305,2206337,2206369,2206401,2206433,2206465,2206497,2206529,2206561,2206593,2206625,2206657,2206689,2206721]),\n  new Uint32Array([6291456,6291456,6291456,6291456,16777216,16777216,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,0,0,23068672,23068672,10538818,10538882,6291456,6291456,2150338]),\n  new Uint32Array([6291456,6291456,6291456,0,0,0,0,0,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([2214369,2214401,2214433,2214465,2214497,2214529,2214561,2214593,2194977,2214625,2195073,2214657,2214689,2214721,6291456,6291456]),\n  new Uint32Array([2097152,2097152,2097152,2097152,0,0,0,0,0,0,0,0,0,0,0,0]),\n  new Uint32Array([2182081,6291456,2182113,6291456,2182145,6291456,2182177,6291456,2182209,6291456,2182241,6291456,2182273,6291456,2182305,6291456]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,2146881,2146945,2147009,2147073,2147137,2147201,2147265,2147329]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,0,0,6291456,23068672,23068672]),\n  new Uint32Array([0,0,0,0,0,0,0,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([2122915,2123011,2123107,2104708,2123203,2123299,2123395,2100133,2104836,2100290,2100293,2104962,2104964,2098052,2123491,2123587]),\n  new Uint32Array([23068672,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,0,6291456]),\n  new Uint32Array([6291456,2171169,6291456,2171201,6291456,2171233,6291456,2171265,6291456,2171297,6291456,2171329,6291456,6291456,2171361,6291456]),\n  new Uint32Array([6291456,6291456,6291456,6291456,0,0,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([0,0,2148994,2149058,2149122,0,6291456,2149186,2186945,2173537,2148993,2149121,2149058,10531458,10496066,0]),\n  new Uint32Array([2195009,2195041,2195073,2195105,2195137,2195169,2195201,2195233,2195265,2195297,2195329,2195361,2195393,2195425,2195457,2195489]),\n  new Uint32Array([23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,6291456,0,0,6291456,6291456]),\n  new Uint32Array([2182849,6291456,2182881,6291456,2182913,6291456,2182945,6291456,2182977,6291456,2183009,6291456,2183041,6291456,2183073,6291456]),\n  new Uint32Array([2211553,2210081,2211585,2211617,2211649,2211681,2211713,2211745,2211777,2211809,2209569,2211841,2211873,2211905,2211937,2211969]),\n  new Uint32Array([2112577,2098177,2098305,2108321,2108289,2100865,2113153,2108481,2113345,2113441,2166594,2127298,2166658,2142978,2141827,2166722]),\n  new Uint32Array([2173985,2173761,2174017,2174049,2174081,2174113,2174145,2174177,2149057,2233057,2148481,2173601,2173633,2173665,2173697,2173729]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,0,0,2185761,2185793,2185825,2185857,2185889,2185921,0,0]),\n  new Uint32Array([6291456,2148481,2173601,2173633,2173665,2173697,2173729,2148801,2173761,2143969,2173793,2173825,2153473,2173857,2173889,2173921]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,0,0,0,0,0,6291456]),\n  new Uint32Array([0,0,0,2220961,2220961,2220961,2220961,2144193,2144193,2159201,2159201,2159265,2159265,2144194,2220993,2220993]),\n  new Uint32Array([2192641,2235393,2235425,2152257,2116609,2235457,2235489,2200065,2235521,2235553,2235585,2212449,2235617,2235649,2235681,2235713]),\n  new Uint32Array([2194049,2194081,2194113,2194145,2194177,2194209,2194241,2194273,2194305,2194337,2194369,2194401,2194433,2194465,2194497,2194529]),\n  new Uint32Array([2196673,2208641,2208673,2208705,2208737,2208769,2208801,2208833,2208865,2208897,2208929,2208961,2208993,2209025,2209057,2209089]),\n  new Uint32Array([2191681,2191713,2191745,2191777,2153281,2191809,2191841,2191873,2191905,2191937,2191969,2192001,2192033,2192065,2192097,2192129]),\n  new Uint32Array([2230946,2231010,2231074,2231138,2231202,2231266,2231330,2231394,2231458,2231522,2231586,2231650,2231714,2231778,2231842,2231906]),\n  new Uint32Array([14680064,14680064,14680064,14680064,14680064,14680064,14680064,14680064,14680064,14680064,14680064,14680064,14680064,14680064,14680064,14680064]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,2185953,2185985,2186017,2186049,2186081,2186113,2186145,2186177]),\n  new Uint32Array([2139811,2139907,2097284,2105860,2105988,2106116,2106244,2097444,2097604,2097155,10485778,10486344,2106372,6291456,0,0]),\n  new Uint32Array([2110051,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([0,0,0,0,0,0,0,0,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([2172385,6291456,2172417,6291456,2172449,6291456,2172481,6291456,2172513,6291456,2172545,6291456,2172577,6291456,2172609,6291456]),\n  new Uint32Array([0,0,23068672,23068672,6291456,0,0,0,0,0,0,0,0,0,0,0]),\n  new Uint32Array([2249345,2249377,2249409,2249441,2249473,2249505,2249537,2249570,2210209,2249633,2249665,2249697,2249729,2249761,2249793,2216769]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,23068672,23068672,23068672,23068672]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,0,0,0,0,6291456,6291456,6291456,6291456]),\n  new Uint32Array([2187169,2187201,2187233,2187265,2187297,2187329,2187361,2187393,2187425,2187457,2187489,2187521,2187553,2187585,2187617,2187649]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,23068672,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([0,0,0,6291456,6291456,0,0,0,6291456,6291456,6291456,0,0,0,6291456,6291456]),\n  new Uint32Array([2182337,6291456,2182369,6291456,2182401,6291456,2182433,6291456,2182465,6291456,2182497,6291456,2182529,6291456,2182561,6291456]),\n  new Uint32Array([2138179,2138275,2138371,2138467,2134243,2134435,2138563,2138659,2138755,2138851,2138947,2139043,2138947,2138755,2139139,2139235]),\n  new Uint32Array([23068672,23068672,23068672,23068672,6291456,6291456,6291456,6291456,0,0,0,0,0,0,0,0]),\n  new Uint32Array([0,0,23068672,23068672,0,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([2250498,2250562,2250625,2250657,2208321,2250689,2250721,2250753,2250785,2250817,2250849,2218945,2250881,2250913,2250945,0]),\n  new Uint32Array([2170369,2105569,2098305,2108481,2173249,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([23068672,23068672,23068672,23068672,0,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,0,0,6291456]),\n  new Uint32Array([2100897,2111905,2105473,2105569,2105601,0,2108193,0,0,0,2098305,2108321,2108289,2100865,2113153,2108481]),\n  new Uint32Array([2100897,2100897,2105569,2105569,6291456,2112289,2149826,6291456,6291456,2112481,2112577,2098177,2098177,2098177,6291456,6291456]),\n  new Uint32Array([23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,0,0,6291456,6291456,6291456]),\n  new Uint32Array([6291456,2169953,2169985,6291456,2170017,6291456,2170049,2170081,6291456,2170113,2170145,2170177,6291456,6291456,2170209,2170241]),\n  new Uint32Array([6291456,6291456,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),\n  new Uint32Array([0,0,0,0,0,0,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([2220641,2220641,2220673,2220673,2220673,2220673,2220705,2220705,2220705,2220705,2220737,2220737,2220737,2220737,2220769,2220769]),\n  new Uint32Array([2127650,2127746,2127842,2127938,2128034,2128130,2128226,2128322,2128418,2127523,2127619,2127715,2127811,2127907,2128003,2128099]),\n  new Uint32Array([2143969,2173793,2173825,2153473,2173857,2173889,2173921,2173953,2173985,2173761,2174017,2174049,2174081,2174113,2174145,2174177]),\n  new Uint32Array([0,0,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672]),\n  new Uint32Array([2204705,2204737,2204769,2204801,2204833,2204865,2204897,2204929,2204961,2204993,2205025,2205057,2205089,2205121,2205153,2205185]),\n  new Uint32Array([2176385,6291456,2176417,6291456,2176449,6291456,2176481,6291456,2176513,6291456,2176545,6291456,2176577,6291456,2176609,6291456]),\n  new Uint32Array([2195521,2195553,2195585,2195617,2195649,2195681,2117857,2195713,2195745,2195777,2195809,2195841,2195873,2195905,2195937,2195969]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,0,0,0,0]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,0,6291456,6291456,6291456]),\n  new Uint32Array([2173921,2173953,2173985,2174017,2174017,2174049,2174081,2174113,2174145,2174177,2149057,2233089,2173697,2173761,2173793,2174113]),\n  new Uint32Array([2131586,2132450,2135970,2135778,2161602,2136162,2163650,2161794,2135586,2163714,2137186,2131810,2160290,2135170,2097506,2159554]),\n  new Uint32Array([2134145,2097153,2134241,2105953,2132705,2130977,2160065,2131297,2162049,2133089,2160577,2133857,0,0,0,0]),\n  new Uint32Array([2116513,2116609,2116705,2116801,2116897,2116993,2117089,2117185,2117281,2117377,2117473,2117569,2117665,2117761,2117857,2117953]),\n  new Uint32Array([2100737,2098337,2101441,2101569,2101697,2101825,2101953,2102081,2102209,2100802,2101154,2101282,2101410,2101538,2101666,2101794]),\n  new Uint32Array([2100289,2098657,2098049,2200737,2123489,2123681,2200769,2098625,2100321,2098145,2100449,2098017,2098753,2098977,2150241,2150305]),\n  new Uint32Array([6291456,6291456,6291456,0,6291456,6291456,6291456,6291456,6291456,2109955,6291456,6291456,0,0,0,0]),\n  new Uint32Array([18874368,18874368,18874368,18874368,18874368,18874368,18874368,18874368,18874368,18874368,18874368,18874368,18874368,18874368,18874368,18874368]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,0,6291456,0,6291456,0,0]),\n  new Uint32Array([2130979,2131075,2131075,2131171,2131267,2131363,2131459,2131555,2131651,2131651,2131747,2131843,2131939,2132035,2132131,2132227]),\n  new Uint32Array([0,2177793,6291456,2177825,6291456,2177857,6291456,2177889,6291456,2177921,6291456,2177953,6291456,2177985,6291456,6291456]),\n  new Uint32Array([6291456,6291456,6291456,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672]),\n  new Uint32Array([6291456,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),\n  new Uint32Array([2113345,0,2098209,2111137,2105505,2098241,2108353,2108417,2105825,2111713,2100897,2111905,2105473,2105569,2105601,2112289]),\n  new Uint32Array([2136643,2136739,2136835,2136931,2137027,2137123,2137219,2137315,2137411,2137507,2137603,2137699,2137795,2137891,2137987,2138083]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,0]),\n  new Uint32Array([2174433,6291456,2174465,6291456,2174497,6291456,2174529,6291456,2174561,6291456,2174593,6291456,2174625,6291456,2174657,6291456]),\n  new Uint32Array([0,0,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([2105473,2105569,2105601,2112289,2108193,2112481,2112577,2098177,2098305,2108321,2108289,2100865,2113153,2108481,2113345,2113441]),\n  new Uint32Array([10496547,10496643,2105505,2149698,6291456,10496739,10496835,2170273,6291456,2149762,2105825,2111713,2111713,2111713,2111713,2168673]),\n  new Uint32Array([6291456,2143490,2143490,2143490,2171649,6291456,2171681,2171713,2171745,6291456,2171777,6291456,2171809,6291456,2171841,6291456]),\n  new Uint32Array([2159106,2159106,2159170,2159170,2159234,2159234,2159298,2159298,2159298,2159362,2159362,2159362,2106401,2106401,2106401,2106401]),\n  new Uint32Array([2105601,2112289,2108193,2112481,2112577,2098177,2098305,2108321,2108289,2100865,2113153,2108481,2113345,2113441,2098209,2111137]),\n  new Uint32Array([2108417,2181217,2181249,2181281,2170433,2170401,2181313,2181345,2181377,2181409,2181441,2181473,2181505,2181537,2170529,2181569]),\n  new Uint32Array([2218433,2245761,2245793,2245825,2245857,2245890,2245953,2245986,2209665,2246050,2246113,2246146,2246210,2246274,2246337,2246369]),\n  new Uint32Array([2230754,2230818,2230882,0,0,0,0,0,0,0,0,0,0,0,0,0]),\n  new Uint32Array([6291456,0,6291456,6291456,6291456,6291456,0,0,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([6291456,0,0,0,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([2184129,6291456,2184161,6291456,2184193,6291456,6291456,6291456,6291456,6291456,2146818,2183361,6291456,6291456,2142978,6291456]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,0,0,6291456,6291456,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([2135170,2097506,2130691,2130787,2130883,2163970,2164034,2164098,2164162,2164226,2164290,2164354,2164418,2164482,2164546,2133122]),\n  new Uint32Array([2108515,2108611,2100740,2108707,2108803,2108899,2108995,2109091,2109187,2109283,2109379,2109475,2109571,2109667,2109763,2100738]),\n  new Uint32Array([2102788,2102916,2103044,2120515,2103172,2120611,2120707,2098373,2103300,2120803,2120899,2120995,2103428,2103556,2121091,2121187]),\n  new Uint32Array([2158082,2158146,0,2158210,2158274,0,2158338,2158402,2158466,2129922,2158530,2158594,2158658,2158722,2158786,2158850]),\n  new Uint32Array([10499619,10499715,10499811,10499907,10500003,10500099,10500195,10500291,10500387,10500483,10500579,10500675,10500771,10500867,10500963,10501059]),\n  new Uint32Array([2239585,2239618,2239681,2239713,0,2191969,2239745,2239777,2192033,2239809,2239841,2239874,2239937,2239970,2240033,2240065]),\n  new Uint32Array([2252705,2252738,2252801,2252833,2252865,2252897,2252930,2252994,2253057,2253089,2253121,2253154,2253217,2253250,2219361,2219361]),\n  new Uint32Array([2105825,2111713,2100897,2111905,2105473,2105569,2105601,2112289,2108193,2112481,2112577,2098177,2098305,2108321,2108289,2100865]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,10538050,10538114,10538178,6291456,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([2226402,2226466,2226530,2226594,2226658,2226722,2226786,2226850,2226914,2226978,2227042,2227106,2227170,2227234,2227298,2227362]),\n  new Uint32Array([23068672,6291456,6291456,6291456,6291456,2144066,2144130,2144194,2144258,6291456,6291456,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,23068672,23068672,23068672,6291456,23068672,23068672]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,0,0,0,0,0,0,0,0]),\n  new Uint32Array([2124674,2124770,2123875,2123971,2124067,2124163,2124259,2124355,2124451,2124547,2124643,2124739,2124835,2124931,2125027,2125123]),\n  new Uint32Array([2168065,6291456,2168097,6291456,2168129,6291456,2168161,6291456,2168193,6291456,2168225,6291456,2168257,6291456,2168289,6291456]),\n  new Uint32Array([23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,0,0,0,0]),\n  new Uint32Array([23068672,23068672,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([6291456,6291456,6291456,2100610,2100611,6291456,2107842,2107843,6291456,6291456,6291456,6291456,10537922,6291456,10537986,6291456]),\n  new Uint32Array([2174849,2174881,2174913,2174945,2174977,2175009,2175041,2175073,2175105,2175137,2175169,2175201,2175233,2175265,2175297,2175329]),\n  new Uint32Array([2154562,2154626,2154690,2154754,2141858,2154818,2154882,2127298,2154946,2127298,2155010,2155074,2155138,2155202,2155266,2155202]),\n  new Uint32Array([23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,6291456,6291456,6291456,6291456,6291456,6291456,23068672,0]),\n  new Uint32Array([2200641,2150786,2150850,2150914,2150978,2151042,2106562,2151106,2150562,2151170,2151234,2151298,2151362,2151426,2151490,2151554]),\n  new Uint32Array([23068672,23068672,23068672,23068672,23068672,23068672,0,0,0,0,0,0,0,0,6291456,6291456]),\n  new Uint32Array([2220289,2220289,2220321,2220321,2220321,2220321,2220353,2220353,2220353,2220353,2220385,2220385,2220385,2220385,2220417,2220417]),\n  new Uint32Array([2155330,2155394,0,2155458,2155522,2155586,2105732,0,2155650,2155714,2155778,2125314,2155842,2155906,2126274,2155970]),\n  new Uint32Array([23068672,23068672,23068672,23068672,23068672,6291456,6291456,23068672,23068672,6291456,23068672,23068672,23068672,23068672,6291456,6291456]),\n  new Uint32Array([6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,6291456,0,0,0,0,0,0]),\n  new Uint32Array([2097729,2106017,2106017,2106017,2106017,2131297,2131297,2131297,2131297,2106081,2106081,2162049,2162049,2105953,2105953,2162337]),\n  new Uint32Array([2097185,2097697,2097697,2097697,2097697,2135777,2135777,2135777,2135777,2097377,2097377,2097377,2097377,2097601,2097601,2097217]),\n  new Uint32Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,23068672]),\n  new Uint32Array([2139331,2139427,2139523,2139043,2133571,2132611,2139619,2139715,0,0,0,0,0,0,0,0]),\n  new Uint32Array([2174113,2174145,2100897,2098177,2108289,2100865,2173601,2173633,2173985,2174113,2174145,6291456,6291456,6291456,6291456,6291456]),\n  new Uint32Array([6291456,6291456,23068672,6291456,6291456,6291456,23068672,6291456,6291456,6291456,6291456,23068672,6291456,6291456,6291456,6291456]),\n  new Uint32Array([23068672,23068672,18923778,23068672,23068672,23068672,23068672,18923842,23068672,23068672,23068672,23068672,18923906,23068672,23068672,23068672]),\n  new Uint32Array([2134145,2097153,2134241,0,2132705,2130977,2160065,2131297,0,2133089,0,2133857,0,0,0,0]),\n  new Uint32Array([6291456,6291456,6291456,6291456,0,0,0,0,0,0,0,0,0,0,0,0]),\n  new Uint32Array([2177537,6291456,2177569,6291456,2177601,6291456,2177633,6291456,2177665,6291456,2177697,6291456,2177729,6291456,2177761,6291456]),\n  new Uint32Array([2212481,2212513,2212545,2212577,2197121,2212609,2212641,2212673,2212705,2212737,2212769,2212801,2212833,2212865,2212897,2212929]),\n  new Uint32Array([6291456,6291456,23068672,23068672,23068672,6291456,6291456,0,0,0,0,0,0,0,0,0]),\n  new Uint32Array([2098241,2108353,2170209,2105825,2111713,2100897,2111905,2105473,2105569,2105601,2112289,6291456,2108193,2172417,2112481,2098177]),\n  new Uint32Array([6291456,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,23068672,6291456,6291456]),\n];\nvar blockIdxes = new Uint16Array([616,616,565,147,161,411,330,2,131,131,328,454,241,408,86,86,696,113,285,350,325,301,473,214,639,232,447,64,369,598,124,672,567,223,621,154,107,86,86,86,86,86,86,505,86,68,634,86,218,218,218,218,486,218,218,513,188,608,216,86,217,463,668,85,700,360,184,86,86,86,647,402,153,10,346,718,662,260,145,298,117,1,443,342,138,54,563,86,240,572,218,70,387,86,118,460,641,602,86,86,306,218,86,692,86,86,86,86,86,162,707,86,458,26,86,218,638,86,86,86,86,86,65,449,86,86,306,183,86,58,391,667,86,157,131,131,131,131,86,433,131,406,31,218,247,86,86,693,218,581,351,86,438,295,69,462,45,126,173,650,14,295,69,97,168,187,641,78,523,390,69,108,287,664,173,219,83,295,69,108,431,426,173,694,412,115,628,52,257,398,641,118,501,121,69,579,151,423,173,620,464,121,69,382,151,476,173,27,53,121,86,594,578,226,173,86,632,130,86,96,228,268,641,622,563,86,86,21,148,650,131,131,321,43,144,343,381,531,131,131,178,20,86,399,156,375,164,541,30,60,715,198,92,118,131,131,86,86,306,407,86,280,457,196,488,358,131,131,244,86,86,143,86,86,86,86,86,667,563,86,86,86,86,86,86,86,86,86,86,86,86,86,336,363,86,86,336,86,86,380,678,67,86,86,86,678,86,86,86,512,86,307,86,708,86,86,86,86,86,528,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,563,307,86,86,86,86,86,104,450,337,86,720,86,32,450,397,86,86,86,587,218,558,708,708,293,708,86,86,86,86,86,694,205,86,8,86,86,86,86,549,86,667,697,697,679,86,458,460,86,86,650,86,708,543,86,86,86,245,86,86,86,140,218,127,708,708,458,197,131,131,131,131,500,86,86,483,251,86,306,510,515,86,722,86,86,86,65,201,86,86,483,580,470,86,86,86,368,131,131,131,694,114,110,555,86,86,123,721,163,142,713,418,86,317,675,209,218,218,218,371,545,592,629,490,603,199,46,320,525,680,310,279,388,111,42,252,593,607,235,617,410,377,50,548,135,356,17,520,189,116,392,600,349,332,482,699,690,535,119,106,451,71,152,667,131,218,218,265,671,637,492,504,533,683,269,269,658,86,86,86,86,86,86,86,86,86,491,619,86,86,6,86,86,86,86,86,86,86,86,86,86,86,229,86,86,86,86,86,86,86,86,86,86,86,86,667,86,86,171,131,118,131,656,206,234,571,89,334,670,246,311,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,534,86,86,86,86,86,86,82,86,86,86,86,86,430,86,86,86,86,86,86,86,86,86,599,86,324,86,470,69,640,264,131,626,101,174,86,86,667,233,105,73,374,394,221,204,84,28,326,86,86,471,86,86,86,109,573,86,171,200,200,200,200,218,218,86,86,86,86,460,131,131,131,86,506,86,86,86,86,86,220,404,34,614,47,442,305,25,612,338,601,648,7,344,255,131,131,51,86,312,507,563,86,86,86,86,588,86,86,86,86,86,530,511,86,458,3,435,384,556,522,230,527,86,118,86,86,717,86,137,273,79,181,484,23,93,112,655,249,417,703,370,87,98,313,684,585,155,465,596,481,695,18,416,428,61,701,706,282,643,495,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,549,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,549,131,131,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,307,86,86,86,171,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,650,131,422,542,420,263,24,172,86,86,86,86,86,566,86,86,132,540,395,353,494,519,19,485,284,472,131,131,131,16,714,86,211,708,86,86,86,694,698,86,86,483,704,708,218,272,86,86,120,86,159,478,86,307,247,86,86,663,597,459,627,667,86,86,277,455,39,302,86,250,86,86,86,271,99,452,306,281,329,400,200,86,86,362,549,352,646,461,323,586,86,86,4,708,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,717,86,518,86,86,650,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,125,554,480,300,613,72,333,288,561,544,604,48,719,91,169,176,590,224,76,191,29,559,560,231,537,166,477,538,256,437,131,131,469,167,40,0,685,266,441,705,239,642,475,568,640,610,299,673,517,318,385,22,202,180,179,359,424,215,90,66,521,653,467,682,453,409,479,88,131,661,35,303,15,262,666,630,712,131,131,618,659,175,218,195,347,193,227,261,150,165,709,546,294,569,710,270,413,376,524,55,242,38,419,529,170,657,3,304,122,379,278,131,651,86,67,576,458,458,131,131,86,86,86,86,86,86,86,118,309,86,86,547,86,86,86,86,667,650,664,131,131,86,86,56,131,131,131,131,131,131,131,131,86,307,86,86,86,664,238,650,86,86,717,86,118,86,86,315,86,59,86,86,574,549,131,131,340,57,436,86,86,86,86,86,86,458,708,499,691,62,86,650,86,86,694,86,86,86,319,131,131,131,131,131,131,131,131,131,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,171,86,549,694,131,131,131,131,131,131,131,131,131,77,86,86,139,86,502,86,86,86,667,595,131,131,131,86,12,86,13,86,609,131,131,131,131,86,86,86,625,86,669,86,86,182,129,86,5,694,104,86,86,86,86,131,131,86,86,386,171,86,86,86,345,86,324,86,589,86,213,36,131,131,131,131,131,86,86,86,86,104,131,131,131,141,290,80,677,86,86,86,267,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,86,667,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,515,86,86,33,136,669,86,711,515,86,86,550,640,86,104,708,515,86,159,372,717,86,86,444,515,86,86,663,37,86,563,460,86,390,624,702,131,131,131,131,389,59,708,86,86,341,208,708,635,295,69,108,431,508,100,190,131,131,131,131,131,131,131,131,86,86,86,649,516,660,131,131,86,86,86,218,631,708,131,131,131,131,131,131,131,131,131,131,86,86,341,575,238,514,131,131,86,86,86,218,291,708,307,131,86,86,306,367,708,131,131,131,86,378,697,86,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,615,253,86,86,86,292,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,86,86,86,104,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,69,86,341,553,549,86,307,86,86,645,275,455,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,708,131,131,131,131,131,131,86,86,86,86,86,86,667,460,86,86,86,86,86,86,86,86,86,86,86,86,717,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,667,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,171,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,104,86,667,459,131,131,131,131,131,131,86,458,225,86,86,86,516,549,11,390,405,86,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,86,86,86,86,460,44,218,197,711,515,131,131,131,131,664,131,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,307,131,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,308,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,640,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,86,86,86,86,86,86,118,307,104,286,591,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,549,86,86,681,86,86,75,185,314,582,86,358,496,474,86,104,131,86,86,86,86,146,131,131,131,131,131,131,131,131,131,131,131,86,86,86,86,86,171,86,640,131,131,131,131,131,131,131,131,246,503,689,339,674,81,258,415,439,128,562,366,414,246,503,689,583,222,557,316,636,665,186,355,95,670,246,503,689,339,674,557,258,415,439,186,355,95,670,246,503,689,446,644,536,652,331,532,335,440,274,421,297,570,74,425,364,425,606,552,403,509,134,365,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,218,218,218,498,218,218,577,627,551,497,572,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,553,354,236,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,86,86,86,86,86,86,86,86,86,86,86,86,296,455,131,131,456,243,103,86,41,459,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,9,276,158,716,393,564,383,489,401,654,210,654,131,131,131,640,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,86,86,650,86,86,86,86,86,86,717,667,563,563,563,86,549,102,686,133,246,605,86,448,86,86,207,307,131,131,131,641,86,177,611,445,373,194,584,131,131,131,131,131,131,131,131,131,131,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,308,307,171,86,86,86,86,86,86,86,717,86,86,86,86,86,460,131,131,650,86,86,86,694,708,86,86,694,86,458,131,131,131,131,131,131,667,694,289,650,667,131,131,86,640,131,131,664,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,171,131,131,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,460,86,86,86,86,86,86,86,86,86,86,86,86,86,458,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,640,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,466,203,149,429,94,432,160,687,539,63,237,283,192,248,348,259,427,526,396,676,254,468,487,212,327,623,49,633,322,493,434,688,357,361,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131]);\nvar mappingStr = \"صلى الله عليه وسلمجل جلالهキロメートルrad∕s2エスクードキログラムキロワットグラムトンクルゼイロサンチームパーセントピアストルファラッドブッシェルヘクタールマンションミリバールレントゲン′′′′1⁄10viii(10)(11)(12)(13)(14)(15)(16)(17)(18)(19)(20)∫∫∫∫(오전)(오후)アパートアルファアンペアイニングエーカーカラットカロリーキュリーギルダークローネサイクルシリングバーレルフィートポイントマイクロミクロンメガトンリットルルーブル株式会社kcalm∕s2c∕kgاكبرمحمدصلعمرسولریال1⁄41⁄23⁄4 ̈́ྲཱྀླཱྀ ̈͂ ̓̀ ̓́ ̓͂ ̔̀ ̔́ ̔͂ ̈̀‵‵‵a/ca/sc/oc/utelfax1⁄71⁄91⁄32⁄31⁄52⁄53⁄54⁄51⁄65⁄61⁄83⁄85⁄87⁄8xii0⁄3∮∮∮(1)(2)(3)(4)(5)(6)(7)(8)(9)(a)(b)(c)(d)(e)(f)(g)(h)(i)(j)(k)(l)(m)(n)(o)(p)(q)(r)(s)(t)(u)(v)(w)(x)(y)(z)::====(ᄀ)(ᄂ)(ᄃ)(ᄅ)(ᄆ)(ᄇ)(ᄉ)(ᄋ)(ᄌ)(ᄎ)(ᄏ)(ᄐ)(ᄑ)(ᄒ)(가)(나)(다)(라)(마)(바)(사)(아)(자)(차)(카)(타)(파)(하)(주)(一)(二)(三)(四)(五)(六)(七)(八)(九)(十)(月)(火)(水)(木)(金)(土)(日)(株)(有)(社)(名)(特)(財)(祝)(労)(代)(呼)(学)(監)(企)(資)(協)(祭)(休)(自)(至)pte10月11月12月ergltdアールインチウォンオンスオームカイリガロンガンマギニーケースコルナコーポセンチダースノットハイツパーツピクルフランペニヒヘルツペンスページベータボルトポンドホールホーンマイルマッハマルクヤードヤールユアンルピー10点11点12点13点14点15点16点17点18点19点20点21点22点23点24点hpabardm2dm3khzmhzghzthzmm2cm2km2mm3cm3km3kpampagpalogmilmolppmv∕ma∕m10日11日12日13日14日15日16日17日18日19日20日21日22日23日24日25日26日27日28日29日30日31日galffifflשּׁשּׂ ٌّ ٍّ َّ ُّ ِّ ّٰـَّـُّـِّتجمتحجتحمتخمتمجتمحتمخجمححميحمىسحجسجحسجىسمحسمجسممصححصممشحمشجيشمخشممضحىضخمطمحطممطميعجمعممعمىغممغميغمىفخمقمحقمملحملحيلحىلججلخملمحمحجمحيمجحمجممخممجخهمجهممنحمنحىنجمنجىنمينمىيممبخيتجيتجىتخيتخىتميتمىجميجحىجمىسخىصحيشحيضحيلجيلمييحييجييميمميقمينحيعميكمينجحمخيلجمكممجحيحجيمجيفميبحيسخينجيصلےقلے𝅘𝅥𝅮𝅘𝅥𝅯𝅘𝅥𝅰𝅘𝅥𝅱𝅘𝅥𝅲𝆹𝅥𝅮𝆺𝅥𝅮𝆹𝅥𝅯𝆺𝅥𝅯〔s〕ppv〔本〕〔三〕〔二〕〔安〕〔点〕〔打〕〔盗〕〔勝〕〔敗〕 ̄ ́ ̧ssi̇ijl·ʼndžljnjdz ̆ ̇ ̊ ̨ ̃ ̋ ιեւاٴوٴۇٴيٴक़ख़ग़ज़ड़ढ़फ़य़ড়ঢ়য়ਲ਼ਸ਼ਖ਼ਗ਼ਜ਼ਫ਼ଡ଼ଢ଼ําໍາຫນຫມགྷཌྷདྷབྷཛྷཀྵཱཱིུྲྀླྀྒྷྜྷྡྷྦྷྫྷྐྵaʾἀιἁιἂιἃιἄιἅιἆιἇιἠιἡιἢιἣιἤιἥιἦιἧιὠιὡιὢιὣιὤιὥιὦιὧιὰιαιάιᾶι ͂ὴιηιήιῆιὼιωιώιῶι ̳!! ̅???!!?rs°c°fnosmtmivix⫝̸ ゙ ゚よりコト333435참고주의363738394042444546474849503月4月5月6月7月8月9月hgevギガデシドルナノピコビルペソホンリラレムdaauovpciu平成昭和大正明治naμakakbmbgbpfnfμfμgmgμlmldlklfmnmμmpsnsμsmsnvμvkvpwnwμwmwkwkωmωbqcccddbgyhainkkktlnlxphprsrsvwbstմնմեմիվնմխיִײַשׁשׂאַאָאּבּגּדּהּוּזּטּיּךּכּלּמּנּסּףּפּצּקּרּתּוֹבֿכֿפֿאלئائەئوئۇئۆئۈئېئىئجئحئمئيبجبمبىبيتىتيثجثمثىثيخحضجضمطحظمغجفجفحفىفيقحقىقيكاكجكحكخكلكىكينخنىنيهجهىهييىذٰرٰىٰئرئزئنبزبنترتزتنثرثزثنمانرنزننيريزئخئهبهتهصخنههٰثهسهشهطىطيعىعيغىغيسىسيشىشيصىصيضىضيشخشرسرصرضراً ًـًـّ ْـْلآلألإ𝅗𝅥0,1,2,3,4,5,6,7,8,9,wzhvsdwcmcmddjほかココàáâãäåæçèéêëìíîïðñòóôõöøùúûüýþāăąćĉċčďđēĕėęěĝğġģĥħĩīĭįĵķĺļľłńņňŋōŏőœŕŗřśŝşšţťŧũūŭůűųŵŷÿźżɓƃƅɔƈɖɗƌǝəɛƒɠɣɩɨƙɯɲɵơƣƥʀƨʃƭʈưʊʋƴƶʒƹƽǎǐǒǔǖǘǚǜǟǡǣǥǧǩǫǭǯǵƕƿǹǻǽǿȁȃȅȇȉȋȍȏȑȓȕȗșțȝȟƞȣȥȧȩȫȭȯȱȳⱥȼƚⱦɂƀʉʌɇɉɋɍɏɦɹɻʁʕͱͳʹͷ;ϳέίόύβγδεζθκλνξοπρστυφχψϊϋϗϙϛϝϟϡϣϥϧϩϫϭϯϸϻͻͼͽѐёђѓєѕіїјљњћќѝўџабвгдежзийклмнопрстуфхцчшщъыьэюяѡѣѥѧѩѫѭѯѱѳѵѷѹѻѽѿҁҋҍҏґғҕҗҙқҝҟҡңҥҧҩҫҭүұҳҵҷҹһҽҿӂӄӆӈӊӌӎӑӓӕӗәӛӝӟӡӣӥӧөӫӭӯӱӳӵӷӹӻӽӿԁԃԅԇԉԋԍԏԑԓԕԗԙԛԝԟԡԣԥԧԩԫԭԯաբգդզէըթժլծկհձղճյշոչպջռստրցփքօֆ་ⴧⴭნᏰᏱᏲᏳᏴᏵꙋɐɑᴂɜᴖᴗᴝᴥɒɕɟɡɥɪᵻʝɭᶅʟɱɰɳɴɸʂƫᴜʐʑḁḃḅḇḉḋḍḏḑḓḕḗḙḛḝḟḡḣḥḧḩḫḭḯḱḳḵḷḹḻḽḿṁṃṅṇṉṋṍṏṑṓṕṗṙṛṝṟṡṣṥṧṩṫṭṯṱṳṵṷṹṻṽṿẁẃẅẇẉẋẍẏẑẓẕạảấầẩẫậắằẳẵặẹẻẽếềểễệỉịọỏốồổỗộớờởỡợụủứừửữựỳỵỷỹỻỽỿἐἑἒἓἔἕἰἱἲἳἴἵἶἷὀὁὂὃὄὅὑὓὕὗᾰᾱὲΐῐῑὶΰῠῡὺῥ`ὸ‐+−∑〈〉ⰰⰱⰲⰳⰴⰵⰶⰷⰸⰹⰺⰻⰼⰽⰾⰿⱀⱁⱂⱃⱄⱅⱆⱇⱈⱉⱊⱋⱌⱍⱎⱏⱐⱑⱒⱓⱔⱕⱖⱗⱘⱙⱚⱛⱜⱝⱞⱡɫᵽɽⱨⱪⱬⱳⱶȿɀⲁⲃⲅⲇⲉⲋⲍⲏⲑⲓⲕⲗⲙⲛⲝⲟⲡⲣⲥⲧⲩⲫⲭⲯⲱⲳⲵⲷⲹⲻⲽⲿⳁⳃⳅⳇⳉⳋⳍⳏⳑⳓⳕⳗⳙⳛⳝⳟⳡⳣⳬⳮⳳⵡ母龟丨丶丿乙亅亠人儿入冂冖冫几凵刀力勹匕匚匸卜卩厂厶又口囗士夂夊夕女子宀寸小尢尸屮山巛工己巾干幺广廴廾弋弓彐彡彳心戈戶手支攴文斗斤方无曰欠止歹殳毋比毛氏气爪父爻爿片牙牛犬玄玉瓜瓦甘生用田疋疒癶白皮皿目矛矢石示禸禾穴立竹米糸缶网羊羽老而耒耳聿肉臣臼舌舛舟艮色艸虍虫血行衣襾見角言谷豆豕豸貝赤走足身車辛辰辵邑酉釆里長門阜隶隹雨靑非面革韋韭音頁風飛食首香馬骨高髟鬥鬯鬲鬼魚鳥鹵鹿麥麻黃黍黑黹黽鼎鼓鼠鼻齊齒龍龜龠.〒卄卅ᄁᆪᆬᆭᄄᆰᆱᆲᆳᆴᆵᄚᄈᄡᄊ짜ᅢᅣᅤᅥᅦᅧᅨᅩᅪᅫᅬᅭᅮᅯᅰᅱᅲᅳᅴᅵᄔᄕᇇᇈᇌᇎᇓᇗᇙᄜᇝᇟᄝᄞᄠᄢᄣᄧᄩᄫᄬᄭᄮᄯᄲᄶᅀᅇᅌᇱᇲᅗᅘᅙᆄᆅᆈᆑᆒᆔᆞᆡ上中下甲丙丁天地問幼箏우秘男適優印注項写左右医宗夜テヌモヨヰヱヲꙁꙃꙅꙇꙉꙍꙏꙑꙓꙕꙗꙙꙛꙝꙟꙡꙣꙥꙧꙩꙫꙭꚁꚃꚅꚇꚉꚋꚍꚏꚑꚓꚕꚗꚙꚛꜣꜥꜧꜩꜫꜭꜯꜳꜵꜷꜹꜻꜽꜿꝁꝃꝅꝇꝉꝋꝍꝏꝑꝓꝕꝗꝙꝛꝝꝟꝡꝣꝥꝧꝩꝫꝭꝯꝺꝼᵹꝿꞁꞃꞅꞇꞌꞑꞓꞗꞙꞛꞝꞟꞡꞣꞥꞧꞩɬʞʇꭓꞵꞷꬷꭒᎠᎡᎢᎣᎤᎥᎦᎧᎨᎩᎪᎫᎬᎭᎮᎯᎰᎱᎲᎳᎴᎵᎶᎷᎸᎹᎺᎻᎼᎽᎾᎿᏀᏁᏂᏃᏄᏅᏆᏇᏈᏉᏊᏋᏌᏍᏎᏏᏐᏑᏒᏓᏔᏕᏖᏗᏘᏙᏚᏛᏜᏝᏞᏟᏠᏡᏢᏣᏤᏥᏦᏧᏨᏩᏪᏫᏬᏭᏮᏯ豈更賈滑串句契喇奈懶癩羅蘿螺裸邏樂洛烙珞落酪駱亂卵欄爛蘭鸞嵐濫藍襤拉臘蠟廊朗浪狼郎來冷勞擄櫓爐盧蘆虜路露魯鷺碌祿綠菉錄論壟弄籠聾牢磊賂雷壘屢樓淚漏累縷陋勒肋凜凌稜綾菱陵讀拏諾丹寧怒率異北磻便復不泌數索參塞省葉說殺沈拾若掠略亮兩凉梁糧良諒量勵呂廬旅濾礪閭驪麗黎曆歷轢年憐戀撚漣煉璉秊練聯輦蓮連鍊列劣咽烈裂廉念捻殮簾獵令囹嶺怜玲瑩羚聆鈴零靈領例禮醴隸惡了僚寮尿料燎療蓼遼暈阮劉杻柳流溜琉留硫紐類戮陸倫崙淪輪律慄栗隆利吏履易李梨泥理痢罹裏裡離匿溺吝燐璘藺隣鱗麟林淋臨笠粒狀炙識什茶刺切度拓糖宅洞暴輻降廓兀嗀塚晴凞猪益礼神祥福靖精蘒諸逸都飯飼館鶴郞隷侮僧免勉勤卑喝嘆器塀墨層悔慨憎懲敏既暑梅海渚漢煮爫琢碑祉祈祐祖禍禎穀突節縉繁署者臭艹著褐視謁謹賓贈辶難響頻恵𤋮舘並况全侀充冀勇勺啕喙嗢墳奄奔婢嬨廒廙彩徭惘慎愈慠戴揄搜摒敖望杖滛滋瀞瞧爵犯瑱甆画瘝瘟盛直睊着磌窱类絛缾荒華蝹襁覆調請諭變輸遲醙鉶陼韛頋鬒𢡊𢡄𣏕㮝䀘䀹𥉉𥳐𧻓齃龎עםٱٻپڀٺٿٹڤڦڄڃچڇڍڌڎڈژڑکگڳڱںڻۀہھۓڭۋۅۉ、〖〗—–_{}【】《》「」『』[]#&*-<>\\\\$%@ءؤة\\\"'^|~⦅⦆・ゥャ¢£¬¦¥₩│←↑→↓■○𐐨𐐩𐐪𐐫𐐬𐐭𐐮𐐯𐐰𐐱𐐲𐐳𐐴𐐵𐐶𐐷𐐸𐐹𐐺𐐻𐐼𐐽𐐾𐐿𐑀𐑁𐑂𐑃𐑄𐑅𐑆𐑇𐑈𐑉𐑊𐑋𐑌𐑍𐑎𐑏𐓘𐓙𐓚𐓛𐓜𐓝𐓞𐓟𐓠𐓡𐓢𐓣𐓤𐓥𐓦𐓧𐓨𐓩𐓪𐓫𐓬𐓭𐓮𐓯𐓰𐓱𐓲𐓳𐓴𐓵𐓶𐓷𐓸𐓹𐓺𐓻𐳀𐳁𐳂𐳃𐳄𐳅𐳆𐳇𐳈𐳉𐳊𐳋𐳌𐳍𐳎𐳏𐳐𐳑𐳒𐳓𐳔𐳕𐳖𐳗𐳘𐳙𐳚𐳛𐳜𐳝𐳞𐳟𐳠𐳡𐳢𐳣𐳤𐳥𐳦𐳧𐳨𐳩𐳪𐳫𐳬𐳭𐳮𐳯𐳰𐳱𐳲𑣀𑣁𑣂𑣃𑣄𑣅𑣆𑣇𑣈𑣉𑣊𑣋𑣌𑣍𑣎𑣏𑣐𑣑𑣒𑣓𑣔𑣕𑣖𑣗𑣘𑣙𑣚𑣛𑣜𑣝𑣞𑣟ıȷ∇∂𞤢𞤣𞤤𞤥𞤦𞤧𞤨𞤩𞤪𞤫𞤬𞤭𞤮𞤯𞤰𞤱𞤲𞤳𞤴𞤵𞤶𞤷𞤸𞤹𞤺𞤻𞤼𞤽𞤾𞤿𞥀𞥁𞥂𞥃ٮڡٯ字双多解交映無前後再新初終販声吹演投捕遊指禁空合満申割営配得可丽丸乁𠄢你侻倂偺備像㒞𠘺兔兤具𠔜㒹內𠕋冗冤仌冬𩇟刃㓟刻剆剷㔕包匆卉博即卽卿𠨬灰及叟𠭣叫叱吆咞吸呈周咢哶唐啓啣善喫喳嗂圖圗噑噴壮城埴堍型堲報墬𡓤売壷夆夢奢𡚨𡛪姬娛娧姘婦㛮嬈嬾𡧈寃寘寳𡬘寿将㞁屠峀岍𡷤嵃𡷦嵮嵫嵼巡巢㠯巽帨帽幩㡢𢆃㡼庰庳庶𪎒𢌱舁弢㣇𣊸𦇚形彫㣣徚忍志忹悁㤺㤜𢛔惇慈慌慺憲憤憯懞戛扝抱拔捐𢬌挽拼捨掃揤𢯱搢揅掩㨮摩摾撝摷㩬敬𣀊旣書晉㬙㬈㫤冒冕最暜肭䏙朡杞杓𣏃㭉柺枅桒𣑭梎栟椔楂榣槪檨𣚣櫛㰘次𣢧歔㱎歲殟殻𣪍𡴋𣫺汎𣲼沿泍汧洖派浩浸涅𣴞洴港湮㴳滇𣻑淹潮𣽞𣾎濆瀹瀛㶖灊災灷炭𠔥煅𤉣熜爨牐𤘈犀犕𤜵𤠔獺王㺬玥㺸瑇瑜璅瓊㼛甤𤰶甾𤲒𢆟瘐𤾡𤾸𥁄㿼䀈𥃳𥃲𥄙𥄳眞真瞋䁆䂖𥐝硎䃣𥘦𥚚𥛅秫䄯穊穏𥥼𥪧䈂𥮫篆築䈧𥲀糒䊠糨糣紀𥾆絣䌁緇縂繅䌴𦈨𦉇䍙𦋙罺𦌾羕翺𦓚𦔣聠𦖨聰𣍟䏕育脃䐋脾媵𦞧𦞵𣎓𣎜舄辞䑫芑芋芝劳花芳芽苦𦬼茝荣莭茣莽菧荓菊菌菜𦰶𦵫𦳕䔫蓱蓳蔖𧏊蕤𦼬䕝䕡𦾱𧃒䕫虐虧虩蚩蚈蜎蛢蜨蝫螆蟡蠁䗹衠𧙧裗裞䘵裺㒻𧢮𧥦䚾䛇誠𧲨貫賁贛起𧼯𠠄跋趼跰𠣞軔𨗒𨗭邔郱鄑𨜮鄛鈸鋗鋘鉼鏹鐕𨯺開䦕閷𨵷䧦雃嶲霣𩅅𩈚䩮䩶韠𩐊䪲𩒖頩𩖶飢䬳餩馧駂駾䯎𩬰鱀鳽䳎䳭鵧𪃎䳸𪄅𪈎𪊑䵖黾鼅鼏鼖𪘀\";\n\nfunction mapChar(codePoint) {\n  if (codePoint >= 0x30000) {\n    // High planes are special cased.\n    if (codePoint >= 0xE0100 && codePoint <= 0xE01EF)\n      return 18874368;\n    return 0;\n  }\n  return blocks[blockIdxes[codePoint >> 4]][codePoint & 15];\n}\n\nreturn {\n  mapStr: mappingStr,\n  mapChar: mapChar\n};\n}));\n","/*\r\n\tISC License\r\n\r\n\tCopyright (c) 2019, Pierre-Louis Despaigne\r\n\r\n\tPermission to use, copy, modify, and/or distribute this software for any\r\n\tpurpose with or without fee is hereby granted, provided that the above\r\n\tcopyright notice and this permission notice appear in all copies.\r\n\r\n\tTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\r\n\tWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\r\n\tMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\r\n\tANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\r\n\tWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\r\n\tACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\r\n\tOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\r\n*/\r\n\r\nconst multiC = require('multicodec');\r\n\r\nconst { hexStringToBuffer, profiles } = require('./profiles');\r\nconst { cidV0ToV1Base32 } = require('./helpers');\r\n\r\nmodule.exports = {\r\n\r\n\t//export some helpers functions\r\n\thelpers: {\r\n\t\tcidV0ToV1Base32,\r\n\t},\r\n\r\n\t/**\r\n\t* Decode a Content Hash.\r\n\t* @param {string} hash an hex string containing a content hash\r\n\t* @return {string} the decoded content\r\n\t*/\r\n\tdecode: function (contentHash) {\r\n\t\tconst buffer = hexStringToBuffer(contentHash);\r\n\t\tconst codec = multiC.getCodec(buffer);\r\n\t\tconst value = multiC.rmPrefix(buffer);\r\n\t\tlet profile = profiles[codec];\r\n\t\tif (!profile) profile = profiles['default'];\r\n\t\treturn profile.decode(value);\r\n\t},\r\n\r\n\t/**\r\n\t* Encode an IPFS address into a content hash\r\n\t* @param {string} ipfsHash string containing an IPFS address\r\n\t* @return {string} the resulting content hash\r\n\t*/\r\n\tfromIpfs: function (ipfsHash) {\r\n\t\treturn this.encode('ipfs-ns', ipfsHash);\r\n\t},\r\n\r\n\t/**\r\n\t* Encode a Swarm address into a content hash\r\n\t* @param {string} swarmHash string containing a Swarm address\r\n\t* @return {string} the resulting content hash\r\n\t*/\r\n\tfromSwarm: function (swarmHash) {\r\n\t\treturn this.encode('swarm-ns', swarmHash);\r\n\t},\r\n\r\n\t/**\r\n\t* General purpose encoding function\r\n  * @param {string} codec \r\n  * @param {string} value \r\n  */\r\n\tencode: function (codec, value) {\r\n\t\tlet profile = profiles[codec];\r\n\t\tif (!profile) profile = profiles['default'];\r\n\t\tconst encodedValue = profile.encode(value);\r\n\t\treturn multiC.addPrefix(codec, encodedValue).toString('hex');\r\n\t},\r\n\r\n\t/**\r\n\t* Extract the codec of a content hash\r\n\t* @param {string} hash hex string containing a content hash\r\n\t* @return {string} the extracted codec\r\n\t*/\r\n\tgetCodec: function (hash) {\r\n\t\tlet buffer = hexStringToBuffer(hash);\r\n\t\treturn multiC.getCodec(buffer);\r\n\t},\r\n}\r\n","/**\n * Implementation of the multicodec specification.\n *\n * @module multicodec\n * @example\n * const multicodec = require('multicodec')\n *\n * const prefixedProtobuf = multicodec.addPrefix('protobuf', protobufBuffer)\n * // prefixedProtobuf 0x50...\n *\n */\n'use strict'\n\nconst varint = require('varint')\nconst intTable = require('./int-table')\nconst codecNameToCodeVarint = require('./varint-table')\nconst util = require('./util')\n\nexports = module.exports\n\n/**\n * Prefix a buffer with a multicodec-packed.\n *\n * @param {string|number} multicodecStrOrCode\n * @param {Buffer} data\n * @returns {Buffer}\n */\nexports.addPrefix = (multicodecStrOrCode, data) => {\n  let prefix\n\n  if (Buffer.isBuffer(multicodecStrOrCode)) {\n    prefix = util.varintBufferEncode(multicodecStrOrCode)\n  } else {\n    if (codecNameToCodeVarint[multicodecStrOrCode]) {\n      prefix = codecNameToCodeVarint[multicodecStrOrCode]\n    } else {\n      throw new Error('multicodec not recognized')\n    }\n  }\n  return Buffer.concat([prefix, data])\n}\n\n/**\n * Decapsulate the multicodec-packed prefix from the data.\n *\n * @param {Buffer} data\n * @returns {Buffer}\n */\nexports.rmPrefix = (data) => {\n  varint.decode(data)\n  return data.slice(varint.decode.bytes)\n}\n\n/**\n * Get the codec of the prefixed data.\n * @param {Buffer} prefixedData\n * @returns {string}\n */\nexports.getCodec = (prefixedData) => {\n  const code = varint.decode(prefixedData)\n  const codecName = intTable.get(code)\n  if (codecName === undefined) {\n    throw new Error(`Code ${code} not found`)\n  }\n  return codecName\n}\n\n/**\n * Get the name of the codec.\n * @param {number} codec\n * @returns {string}\n */\nexports.getName = (codec) => {\n  return intTable.get(codec)\n}\n\n/**\n * Get the code of the codec\n * @param {string} name\n * @returns {number}\n */\nexports.getNumber = (name) => {\n  const code = codecNameToCodeVarint[name]\n  if (code === undefined) {\n    throw new Error('Codec `' + name + '` not found')\n  }\n  return util.varintBufferDecode(code)[0]\n}\n\n/**\n * Get the code of the prefixed data.\n * @param {Buffer} prefixedData\n * @returns {number}\n */\nexports.getCode = (prefixedData) => {\n  return varint.decode(prefixedData)\n}\n\n/**\n * Get the code as varint of a codec name.\n * @param {string} codecName\n * @returns {Buffer}\n */\nexports.getCodeVarint = (codecName) => {\n  const code = codecNameToCodeVarint[codecName]\n  if (code === undefined) {\n    throw new Error('Codec `' + codecName + '` not found')\n  }\n  return code\n}\n\n/**\n * Get the varint of a code.\n * @param {Number} code\n * @returns {Array.<number>}\n */\nexports.getVarint = (code) => {\n  return varint.encode(code)\n}\n\n// Make the constants top-level constants\nconst constants = require('./constants')\nObject.assign(exports, constants)\n\n// Human friendly names for printing, e.g. in error messages\nexports.print = require('./print')\n","'use strict'\nconst baseTable = require('./base-table.json')\n\n// map for hexString -> codecName\nconst nameTable = new Map()\n\nfor (const encodingName in baseTable) {\n  const code = baseTable[encodingName]\n  nameTable.set(code, encodingName)\n}\n\nmodule.exports = Object.freeze(nameTable)\n","'use strict'\n\nconst baseTable = require('./base-table.json')\nconst varintEncode = require('./util').varintEncode\n\n// map for codecName -> codeVarintBuffer\nconst varintTable = {}\n\nfor (const encodingName in baseTable) {\n  const code = baseTable[encodingName]\n  varintTable[encodingName] = varintEncode(code)\n}\n\nmodule.exports = Object.freeze(varintTable)\n","'use strict'\n\nconst table = require('./base-table.json')\n\n// map for codecConstant -> code\nconst constants = {}\n\nfor (const [name, code] of Object.entries(table)) {\n  constants[name.toUpperCase().replace(/-/g, '_')] = code\n}\n\nmodule.exports = Object.freeze(constants)\n","'use strict'\n\nconst table = require('./base-table.json')\n\n// map for code -> print friendly name\nconst tableByCode = {}\n\nfor (const [name, code] of Object.entries(table)) {\n  if (tableByCode[code] === undefined) tableByCode[code] = name\n}\n\nmodule.exports = Object.freeze(tableByCode)\n","/*\r\n\tISC License\r\n\r\n\tCopyright (c) 2019, Pierre-Louis Despaigne\r\n\r\n\tPermission to use, copy, modify, and/or distribute this software for any\r\n\tpurpose with or without fee is hereby granted, provided that the above\r\n\tcopyright notice and this permission notice appear in all copies.\r\n\r\n\tTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\r\n\tWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\r\n\tMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\r\n\tANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\r\n\tWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\r\n\tACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\r\n\tOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\r\n*/\r\n\r\nconst CID = require('cids');\r\nconst multiH = require('multihashes');\r\n\r\n/**\r\n * Convert an hexadecimal string to a Buffer, the string can start with or without '0x'\r\n * @param {string} hex an hexadecimal value\r\n * @return {Buffer} the resulting Buffer\r\n */\r\nconst hexStringToBuffer = (hex) => {\r\n\tlet prefix = hex.slice(0, 2);\r\n\tlet value = hex.slice(2);\r\n\tlet res = '';\r\n\tif (prefix === '0x') res = value;\r\n\telse res = hex;\r\n\treturn multiH.fromHexString(res);\r\n}\r\n\r\n/**\r\n* list of known encoding,\r\n* encoding should be a function that takes a `string` input,\r\n* and return a `Buffer` result\r\n*/\r\nconst encodes = {\r\n  /**\r\n  * @param {string} value\r\n  * @return {Buffer}\r\n  */\r\n  swarm: (value) => {\r\n    const multihash = multiH.encode(hexStringToBuffer(value), 'keccak-256');\r\n\t\treturn new CID(1, 'swarm-manifest', multihash).buffer;\r\n  },\r\n  /**\r\n  * @param {string} value\r\n  * @return {Buffer}\r\n  */\r\n  ipfs: (value) => {\r\n    const multihash = multiH.fromB58String(value);\r\n    return new CID(1, 'dag-pb', multihash).buffer;\r\n  },\r\n  /**\r\n  * @param {string} value\r\n  * @return {Buffer}\r\n  */\r\n  utf8: (value) => {\r\n    return Buffer.from(value, 'utf8');\r\n  },\r\n};\r\n\r\n/** \r\n* list of known decoding,\r\n* decoding should be a function that takes a `Buffer` input,\r\n* and return a `string` result\r\n*/\r\nconst decodes = {\r\n  /**\r\n  * @param {Buffer} value \r\n  */\r\n  hexMultiHash: (value) => {\r\n    const cid = new CID(value);\r\n    return multiH.decode(cid.multihash).digest.toString('hex');\r\n  },\r\n  /**\r\n  * @param {Buffer} value \r\n  */\r\n  b58MultiHash: (value) => {\r\n    const cid = new CID(value);\r\n    return multiH.toB58String(cid.multihash);\r\n  },\r\n  /**\r\n  * @param {Buffer} value \r\n  */\r\n  utf8: (value) => {\r\n    return value.toString('utf8');\r\n  },\r\n};\r\n\r\n/**\r\n* list of known encoding/decoding for a given codec,\r\n* `encode` should be chosen among the `encodes` functions\r\n* `decode` should be chosen among the `decodes` functions\r\n*/\r\nconst profiles = {\r\n  'swarm-ns': {\r\n    encode: encodes.swarm,\r\n    decode: decodes.hexMultiHash,\r\n  },\r\n  'ipfs-ns': {\r\n    encode: encodes.ipfs,\r\n    decode: decodes.b58MultiHash,\r\n  },\r\n  'ipns-ns': {\r\n    encode: encodes.ipfs,\r\n    decode: decodes.b58MultiHash,\r\n  },\r\n  'default': {\r\n    encode: encodes.utf8,\r\n    decode: decodes.utf8,\r\n  },\r\n};\r\n\r\nexports.hexStringToBuffer = hexStringToBuffer;\r\nexports.profiles = profiles;","/**\n * Implementation of the [multibase](https://github.com/multiformats/multibase) specification.\n * @module Multibase\n */\n'use strict'\n\nconst { Buffer } = require('buffer')\nconst constants = require('./constants')\n\nexports = module.exports = multibase\nexports.encode = encode\nexports.decode = decode\nexports.isEncoded = isEncoded\nexports.names = Object.freeze(Object.keys(constants.names))\nexports.codes = Object.freeze(Object.keys(constants.codes))\n\n/**\n * Create a new buffer with the multibase varint+code.\n *\n * @param {string|number} nameOrCode - The multibase name or code number.\n * @param {Buffer} buf - The data to be prefixed with multibase.\n * @memberof Multibase\n * @returns {Buffer}\n */\nfunction multibase (nameOrCode, buf) {\n  if (!buf) {\n    throw new Error('requires an encoded buffer')\n  }\n  const base = getBase(nameOrCode)\n  const codeBuf = Buffer.from(base.code)\n\n  const name = base.name\n  validEncode(name, buf)\n  return Buffer.concat([codeBuf, buf])\n}\n\n/**\n * Encode data with the specified base and add the multibase prefix.\n *\n * @param {string|number} nameOrCode - The multibase name or code number.\n * @param {Buffer} buf - The data to be encoded.\n * @returns {Buffer}\n * @memberof Multibase\n */\nfunction encode (nameOrCode, buf) {\n  const base = getBase(nameOrCode)\n  const name = base.name\n\n  return multibase(name, Buffer.from(base.encode(buf)))\n}\n\n/**\n * Takes a buffer or string encoded with multibase header, decodes it and\n * returns the decoded buffer\n *\n * @param {Buffer|string} bufOrString\n * @returns {Buffer}\n * @memberof Multibase\n *\n */\nfunction decode (bufOrString) {\n  if (Buffer.isBuffer(bufOrString)) {\n    bufOrString = bufOrString.toString()\n  }\n\n  const code = bufOrString.substring(0, 1)\n  bufOrString = bufOrString.substring(1, bufOrString.length)\n\n  if (typeof bufOrString === 'string') {\n    bufOrString = Buffer.from(bufOrString)\n  }\n\n  const base = getBase(code)\n  return Buffer.from(base.decode(bufOrString.toString()))\n}\n\n/**\n * Is the given data multibase encoded?\n *\n * @param {Buffer|string} bufOrString\n * @returns {boolean}\n * @memberof Multibase\n */\nfunction isEncoded (bufOrString) {\n  if (Buffer.isBuffer(bufOrString)) {\n    bufOrString = bufOrString.toString()\n  }\n\n  // Ensure bufOrString is a string\n  if (Object.prototype.toString.call(bufOrString) !== '[object String]') {\n    return false\n  }\n\n  const code = bufOrString.substring(0, 1)\n  try {\n    const base = getBase(code)\n    return base.name\n  } catch (err) {\n    return false\n  }\n}\n\n/**\n * @param {string} name\n * @param {Buffer} buf\n * @private\n * @returns {undefined}\n */\nfunction validEncode (name, buf) {\n  const base = getBase(name)\n  base.decode(buf.toString())\n}\n\nfunction getBase (nameOrCode) {\n  let base\n\n  if (constants.names[nameOrCode]) {\n    base = constants.names[nameOrCode]\n  } else if (constants.codes[nameOrCode]) {\n    base = constants.codes[nameOrCode]\n  } else {\n    throw new Error('Unsupported encoding')\n  }\n\n  if (!base.isImplemented()) {\n    throw new Error('Base ' + nameOrCode + ' is not implemented yet')\n  }\n\n  return base\n}\n","'use strict'\n\nconst Base = require('./base.js')\nconst baseX = require('base-x')\nconst base16 = require('./base16')\nconst base32 = require('./base32')\nconst base64 = require('./base64')\n\n// name, code, implementation, alphabet\nconst constants = [\n  ['base1', '1', '', '1'],\n  ['base2', '0', baseX, '01'],\n  ['base8', '7', baseX, '01234567'],\n  ['base10', '9', baseX, '0123456789'],\n  ['base16', 'f', base16, '0123456789abcdef'],\n  ['base32', 'b', base32, 'abcdefghijklmnopqrstuvwxyz234567'],\n  ['base32pad', 'c', base32, 'abcdefghijklmnopqrstuvwxyz234567='],\n  ['base32hex', 'v', base32, '0123456789abcdefghijklmnopqrstuv'],\n  ['base32hexpad', 't', base32, '0123456789abcdefghijklmnopqrstuv='],\n  ['base32z', 'h', base32, 'ybndrfg8ejkmcpqxot1uwisza345h769'],\n  ['base58flickr', 'Z', baseX, '123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ'],\n  ['base58btc', 'z', baseX, '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'],\n  ['base64', 'm', base64, 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'],\n  ['base64pad', 'M', base64, 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/='],\n  ['base64url', 'u', base64, 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_'],\n  ['base64urlpad', 'U', base64, 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=']\n]\n\nconst names = constants.reduce((prev, tupple) => {\n  prev[tupple[0]] = new Base(tupple[0], tupple[1], tupple[2], tupple[3])\n  return prev\n}, {})\n\nconst codes = constants.reduce((prev, tupple) => {\n  prev[tupple[1]] = names[tupple[0]]\n  return prev\n}, {})\n\nmodule.exports = {\n  names: names,\n  codes: codes\n}\n","'use strict'\n\nclass Base {\n  constructor (name, code, implementation, alphabet) {\n    this.name = name\n    this.code = code\n    this.alphabet = alphabet\n    if (implementation && alphabet) {\n      this.engine = implementation(alphabet)\n    }\n  }\n\n  encode (stringOrBuffer) {\n    return this.engine.encode(stringOrBuffer)\n  }\n\n  decode (stringOrBuffer) {\n    return this.engine.decode(stringOrBuffer)\n  }\n\n  isImplemented () {\n    return this.engine\n  }\n}\n\nmodule.exports = Base\n","'use strict'\nconst { Buffer } = require('buffer')\n\nmodule.exports = function base16 (alphabet) {\n  return {\n    encode (input) {\n      if (typeof input === 'string') {\n        return Buffer.from(input).toString('hex')\n      }\n      return input.toString('hex')\n    },\n    decode (input) {\n      for (const char of input) {\n        if (alphabet.indexOf(char) < 0) {\n          throw new Error('invalid base16 character')\n        }\n      }\n      return Buffer.from(input, 'hex')\n    }\n  }\n}\n","'use strict'\n\nfunction decode (input, alphabet) {\n  input = input.replace(new RegExp('=', 'g'), '')\n  const length = input.length\n\n  let bits = 0\n  let value = 0\n\n  let index = 0\n  const output = new Uint8Array((length * 5 / 8) | 0)\n\n  for (let i = 0; i < length; i++) {\n    value = (value << 5) | alphabet.indexOf(input[i])\n    bits += 5\n\n    if (bits >= 8) {\n      output[index++] = (value >>> (bits - 8)) & 255\n      bits -= 8\n    }\n  }\n\n  return output.buffer\n}\n\nfunction encode (buffer, alphabet) {\n  const length = buffer.byteLength\n  const view = new Uint8Array(buffer)\n  const padding = alphabet.indexOf('=') === alphabet.length - 1\n\n  if (padding) {\n    alphabet = alphabet.substring(0, alphabet.length - 1)\n  }\n\n  let bits = 0\n  let value = 0\n  let output = ''\n\n  for (let i = 0; i < length; i++) {\n    value = (value << 8) | view[i]\n    bits += 8\n\n    while (bits >= 5) {\n      output += alphabet[(value >>> (bits - 5)) & 31]\n      bits -= 5\n    }\n  }\n\n  if (bits > 0) {\n    output += alphabet[(value << (5 - bits)) & 31]\n  }\n\n  if (padding) {\n    while ((output.length % 8) !== 0) {\n      output += '='\n    }\n  }\n\n  return output\n}\n\nmodule.exports = function base32 (alphabet) {\n  return {\n    encode (input) {\n      if (typeof input === 'string') {\n        return encode(Uint8Array.from(input), alphabet)\n      }\n\n      return encode(input, alphabet)\n    },\n    decode (input) {\n      for (const char of input) {\n        if (alphabet.indexOf(char) < 0) {\n          throw new Error('invalid base32 character')\n        }\n      }\n\n      return decode(input, alphabet)\n    }\n  }\n}\n","'use strict'\nconst { Buffer } = require('buffer')\n\nmodule.exports = function base64 (alphabet) {\n  // The alphabet is only used to know:\n  //   1. If padding is enabled (must contain '=')\n  //   2. If the output must be url-safe (must contain '-' and '_')\n  //   3. If the input of the output function is valid\n  // The alphabets from RFC 4648 are always used.\n  const padding = alphabet.indexOf('=') > -1\n  const url = alphabet.indexOf('-') > -1 && alphabet.indexOf('_') > -1\n\n  return {\n    encode (input) {\n      let output = ''\n\n      if (typeof input === 'string') {\n        output = Buffer.from(input).toString('base64')\n      } else {\n        output = input.toString('base64')\n      }\n\n      if (url) {\n        output = output.replace(/\\+/g, '-').replace(/\\//g, '_')\n      }\n\n      const pad = output.indexOf('=')\n      if (pad > 0 && !padding) {\n        output = output.substring(0, pad)\n      }\n\n      return output\n    },\n    decode (input) {\n      for (const char of input) {\n        if (alphabet.indexOf(char) < 0) {\n          throw new Error('invalid base64 character')\n        }\n      }\n\n      return Buffer.from(input, 'base64')\n    }\n  }\n}\n","/* eslint quote-props: off */\n/* eslint key-spacing: off */\n'use strict'\n\nexports.names = Object.freeze({\n  'identity':   0x0,\n  'sha1':       0x11,\n  'sha2-256':   0x12,\n  'sha2-512':   0x13,\n  'dbl-sha2-256': 0x56,\n  'sha3-224':   0x17,\n  'sha3-256':   0x16,\n  'sha3-384':   0x15,\n  'sha3-512':   0x14,\n  'shake-128':  0x18,\n  'shake-256':  0x19,\n  'keccak-224': 0x1A,\n  'keccak-256': 0x1B,\n  'keccak-384': 0x1C,\n  'keccak-512': 0x1D,\n  'murmur3-128': 0x22,\n  'murmur3-32':  0x23,\n  'md4':         0xd4,\n  'md5':         0xd5,\n  'blake2b-8':   0xb201,\n  'blake2b-16':  0xb202,\n  'blake2b-24':  0xb203,\n  'blake2b-32':  0xb204,\n  'blake2b-40':  0xb205,\n  'blake2b-48':  0xb206,\n  'blake2b-56':  0xb207,\n  'blake2b-64':  0xb208,\n  'blake2b-72':  0xb209,\n  'blake2b-80':  0xb20a,\n  'blake2b-88':  0xb20b,\n  'blake2b-96':  0xb20c,\n  'blake2b-104': 0xb20d,\n  'blake2b-112': 0xb20e,\n  'blake2b-120': 0xb20f,\n  'blake2b-128': 0xb210,\n  'blake2b-136': 0xb211,\n  'blake2b-144': 0xb212,\n  'blake2b-152': 0xb213,\n  'blake2b-160': 0xb214,\n  'blake2b-168': 0xb215,\n  'blake2b-176': 0xb216,\n  'blake2b-184': 0xb217,\n  'blake2b-192': 0xb218,\n  'blake2b-200': 0xb219,\n  'blake2b-208': 0xb21a,\n  'blake2b-216': 0xb21b,\n  'blake2b-224': 0xb21c,\n  'blake2b-232': 0xb21d,\n  'blake2b-240': 0xb21e,\n  'blake2b-248': 0xb21f,\n  'blake2b-256': 0xb220,\n  'blake2b-264': 0xb221,\n  'blake2b-272': 0xb222,\n  'blake2b-280': 0xb223,\n  'blake2b-288': 0xb224,\n  'blake2b-296': 0xb225,\n  'blake2b-304': 0xb226,\n  'blake2b-312': 0xb227,\n  'blake2b-320': 0xb228,\n  'blake2b-328': 0xb229,\n  'blake2b-336': 0xb22a,\n  'blake2b-344': 0xb22b,\n  'blake2b-352': 0xb22c,\n  'blake2b-360': 0xb22d,\n  'blake2b-368': 0xb22e,\n  'blake2b-376': 0xb22f,\n  'blake2b-384': 0xb230,\n  'blake2b-392': 0xb231,\n  'blake2b-400': 0xb232,\n  'blake2b-408': 0xb233,\n  'blake2b-416': 0xb234,\n  'blake2b-424': 0xb235,\n  'blake2b-432': 0xb236,\n  'blake2b-440': 0xb237,\n  'blake2b-448': 0xb238,\n  'blake2b-456': 0xb239,\n  'blake2b-464': 0xb23a,\n  'blake2b-472': 0xb23b,\n  'blake2b-480': 0xb23c,\n  'blake2b-488': 0xb23d,\n  'blake2b-496': 0xb23e,\n  'blake2b-504': 0xb23f,\n  'blake2b-512': 0xb240,\n  'blake2s-8':   0xb241,\n  'blake2s-16':  0xb242,\n  'blake2s-24':  0xb243,\n  'blake2s-32':  0xb244,\n  'blake2s-40':  0xb245,\n  'blake2s-48':  0xb246,\n  'blake2s-56':  0xb247,\n  'blake2s-64':  0xb248,\n  'blake2s-72':  0xb249,\n  'blake2s-80':  0xb24a,\n  'blake2s-88':  0xb24b,\n  'blake2s-96':  0xb24c,\n  'blake2s-104': 0xb24d,\n  'blake2s-112': 0xb24e,\n  'blake2s-120': 0xb24f,\n  'blake2s-128': 0xb250,\n  'blake2s-136': 0xb251,\n  'blake2s-144': 0xb252,\n  'blake2s-152': 0xb253,\n  'blake2s-160': 0xb254,\n  'blake2s-168': 0xb255,\n  'blake2s-176': 0xb256,\n  'blake2s-184': 0xb257,\n  'blake2s-192': 0xb258,\n  'blake2s-200': 0xb259,\n  'blake2s-208': 0xb25a,\n  'blake2s-216': 0xb25b,\n  'blake2s-224': 0xb25c,\n  'blake2s-232': 0xb25d,\n  'blake2s-240': 0xb25e,\n  'blake2s-248': 0xb25f,\n  'blake2s-256': 0xb260,\n  'Skein256-8': 0xb301,\n  'Skein256-16': 0xb302,\n  'Skein256-24': 0xb303,\n  'Skein256-32': 0xb304,\n  'Skein256-40': 0xb305,\n  'Skein256-48': 0xb306,\n  'Skein256-56': 0xb307,\n  'Skein256-64': 0xb308,\n  'Skein256-72': 0xb309,\n  'Skein256-80': 0xb30a,\n  'Skein256-88': 0xb30b,\n  'Skein256-96': 0xb30c,\n  'Skein256-104': 0xb30d,\n  'Skein256-112': 0xb30e,\n  'Skein256-120': 0xb30f,\n  'Skein256-128': 0xb310,\n  'Skein256-136': 0xb311,\n  'Skein256-144': 0xb312,\n  'Skein256-152': 0xb313,\n  'Skein256-160': 0xb314,\n  'Skein256-168': 0xb315,\n  'Skein256-176': 0xb316,\n  'Skein256-184': 0xb317,\n  'Skein256-192': 0xb318,\n  'Skein256-200': 0xb319,\n  'Skein256-208': 0xb31a,\n  'Skein256-216': 0xb31b,\n  'Skein256-224': 0xb31c,\n  'Skein256-232': 0xb31d,\n  'Skein256-240': 0xb31e,\n  'Skein256-248': 0xb31f,\n  'Skein256-256': 0xb320,\n  'Skein512-8': 0xb321,\n  'Skein512-16': 0xb322,\n  'Skein512-24': 0xb323,\n  'Skein512-32': 0xb324,\n  'Skein512-40': 0xb325,\n  'Skein512-48': 0xb326,\n  'Skein512-56': 0xb327,\n  'Skein512-64': 0xb328,\n  'Skein512-72': 0xb329,\n  'Skein512-80': 0xb32a,\n  'Skein512-88': 0xb32b,\n  'Skein512-96': 0xb32c,\n  'Skein512-104': 0xb32d,\n  'Skein512-112': 0xb32e,\n  'Skein512-120': 0xb32f,\n  'Skein512-128': 0xb330,\n  'Skein512-136': 0xb331,\n  'Skein512-144': 0xb332,\n  'Skein512-152': 0xb333,\n  'Skein512-160': 0xb334,\n  'Skein512-168': 0xb335,\n  'Skein512-176': 0xb336,\n  'Skein512-184': 0xb337,\n  'Skein512-192': 0xb338,\n  'Skein512-200': 0xb339,\n  'Skein512-208': 0xb33a,\n  'Skein512-216': 0xb33b,\n  'Skein512-224': 0xb33c,\n  'Skein512-232': 0xb33d,\n  'Skein512-240': 0xb33e,\n  'Skein512-248': 0xb33f,\n  'Skein512-256': 0xb340,\n  'Skein512-264': 0xb341,\n  'Skein512-272': 0xb342,\n  'Skein512-280': 0xb343,\n  'Skein512-288': 0xb344,\n  'Skein512-296': 0xb345,\n  'Skein512-304': 0xb346,\n  'Skein512-312': 0xb347,\n  'Skein512-320': 0xb348,\n  'Skein512-328': 0xb349,\n  'Skein512-336': 0xb34a,\n  'Skein512-344': 0xb34b,\n  'Skein512-352': 0xb34c,\n  'Skein512-360': 0xb34d,\n  'Skein512-368': 0xb34e,\n  'Skein512-376': 0xb34f,\n  'Skein512-384': 0xb350,\n  'Skein512-392': 0xb351,\n  'Skein512-400': 0xb352,\n  'Skein512-408': 0xb353,\n  'Skein512-416': 0xb354,\n  'Skein512-424': 0xb355,\n  'Skein512-432': 0xb356,\n  'Skein512-440': 0xb357,\n  'Skein512-448': 0xb358,\n  'Skein512-456': 0xb359,\n  'Skein512-464': 0xb35a,\n  'Skein512-472': 0xb35b,\n  'Skein512-480': 0xb35c,\n  'Skein512-488': 0xb35d,\n  'Skein512-496': 0xb35e,\n  'Skein512-504': 0xb35f,\n  'Skein512-512': 0xb360,\n  'Skein1024-8': 0xb361,\n  'Skein1024-16': 0xb362,\n  'Skein1024-24': 0xb363,\n  'Skein1024-32': 0xb364,\n  'Skein1024-40': 0xb365,\n  'Skein1024-48': 0xb366,\n  'Skein1024-56': 0xb367,\n  'Skein1024-64': 0xb368,\n  'Skein1024-72': 0xb369,\n  'Skein1024-80': 0xb36a,\n  'Skein1024-88': 0xb36b,\n  'Skein1024-96': 0xb36c,\n  'Skein1024-104': 0xb36d,\n  'Skein1024-112': 0xb36e,\n  'Skein1024-120': 0xb36f,\n  'Skein1024-128': 0xb370,\n  'Skein1024-136': 0xb371,\n  'Skein1024-144': 0xb372,\n  'Skein1024-152': 0xb373,\n  'Skein1024-160': 0xb374,\n  'Skein1024-168': 0xb375,\n  'Skein1024-176': 0xb376,\n  'Skein1024-184': 0xb377,\n  'Skein1024-192': 0xb378,\n  'Skein1024-200': 0xb379,\n  'Skein1024-208': 0xb37a,\n  'Skein1024-216': 0xb37b,\n  'Skein1024-224': 0xb37c,\n  'Skein1024-232': 0xb37d,\n  'Skein1024-240': 0xb37e,\n  'Skein1024-248': 0xb37f,\n  'Skein1024-256': 0xb380,\n  'Skein1024-264': 0xb381,\n  'Skein1024-272': 0xb382,\n  'Skein1024-280': 0xb383,\n  'Skein1024-288': 0xb384,\n  'Skein1024-296': 0xb385,\n  'Skein1024-304': 0xb386,\n  'Skein1024-312': 0xb387,\n  'Skein1024-320': 0xb388,\n  'Skein1024-328': 0xb389,\n  'Skein1024-336': 0xb38a,\n  'Skein1024-344': 0xb38b,\n  'Skein1024-352': 0xb38c,\n  'Skein1024-360': 0xb38d,\n  'Skein1024-368': 0xb38e,\n  'Skein1024-376': 0xb38f,\n  'Skein1024-384': 0xb390,\n  'Skein1024-392': 0xb391,\n  'Skein1024-400': 0xb392,\n  'Skein1024-408': 0xb393,\n  'Skein1024-416': 0xb394,\n  'Skein1024-424': 0xb395,\n  'Skein1024-432': 0xb396,\n  'Skein1024-440': 0xb397,\n  'Skein1024-448': 0xb398,\n  'Skein1024-456': 0xb399,\n  'Skein1024-464': 0xb39a,\n  'Skein1024-472': 0xb39b,\n  'Skein1024-480': 0xb39c,\n  'Skein1024-488': 0xb39d,\n  'Skein1024-496': 0xb39e,\n  'Skein1024-504': 0xb39f,\n  'Skein1024-512': 0xb3a0,\n  'Skein1024-520': 0xb3a1,\n  'Skein1024-528': 0xb3a2,\n  'Skein1024-536': 0xb3a3,\n  'Skein1024-544': 0xb3a4,\n  'Skein1024-552': 0xb3a5,\n  'Skein1024-560': 0xb3a6,\n  'Skein1024-568': 0xb3a7,\n  'Skein1024-576': 0xb3a8,\n  'Skein1024-584': 0xb3a9,\n  'Skein1024-592': 0xb3aa,\n  'Skein1024-600': 0xb3ab,\n  'Skein1024-608': 0xb3ac,\n  'Skein1024-616': 0xb3ad,\n  'Skein1024-624': 0xb3ae,\n  'Skein1024-632': 0xb3af,\n  'Skein1024-640': 0xb3b0,\n  'Skein1024-648': 0xb3b1,\n  'Skein1024-656': 0xb3b2,\n  'Skein1024-664': 0xb3b3,\n  'Skein1024-672': 0xb3b4,\n  'Skein1024-680': 0xb3b5,\n  'Skein1024-688': 0xb3b6,\n  'Skein1024-696': 0xb3b7,\n  'Skein1024-704': 0xb3b8,\n  'Skein1024-712': 0xb3b9,\n  'Skein1024-720': 0xb3ba,\n  'Skein1024-728': 0xb3bb,\n  'Skein1024-736': 0xb3bc,\n  'Skein1024-744': 0xb3bd,\n  'Skein1024-752': 0xb3be,\n  'Skein1024-760': 0xb3bf,\n  'Skein1024-768': 0xb3c0,\n  'Skein1024-776': 0xb3c1,\n  'Skein1024-784': 0xb3c2,\n  'Skein1024-792': 0xb3c3,\n  'Skein1024-800': 0xb3c4,\n  'Skein1024-808': 0xb3c5,\n  'Skein1024-816': 0xb3c6,\n  'Skein1024-824': 0xb3c7,\n  'Skein1024-832': 0xb3c8,\n  'Skein1024-840': 0xb3c9,\n  'Skein1024-848': 0xb3ca,\n  'Skein1024-856': 0xb3cb,\n  'Skein1024-864': 0xb3cc,\n  'Skein1024-872': 0xb3cd,\n  'Skein1024-880': 0xb3ce,\n  'Skein1024-888': 0xb3cf,\n  'Skein1024-896': 0xb3d0,\n  'Skein1024-904': 0xb3d1,\n  'Skein1024-912': 0xb3d2,\n  'Skein1024-920': 0xb3d3,\n  'Skein1024-928': 0xb3d4,\n  'Skein1024-936': 0xb3d5,\n  'Skein1024-944': 0xb3d6,\n  'Skein1024-952': 0xb3d7,\n  'Skein1024-960': 0xb3d8,\n  'Skein1024-968': 0xb3d9,\n  'Skein1024-976': 0xb3da,\n  'Skein1024-984': 0xb3db,\n  'Skein1024-992': 0xb3dc,\n  'Skein1024-1000': 0xb3dd,\n  'Skein1024-1008': 0xb3de,\n  'Skein1024-1016': 0xb3df,\n  'Skein1024-1024': 0xb3e0\n})\n\nexports.codes = Object.freeze({\n  0x0: 'identity',\n\n  // sha family\n  0x11: 'sha1',\n  0x12: 'sha2-256',\n  0x13: 'sha2-512',\n  0x56: 'dbl-sha2-256',\n  0x17: 'sha3-224',\n  0x16: 'sha3-256',\n  0x15: 'sha3-384',\n  0x14: 'sha3-512',\n  0x18: 'shake-128',\n  0x19: 'shake-256',\n  0x1A: 'keccak-224',\n  0x1B: 'keccak-256',\n  0x1C: 'keccak-384',\n  0x1D: 'keccak-512',\n\n  0x22: 'murmur3-128',\n  0x23: 'murmur3-32',\n\n  0xd4: 'md4',\n  0xd5: 'md5',\n\n  // blake2\n  0xb201: 'blake2b-8',\n  0xb202: 'blake2b-16',\n  0xb203: 'blake2b-24',\n  0xb204: 'blake2b-32',\n  0xb205: 'blake2b-40',\n  0xb206: 'blake2b-48',\n  0xb207: 'blake2b-56',\n  0xb208: 'blake2b-64',\n  0xb209: 'blake2b-72',\n  0xb20a: 'blake2b-80',\n  0xb20b: 'blake2b-88',\n  0xb20c: 'blake2b-96',\n  0xb20d: 'blake2b-104',\n  0xb20e: 'blake2b-112',\n  0xb20f: 'blake2b-120',\n  0xb210: 'blake2b-128',\n  0xb211: 'blake2b-136',\n  0xb212: 'blake2b-144',\n  0xb213: 'blake2b-152',\n  0xb214: 'blake2b-160',\n  0xb215: 'blake2b-168',\n  0xb216: 'blake2b-176',\n  0xb217: 'blake2b-184',\n  0xb218: 'blake2b-192',\n  0xb219: 'blake2b-200',\n  0xb21a: 'blake2b-208',\n  0xb21b: 'blake2b-216',\n  0xb21c: 'blake2b-224',\n  0xb21d: 'blake2b-232',\n  0xb21e: 'blake2b-240',\n  0xb21f: 'blake2b-248',\n  0xb220: 'blake2b-256',\n  0xb221: 'blake2b-264',\n  0xb222: 'blake2b-272',\n  0xb223: 'blake2b-280',\n  0xb224: 'blake2b-288',\n  0xb225: 'blake2b-296',\n  0xb226: 'blake2b-304',\n  0xb227: 'blake2b-312',\n  0xb228: 'blake2b-320',\n  0xb229: 'blake2b-328',\n  0xb22a: 'blake2b-336',\n  0xb22b: 'blake2b-344',\n  0xb22c: 'blake2b-352',\n  0xb22d: 'blake2b-360',\n  0xb22e: 'blake2b-368',\n  0xb22f: 'blake2b-376',\n  0xb230: 'blake2b-384',\n  0xb231: 'blake2b-392',\n  0xb232: 'blake2b-400',\n  0xb233: 'blake2b-408',\n  0xb234: 'blake2b-416',\n  0xb235: 'blake2b-424',\n  0xb236: 'blake2b-432',\n  0xb237: 'blake2b-440',\n  0xb238: 'blake2b-448',\n  0xb239: 'blake2b-456',\n  0xb23a: 'blake2b-464',\n  0xb23b: 'blake2b-472',\n  0xb23c: 'blake2b-480',\n  0xb23d: 'blake2b-488',\n  0xb23e: 'blake2b-496',\n  0xb23f: 'blake2b-504',\n  0xb240: 'blake2b-512',\n  0xb241: 'blake2s-8',\n  0xb242: 'blake2s-16',\n  0xb243: 'blake2s-24',\n  0xb244: 'blake2s-32',\n  0xb245: 'blake2s-40',\n  0xb246: 'blake2s-48',\n  0xb247: 'blake2s-56',\n  0xb248: 'blake2s-64',\n  0xb249: 'blake2s-72',\n  0xb24a: 'blake2s-80',\n  0xb24b: 'blake2s-88',\n  0xb24c: 'blake2s-96',\n  0xb24d: 'blake2s-104',\n  0xb24e: 'blake2s-112',\n  0xb24f: 'blake2s-120',\n  0xb250: 'blake2s-128',\n  0xb251: 'blake2s-136',\n  0xb252: 'blake2s-144',\n  0xb253: 'blake2s-152',\n  0xb254: 'blake2s-160',\n  0xb255: 'blake2s-168',\n  0xb256: 'blake2s-176',\n  0xb257: 'blake2s-184',\n  0xb258: 'blake2s-192',\n  0xb259: 'blake2s-200',\n  0xb25a: 'blake2s-208',\n  0xb25b: 'blake2s-216',\n  0xb25c: 'blake2s-224',\n  0xb25d: 'blake2s-232',\n  0xb25e: 'blake2s-240',\n  0xb25f: 'blake2s-248',\n  0xb260: 'blake2s-256',\n\n  // skein\n  0xb301: 'Skein256-8',\n  0xb302: 'Skein256-16',\n  0xb303: 'Skein256-24',\n  0xb304: 'Skein256-32',\n  0xb305: 'Skein256-40',\n  0xb306: 'Skein256-48',\n  0xb307: 'Skein256-56',\n  0xb308: 'Skein256-64',\n  0xb309: 'Skein256-72',\n  0xb30a: 'Skein256-80',\n  0xb30b: 'Skein256-88',\n  0xb30c: 'Skein256-96',\n  0xb30d: 'Skein256-104',\n  0xb30e: 'Skein256-112',\n  0xb30f: 'Skein256-120',\n  0xb310: 'Skein256-128',\n  0xb311: 'Skein256-136',\n  0xb312: 'Skein256-144',\n  0xb313: 'Skein256-152',\n  0xb314: 'Skein256-160',\n  0xb315: 'Skein256-168',\n  0xb316: 'Skein256-176',\n  0xb317: 'Skein256-184',\n  0xb318: 'Skein256-192',\n  0xb319: 'Skein256-200',\n  0xb31a: 'Skein256-208',\n  0xb31b: 'Skein256-216',\n  0xb31c: 'Skein256-224',\n  0xb31d: 'Skein256-232',\n  0xb31e: 'Skein256-240',\n  0xb31f: 'Skein256-248',\n  0xb320: 'Skein256-256',\n  0xb321: 'Skein512-8',\n  0xb322: 'Skein512-16',\n  0xb323: 'Skein512-24',\n  0xb324: 'Skein512-32',\n  0xb325: 'Skein512-40',\n  0xb326: 'Skein512-48',\n  0xb327: 'Skein512-56',\n  0xb328: 'Skein512-64',\n  0xb329: 'Skein512-72',\n  0xb32a: 'Skein512-80',\n  0xb32b: 'Skein512-88',\n  0xb32c: 'Skein512-96',\n  0xb32d: 'Skein512-104',\n  0xb32e: 'Skein512-112',\n  0xb32f: 'Skein512-120',\n  0xb330: 'Skein512-128',\n  0xb331: 'Skein512-136',\n  0xb332: 'Skein512-144',\n  0xb333: 'Skein512-152',\n  0xb334: 'Skein512-160',\n  0xb335: 'Skein512-168',\n  0xb336: 'Skein512-176',\n  0xb337: 'Skein512-184',\n  0xb338: 'Skein512-192',\n  0xb339: 'Skein512-200',\n  0xb33a: 'Skein512-208',\n  0xb33b: 'Skein512-216',\n  0xb33c: 'Skein512-224',\n  0xb33d: 'Skein512-232',\n  0xb33e: 'Skein512-240',\n  0xb33f: 'Skein512-248',\n  0xb340: 'Skein512-256',\n  0xb341: 'Skein512-264',\n  0xb342: 'Skein512-272',\n  0xb343: 'Skein512-280',\n  0xb344: 'Skein512-288',\n  0xb345: 'Skein512-296',\n  0xb346: 'Skein512-304',\n  0xb347: 'Skein512-312',\n  0xb348: 'Skein512-320',\n  0xb349: 'Skein512-328',\n  0xb34a: 'Skein512-336',\n  0xb34b: 'Skein512-344',\n  0xb34c: 'Skein512-352',\n  0xb34d: 'Skein512-360',\n  0xb34e: 'Skein512-368',\n  0xb34f: 'Skein512-376',\n  0xb350: 'Skein512-384',\n  0xb351: 'Skein512-392',\n  0xb352: 'Skein512-400',\n  0xb353: 'Skein512-408',\n  0xb354: 'Skein512-416',\n  0xb355: 'Skein512-424',\n  0xb356: 'Skein512-432',\n  0xb357: 'Skein512-440',\n  0xb358: 'Skein512-448',\n  0xb359: 'Skein512-456',\n  0xb35a: 'Skein512-464',\n  0xb35b: 'Skein512-472',\n  0xb35c: 'Skein512-480',\n  0xb35d: 'Skein512-488',\n  0xb35e: 'Skein512-496',\n  0xb35f: 'Skein512-504',\n  0xb360: 'Skein512-512',\n  0xb361: 'Skein1024-8',\n  0xb362: 'Skein1024-16',\n  0xb363: 'Skein1024-24',\n  0xb364: 'Skein1024-32',\n  0xb365: 'Skein1024-40',\n  0xb366: 'Skein1024-48',\n  0xb367: 'Skein1024-56',\n  0xb368: 'Skein1024-64',\n  0xb369: 'Skein1024-72',\n  0xb36a: 'Skein1024-80',\n  0xb36b: 'Skein1024-88',\n  0xb36c: 'Skein1024-96',\n  0xb36d: 'Skein1024-104',\n  0xb36e: 'Skein1024-112',\n  0xb36f: 'Skein1024-120',\n  0xb370: 'Skein1024-128',\n  0xb371: 'Skein1024-136',\n  0xb372: 'Skein1024-144',\n  0xb373: 'Skein1024-152',\n  0xb374: 'Skein1024-160',\n  0xb375: 'Skein1024-168',\n  0xb376: 'Skein1024-176',\n  0xb377: 'Skein1024-184',\n  0xb378: 'Skein1024-192',\n  0xb379: 'Skein1024-200',\n  0xb37a: 'Skein1024-208',\n  0xb37b: 'Skein1024-216',\n  0xb37c: 'Skein1024-224',\n  0xb37d: 'Skein1024-232',\n  0xb37e: 'Skein1024-240',\n  0xb37f: 'Skein1024-248',\n  0xb380: 'Skein1024-256',\n  0xb381: 'Skein1024-264',\n  0xb382: 'Skein1024-272',\n  0xb383: 'Skein1024-280',\n  0xb384: 'Skein1024-288',\n  0xb385: 'Skein1024-296',\n  0xb386: 'Skein1024-304',\n  0xb387: 'Skein1024-312',\n  0xb388: 'Skein1024-320',\n  0xb389: 'Skein1024-328',\n  0xb38a: 'Skein1024-336',\n  0xb38b: 'Skein1024-344',\n  0xb38c: 'Skein1024-352',\n  0xb38d: 'Skein1024-360',\n  0xb38e: 'Skein1024-368',\n  0xb38f: 'Skein1024-376',\n  0xb390: 'Skein1024-384',\n  0xb391: 'Skein1024-392',\n  0xb392: 'Skein1024-400',\n  0xb393: 'Skein1024-408',\n  0xb394: 'Skein1024-416',\n  0xb395: 'Skein1024-424',\n  0xb396: 'Skein1024-432',\n  0xb397: 'Skein1024-440',\n  0xb398: 'Skein1024-448',\n  0xb399: 'Skein1024-456',\n  0xb39a: 'Skein1024-464',\n  0xb39b: 'Skein1024-472',\n  0xb39c: 'Skein1024-480',\n  0xb39d: 'Skein1024-488',\n  0xb39e: 'Skein1024-496',\n  0xb39f: 'Skein1024-504',\n  0xb3a0: 'Skein1024-512',\n  0xb3a1: 'Skein1024-520',\n  0xb3a2: 'Skein1024-528',\n  0xb3a3: 'Skein1024-536',\n  0xb3a4: 'Skein1024-544',\n  0xb3a5: 'Skein1024-552',\n  0xb3a6: 'Skein1024-560',\n  0xb3a7: 'Skein1024-568',\n  0xb3a8: 'Skein1024-576',\n  0xb3a9: 'Skein1024-584',\n  0xb3aa: 'Skein1024-592',\n  0xb3ab: 'Skein1024-600',\n  0xb3ac: 'Skein1024-608',\n  0xb3ad: 'Skein1024-616',\n  0xb3ae: 'Skein1024-624',\n  0xb3af: 'Skein1024-632',\n  0xb3b0: 'Skein1024-640',\n  0xb3b1: 'Skein1024-648',\n  0xb3b2: 'Skein1024-656',\n  0xb3b3: 'Skein1024-664',\n  0xb3b4: 'Skein1024-672',\n  0xb3b5: 'Skein1024-680',\n  0xb3b6: 'Skein1024-688',\n  0xb3b7: 'Skein1024-696',\n  0xb3b8: 'Skein1024-704',\n  0xb3b9: 'Skein1024-712',\n  0xb3ba: 'Skein1024-720',\n  0xb3bb: 'Skein1024-728',\n  0xb3bc: 'Skein1024-736',\n  0xb3bd: 'Skein1024-744',\n  0xb3be: 'Skein1024-752',\n  0xb3bf: 'Skein1024-760',\n  0xb3c0: 'Skein1024-768',\n  0xb3c1: 'Skein1024-776',\n  0xb3c2: 'Skein1024-784',\n  0xb3c3: 'Skein1024-792',\n  0xb3c4: 'Skein1024-800',\n  0xb3c5: 'Skein1024-808',\n  0xb3c6: 'Skein1024-816',\n  0xb3c7: 'Skein1024-824',\n  0xb3c8: 'Skein1024-832',\n  0xb3c9: 'Skein1024-840',\n  0xb3ca: 'Skein1024-848',\n  0xb3cb: 'Skein1024-856',\n  0xb3cc: 'Skein1024-864',\n  0xb3cd: 'Skein1024-872',\n  0xb3ce: 'Skein1024-880',\n  0xb3cf: 'Skein1024-888',\n  0xb3d0: 'Skein1024-896',\n  0xb3d1: 'Skein1024-904',\n  0xb3d2: 'Skein1024-912',\n  0xb3d3: 'Skein1024-920',\n  0xb3d4: 'Skein1024-928',\n  0xb3d5: 'Skein1024-936',\n  0xb3d6: 'Skein1024-944',\n  0xb3d7: 'Skein1024-952',\n  0xb3d8: 'Skein1024-960',\n  0xb3d9: 'Skein1024-968',\n  0xb3da: 'Skein1024-976',\n  0xb3db: 'Skein1024-984',\n  0xb3dc: 'Skein1024-992',\n  0xb3dd: 'Skein1024-1000',\n  0xb3de: 'Skein1024-1008',\n  0xb3df: 'Skein1024-1016',\n  0xb3e0: 'Skein1024-1024'\n})\n\nexports.defaultLengths = Object.freeze({\n  0x11: 20,\n  0x12: 32,\n  0x13: 64,\n  0x56: 32,\n  0x17: 28,\n  0x16: 32,\n  0x15: 48,\n  0x14: 64,\n  0x18: 32,\n  0x19: 64,\n  0x1A: 28,\n  0x1B: 32,\n  0x1C: 48,\n  0x1D: 64,\n  0x22: 32,\n\n  0xb201: 0x01,\n  0xb202: 0x02,\n  0xb203: 0x03,\n  0xb204: 0x04,\n  0xb205: 0x05,\n  0xb206: 0x06,\n  0xb207: 0x07,\n  0xb208: 0x08,\n  0xb209: 0x09,\n  0xb20a: 0x0a,\n  0xb20b: 0x0b,\n  0xb20c: 0x0c,\n  0xb20d: 0x0d,\n  0xb20e: 0x0e,\n  0xb20f: 0x0f,\n  0xb210: 0x10,\n  0xb211: 0x11,\n  0xb212: 0x12,\n  0xb213: 0x13,\n  0xb214: 0x14,\n  0xb215: 0x15,\n  0xb216: 0x16,\n  0xb217: 0x17,\n  0xb218: 0x18,\n  0xb219: 0x19,\n  0xb21a: 0x1a,\n  0xb21b: 0x1b,\n  0xb21c: 0x1c,\n  0xb21d: 0x1d,\n  0xb21e: 0x1e,\n  0xb21f: 0x1f,\n  0xb220: 0x20,\n  0xb221: 0x21,\n  0xb222: 0x22,\n  0xb223: 0x23,\n  0xb224: 0x24,\n  0xb225: 0x25,\n  0xb226: 0x26,\n  0xb227: 0x27,\n  0xb228: 0x28,\n  0xb229: 0x29,\n  0xb22a: 0x2a,\n  0xb22b: 0x2b,\n  0xb22c: 0x2c,\n  0xb22d: 0x2d,\n  0xb22e: 0x2e,\n  0xb22f: 0x2f,\n  0xb230: 0x30,\n  0xb231: 0x31,\n  0xb232: 0x32,\n  0xb233: 0x33,\n  0xb234: 0x34,\n  0xb235: 0x35,\n  0xb236: 0x36,\n  0xb237: 0x37,\n  0xb238: 0x38,\n  0xb239: 0x39,\n  0xb23a: 0x3a,\n  0xb23b: 0x3b,\n  0xb23c: 0x3c,\n  0xb23d: 0x3d,\n  0xb23e: 0x3e,\n  0xb23f: 0x3f,\n  0xb240: 0x40,\n  0xb241: 0x01,\n  0xb242: 0x02,\n  0xb243: 0x03,\n  0xb244: 0x04,\n  0xb245: 0x05,\n  0xb246: 0x06,\n  0xb247: 0x07,\n  0xb248: 0x08,\n  0xb249: 0x09,\n  0xb24a: 0x0a,\n  0xb24b: 0x0b,\n  0xb24c: 0x0c,\n  0xb24d: 0x0d,\n  0xb24e: 0x0e,\n  0xb24f: 0x0f,\n  0xb250: 0x10,\n  0xb251: 0x11,\n  0xb252: 0x12,\n  0xb253: 0x13,\n  0xb254: 0x14,\n  0xb255: 0x15,\n  0xb256: 0x16,\n  0xb257: 0x17,\n  0xb258: 0x18,\n  0xb259: 0x19,\n  0xb25a: 0x1a,\n  0xb25b: 0x1b,\n  0xb25c: 0x1c,\n  0xb25d: 0x1d,\n  0xb25e: 0x1e,\n  0xb25f: 0x1f,\n  0xb260: 0x20,\n  0xb301: 0x01,\n  0xb302: 0x02,\n  0xb303: 0x03,\n  0xb304: 0x04,\n  0xb305: 0x05,\n  0xb306: 0x06,\n  0xb307: 0x07,\n  0xb308: 0x08,\n  0xb309: 0x09,\n  0xb30a: 0x0a,\n  0xb30b: 0x0b,\n  0xb30c: 0x0c,\n  0xb30d: 0x0d,\n  0xb30e: 0x0e,\n  0xb30f: 0x0f,\n  0xb310: 0x10,\n  0xb311: 0x11,\n  0xb312: 0x12,\n  0xb313: 0x13,\n  0xb314: 0x14,\n  0xb315: 0x15,\n  0xb316: 0x16,\n  0xb317: 0x17,\n  0xb318: 0x18,\n  0xb319: 0x19,\n  0xb31a: 0x1a,\n  0xb31b: 0x1b,\n  0xb31c: 0x1c,\n  0xb31d: 0x1d,\n  0xb31e: 0x1e,\n  0xb31f: 0x1f,\n  0xb320: 0x20,\n  0xb321: 0x01,\n  0xb322: 0x02,\n  0xb323: 0x03,\n  0xb324: 0x04,\n  0xb325: 0x05,\n  0xb326: 0x06,\n  0xb327: 0x07,\n  0xb328: 0x08,\n  0xb329: 0x09,\n  0xb32a: 0x0a,\n  0xb32b: 0x0b,\n  0xb32c: 0x0c,\n  0xb32d: 0x0d,\n  0xb32e: 0x0e,\n  0xb32f: 0x0f,\n  0xb330: 0x10,\n  0xb331: 0x11,\n  0xb332: 0x12,\n  0xb333: 0x13,\n  0xb334: 0x14,\n  0xb335: 0x15,\n  0xb336: 0x16,\n  0xb337: 0x17,\n  0xb338: 0x18,\n  0xb339: 0x19,\n  0xb33a: 0x1a,\n  0xb33b: 0x1b,\n  0xb33c: 0x1c,\n  0xb33d: 0x1d,\n  0xb33e: 0x1e,\n  0xb33f: 0x1f,\n  0xb340: 0x20,\n  0xb341: 0x21,\n  0xb342: 0x22,\n  0xb343: 0x23,\n  0xb344: 0x24,\n  0xb345: 0x25,\n  0xb346: 0x26,\n  0xb347: 0x27,\n  0xb348: 0x28,\n  0xb349: 0x29,\n  0xb34a: 0x2a,\n  0xb34b: 0x2b,\n  0xb34c: 0x2c,\n  0xb34d: 0x2d,\n  0xb34e: 0x2e,\n  0xb34f: 0x2f,\n  0xb350: 0x30,\n  0xb351: 0x31,\n  0xb352: 0x32,\n  0xb353: 0x33,\n  0xb354: 0x34,\n  0xb355: 0x35,\n  0xb356: 0x36,\n  0xb357: 0x37,\n  0xb358: 0x38,\n  0xb359: 0x39,\n  0xb35a: 0x3a,\n  0xb35b: 0x3b,\n  0xb35c: 0x3c,\n  0xb35d: 0x3d,\n  0xb35e: 0x3e,\n  0xb35f: 0x3f,\n  0xb360: 0x40,\n  0xb361: 0x01,\n  0xb362: 0x02,\n  0xb363: 0x03,\n  0xb364: 0x04,\n  0xb365: 0x05,\n  0xb366: 0x06,\n  0xb367: 0x07,\n  0xb368: 0x08,\n  0xb369: 0x09,\n  0xb36a: 0x0a,\n  0xb36b: 0x0b,\n  0xb36c: 0x0c,\n  0xb36d: 0x0d,\n  0xb36e: 0x0e,\n  0xb36f: 0x0f,\n  0xb370: 0x10,\n  0xb371: 0x11,\n  0xb372: 0x12,\n  0xb373: 0x13,\n  0xb374: 0x14,\n  0xb375: 0x15,\n  0xb376: 0x16,\n  0xb377: 0x17,\n  0xb378: 0x18,\n  0xb379: 0x19,\n  0xb37a: 0x1a,\n  0xb37b: 0x1b,\n  0xb37c: 0x1c,\n  0xb37d: 0x1d,\n  0xb37e: 0x1e,\n  0xb37f: 0x1f,\n  0xb380: 0x20,\n  0xb381: 0x21,\n  0xb382: 0x22,\n  0xb383: 0x23,\n  0xb384: 0x24,\n  0xb385: 0x25,\n  0xb386: 0x26,\n  0xb387: 0x27,\n  0xb388: 0x28,\n  0xb389: 0x29,\n  0xb38a: 0x2a,\n  0xb38b: 0x2b,\n  0xb38c: 0x2c,\n  0xb38d: 0x2d,\n  0xb38e: 0x2e,\n  0xb38f: 0x2f,\n  0xb390: 0x30,\n  0xb391: 0x31,\n  0xb392: 0x32,\n  0xb393: 0x33,\n  0xb394: 0x34,\n  0xb395: 0x35,\n  0xb396: 0x36,\n  0xb397: 0x37,\n  0xb398: 0x38,\n  0xb399: 0x39,\n  0xb39a: 0x3a,\n  0xb39b: 0x3b,\n  0xb39c: 0x3c,\n  0xb39d: 0x3d,\n  0xb39e: 0x3e,\n  0xb39f: 0x3f,\n  0xb3a0: 0x40,\n  0xb3a1: 0x41,\n  0xb3a2: 0x42,\n  0xb3a3: 0x43,\n  0xb3a4: 0x44,\n  0xb3a5: 0x45,\n  0xb3a6: 0x46,\n  0xb3a7: 0x47,\n  0xb3a8: 0x48,\n  0xb3a9: 0x49,\n  0xb3aa: 0x4a,\n  0xb3ab: 0x4b,\n  0xb3ac: 0x4c,\n  0xb3ad: 0x4d,\n  0xb3ae: 0x4e,\n  0xb3af: 0x4f,\n  0xb3b0: 0x50,\n  0xb3b1: 0x51,\n  0xb3b2: 0x52,\n  0xb3b3: 0x53,\n  0xb3b4: 0x54,\n  0xb3b5: 0x55,\n  0xb3b6: 0x56,\n  0xb3b7: 0x57,\n  0xb3b8: 0x58,\n  0xb3b9: 0x59,\n  0xb3ba: 0x5a,\n  0xb3bb: 0x5b,\n  0xb3bc: 0x5c,\n  0xb3bd: 0x5d,\n  0xb3be: 0x5e,\n  0xb3bf: 0x5f,\n  0xb3c0: 0x60,\n  0xb3c1: 0x61,\n  0xb3c2: 0x62,\n  0xb3c3: 0x63,\n  0xb3c4: 0x64,\n  0xb3c5: 0x65,\n  0xb3c6: 0x66,\n  0xb3c7: 0x67,\n  0xb3c8: 0x68,\n  0xb3c9: 0x69,\n  0xb3ca: 0x6a,\n  0xb3cb: 0x6b,\n  0xb3cc: 0x6c,\n  0xb3cd: 0x6d,\n  0xb3ce: 0x6e,\n  0xb3cf: 0x6f,\n  0xb3d0: 0x70,\n  0xb3d1: 0x71,\n  0xb3d2: 0x72,\n  0xb3d3: 0x73,\n  0xb3d4: 0x74,\n  0xb3d5: 0x75,\n  0xb3d6: 0x76,\n  0xb3d7: 0x77,\n  0xb3d8: 0x78,\n  0xb3d9: 0x79,\n  0xb3da: 0x7a,\n  0xb3db: 0x7b,\n  0xb3dc: 0x7c,\n  0xb3dd: 0x7d,\n  0xb3de: 0x7e,\n  0xb3df: 0x7f,\n  0xb3e0: 0x80\n})\n","/**\n * Implementation of the [multibase](https://github.com/multiformats/multibase) specification.\n * @module Multibase\n */\n'use strict'\n\nconst { Buffer } = require('buffer')\nconst constants = require('./constants')\n\nexports = module.exports = multibase\nexports.encode = encode\nexports.decode = decode\nexports.isEncoded = isEncoded\nexports.names = Object.freeze(Object.keys(constants.names))\nexports.codes = Object.freeze(Object.keys(constants.codes))\n\nconst errNotSupported = new Error('Unsupported encoding')\n\n/**\n * Create a new buffer with the multibase varint+code.\n *\n * @param {string|number} nameOrCode - The multibase name or code number.\n * @param {Buffer} buf - The data to be prefixed with multibase.\n * @memberof Multibase\n * @returns {Buffer}\n */\nfunction multibase (nameOrCode, buf) {\n  if (!buf) {\n    throw new Error('requires an encoded buffer')\n  }\n  const base = getBase(nameOrCode)\n  const codeBuf = Buffer.from(base.code)\n\n  const name = base.name\n  validEncode(name, buf)\n  return Buffer.concat([codeBuf, buf])\n}\n\n/**\n * Encode data with the specified base and add the multibase prefix.\n *\n * @param {string|number} nameOrCode - The multibase name or code number.\n * @param {Buffer} buf - The data to be encoded.\n * @returns {Buffer}\n * @memberof Multibase\n */\nfunction encode (nameOrCode, buf) {\n  const base = getBase(nameOrCode)\n  const name = base.name\n\n  return multibase(name, Buffer.from(base.encode(buf)))\n}\n\n/**\n * Takes a buffer or string encoded with multibase header, decodes it and\n * returns the decoded buffer\n *\n * @param {Buffer|string} bufOrString\n * @returns {Buffer}\n * @memberof Multibase\n *\n */\nfunction decode (bufOrString) {\n  if (Buffer.isBuffer(bufOrString)) {\n    bufOrString = bufOrString.toString()\n  }\n\n  const code = bufOrString.substring(0, 1)\n  bufOrString = bufOrString.substring(1, bufOrString.length)\n\n  if (typeof bufOrString === 'string') {\n    bufOrString = Buffer.from(bufOrString)\n  }\n\n  const base = getBase(code)\n  return Buffer.from(base.decode(bufOrString.toString()))\n}\n\n/**\n * Is the given data multibase encoded?\n *\n * @param {Buffer|string} bufOrString\n * @returns {boolean}\n * @memberof Multibase\n */\nfunction isEncoded (bufOrString) {\n  if (Buffer.isBuffer(bufOrString)) {\n    bufOrString = bufOrString.toString()\n  }\n\n  // Ensure bufOrString is a string\n  if (Object.prototype.toString.call(bufOrString) !== '[object String]') {\n    return false\n  }\n\n  const code = bufOrString.substring(0, 1)\n  try {\n    const base = getBase(code)\n    return base.name\n  } catch (err) {\n    return false\n  }\n}\n\n/**\n * @param {string} name\n * @param {Buffer} buf\n * @private\n * @returns {undefined}\n */\nfunction validEncode (name, buf) {\n  const base = getBase(name)\n  base.decode(buf.toString())\n}\n\nfunction getBase (nameOrCode) {\n  let base\n\n  if (constants.names[nameOrCode]) {\n    base = constants.names[nameOrCode]\n  } else if (constants.codes[nameOrCode]) {\n    base = constants.codes[nameOrCode]\n  } else {\n    throw errNotSupported\n  }\n\n  if (!base.isImplemented()) {\n    throw new Error('Base ' + nameOrCode + ' is not implemented yet')\n  }\n\n  return base\n}\n","'use strict'\n\nconst Base = require('./base.js')\nconst baseX = require('base-x')\nconst base16 = require('./base16')\nconst base32 = require('./base32')\nconst base64 = require('./base64')\n\n// name, code, implementation, alphabet\nconst constants = [\n  ['base1', '1', '', '1'],\n  ['base2', '0', baseX, '01'],\n  ['base8', '7', baseX, '01234567'],\n  ['base10', '9', baseX, '0123456789'],\n  ['base16', 'f', base16, '0123456789abcdef'],\n  ['base32', 'b', base32, 'abcdefghijklmnopqrstuvwxyz234567'],\n  ['base32pad', 'c', base32, 'abcdefghijklmnopqrstuvwxyz234567='],\n  ['base32hex', 'v', base32, '0123456789abcdefghijklmnopqrstuv'],\n  ['base32hexpad', 't', base32, '0123456789abcdefghijklmnopqrstuv='],\n  ['base32z', 'h', base32, 'ybndrfg8ejkmcpqxot1uwisza345h769'],\n  ['base58flickr', 'Z', baseX, '123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ'],\n  ['base58btc', 'z', baseX, '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'],\n  ['base64', 'm', base64, 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'],\n  ['base64pad', 'M', base64, 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/='],\n  ['base64url', 'u', base64, 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_'],\n  ['base64urlpad', 'U', base64, 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=']\n]\n\nconst names = constants.reduce((prev, tupple) => {\n  prev[tupple[0]] = new Base(tupple[0], tupple[1], tupple[2], tupple[3])\n  return prev\n}, {})\n\nconst codes = constants.reduce((prev, tupple) => {\n  prev[tupple[1]] = names[tupple[0]]\n  return prev\n}, {})\n\nmodule.exports = {\n  names: names,\n  codes: codes\n}\n","'use strict'\n\nclass Base {\n  constructor (name, code, implementation, alphabet) {\n    this.name = name\n    this.code = code\n    this.alphabet = alphabet\n    if (implementation && alphabet) {\n      this.engine = implementation(alphabet)\n    }\n  }\n\n  encode (stringOrBuffer) {\n    return this.engine.encode(stringOrBuffer)\n  }\n\n  decode (stringOrBuffer) {\n    return this.engine.decode(stringOrBuffer)\n  }\n\n  isImplemented () {\n    return this.engine\n  }\n}\n\nmodule.exports = Base\n","'use strict'\nconst { Buffer } = require('buffer')\n\nmodule.exports = function base16 (alphabet) {\n  return {\n    encode (input) {\n      if (typeof input === 'string') {\n        return Buffer.from(input).toString('hex')\n      }\n      return input.toString('hex')\n    },\n    decode (input) {\n      for (const char of input) {\n        if (alphabet.indexOf(char) < 0) {\n          throw new Error('invalid base16 character')\n        }\n      }\n      return Buffer.from(input, 'hex')\n    }\n  }\n}\n","'use strict'\n\nfunction decode (input, alphabet) {\n  input = input.replace(new RegExp('=', 'g'), '')\n  const length = input.length\n\n  let bits = 0\n  let value = 0\n\n  let index = 0\n  const output = new Uint8Array((length * 5 / 8) | 0)\n\n  for (let i = 0; i < length; i++) {\n    value = (value << 5) | alphabet.indexOf(input[i])\n    bits += 5\n\n    if (bits >= 8) {\n      output[index++] = (value >>> (bits - 8)) & 255\n      bits -= 8\n    }\n  }\n\n  return output.buffer\n}\n\nfunction encode (buffer, alphabet) {\n  const length = buffer.byteLength\n  const view = new Uint8Array(buffer)\n  const padding = alphabet.indexOf('=') === alphabet.length - 1\n\n  if (padding) {\n    alphabet = alphabet.substring(0, alphabet.length - 1)\n  }\n\n  let bits = 0\n  let value = 0\n  let output = ''\n\n  for (let i = 0; i < length; i++) {\n    value = (value << 8) | view[i]\n    bits += 8\n\n    while (bits >= 5) {\n      output += alphabet[(value >>> (bits - 5)) & 31]\n      bits -= 5\n    }\n  }\n\n  if (bits > 0) {\n    output += alphabet[(value << (5 - bits)) & 31]\n  }\n\n  if (padding) {\n    while ((output.length % 8) !== 0) {\n      output += '='\n    }\n  }\n\n  return output\n}\n\nmodule.exports = function base32 (alphabet) {\n  return {\n    encode (input) {\n      if (typeof input === 'string') {\n        return encode(Uint8Array.from(input), alphabet)\n      }\n\n      return encode(input, alphabet)\n    },\n    decode (input) {\n      for (const char of input) {\n        if (alphabet.indexOf(char) < 0) {\n          throw new Error('invalid base32 character')\n        }\n      }\n\n      return decode(input, alphabet)\n    }\n  }\n}\n","'use strict'\nconst { Buffer } = require('buffer')\n\nmodule.exports = function base64 (alphabet) {\n  // The alphabet is only used to know:\n  //   1. If padding is enabled (must contain '=')\n  //   2. If the output must be url-safe (must contain '-' and '_')\n  //   3. If the input of the output function is valid\n  // The alphabets from RFC 4648 are always used.\n  const padding = alphabet.indexOf('=') > -1\n  const url = alphabet.indexOf('-') > -1 && alphabet.indexOf('_') > -1\n\n  return {\n    encode (input) {\n      let output = ''\n\n      if (typeof input === 'string') {\n        output = Buffer.from(input).toString('base64')\n      } else {\n        output = input.toString('base64')\n      }\n\n      if (url) {\n        output = output.replace(/\\+/g, '-').replace(/\\//g, '_')\n      }\n\n      const pad = output.indexOf('=')\n      if (pad > 0 && !padding) {\n        output = output.substring(0, pad)\n      }\n\n      return output\n    },\n    decode (input) {\n      for (const char of input) {\n        if (alphabet.indexOf(char) < 0) {\n          throw new Error('invalid base64 character')\n        }\n      }\n\n      return Buffer.from(input, 'base64')\n    }\n  }\n}\n","/**\n * Implementation of the multicodec specification.\n *\n * @module multicodec\n * @example\n * const multicodec = require('multicodec')\n *\n * const prefixedProtobuf = multicodec.addPrefix('protobuf', protobufBuffer)\n * // prefixedProtobuf 0x50...\n *\n */\n'use strict'\n\nconst { Buffer } = require('buffer')\nconst varint = require('varint')\nconst intTable = require('./int-table')\nconst codecNameToCodeVarint = require('./varint-table')\nconst util = require('./util')\n\nexports = module.exports\n\n/**\n * Prefix a buffer with a multicodec-packed.\n *\n * @param {string|number} multicodecStrOrCode\n * @param {Buffer} data\n * @returns {Buffer}\n */\nexports.addPrefix = (multicodecStrOrCode, data) => {\n  let prefix\n\n  if (Buffer.isBuffer(multicodecStrOrCode)) {\n    prefix = util.varintBufferEncode(multicodecStrOrCode)\n  } else {\n    if (codecNameToCodeVarint[multicodecStrOrCode]) {\n      prefix = codecNameToCodeVarint[multicodecStrOrCode]\n    } else {\n      throw new Error('multicodec not recognized')\n    }\n  }\n  return Buffer.concat([prefix, data])\n}\n\n/**\n * Decapsulate the multicodec-packed prefix from the data.\n *\n * @param {Buffer} data\n * @returns {Buffer}\n */\nexports.rmPrefix = (data) => {\n  varint.decode(data)\n  return data.slice(varint.decode.bytes)\n}\n\n/**\n * Get the codec of the prefixed data.\n * @param {Buffer} prefixedData\n * @returns {string}\n */\nexports.getCodec = (prefixedData) => {\n  const code = varint.decode(prefixedData)\n  const codecName = intTable.get(code)\n  if (codecName === undefined) {\n    throw new Error(`Code ${code} not found`)\n  }\n  return codecName\n}\n\n/**\n * Get the name of the codec.\n * @param {number} codec\n * @returns {string}\n */\nexports.getName = (codec) => {\n  return intTable.get(codec)\n}\n\n/**\n * Get the code of the codec\n * @param {string} name\n * @returns {number}\n */\nexports.getNumber = (name) => {\n  const code = codecNameToCodeVarint[name]\n  if (code === undefined) {\n    throw new Error('Codec `' + name + '` not found')\n  }\n  return util.varintBufferDecode(code)[0]\n}\n\n/**\n * Get the code of the prefixed data.\n * @param {Buffer} prefixedData\n * @returns {number}\n */\nexports.getCode = (prefixedData) => {\n  return varint.decode(prefixedData)\n}\n\n/**\n * Get the code as varint of a codec name.\n * @param {string} codecName\n * @returns {Buffer}\n */\nexports.getCodeVarint = (codecName) => {\n  const code = codecNameToCodeVarint[codecName]\n  if (code === undefined) {\n    throw new Error('Codec `' + codecName + '` not found')\n  }\n  return code\n}\n\n/**\n * Get the varint of a code.\n * @param {Number} code\n * @returns {Array.<number>}\n */\nexports.getVarint = (code) => {\n  return varint.encode(code)\n}\n\n// Make the constants top-level constants\nconst constants = require('./constants')\nObject.assign(exports, constants)\n\n// Human friendly names for printing, e.g. in error messages\nexports.print = require('./print')\n","'use strict'\nconst baseTable = require('./base-table.json')\n\n// map for hexString -> codecName\nconst nameTable = new Map()\n\nfor (const encodingName in baseTable) {\n  const code = baseTable[encodingName]\n  nameTable.set(code, encodingName)\n}\n\nmodule.exports = Object.freeze(nameTable)\n","'use strict'\n\nconst baseTable = require('./base-table.json')\nconst varintEncode = require('./util').varintEncode\n\n// map for codecName -> codeVarintBuffer\nconst varintTable = {}\n\nfor (const encodingName in baseTable) {\n  const code = baseTable[encodingName]\n  varintTable[encodingName] = varintEncode(code)\n}\n\nmodule.exports = Object.freeze(varintTable)\n","'use strict'\n\nconst table = require('./base-table.json')\n\n// map for codecConstant -> code\nconst constants = {}\n\nfor (const [name, code] of Object.entries(table)) {\n  constants[name.toUpperCase().replace(/-/g, '_')] = code\n}\n\nmodule.exports = Object.freeze(constants)\n","'use strict'\n\nconst table = require('./base-table.json')\n\n// map for code -> print friendly name\nconst tableByCode = {}\n\nfor (const [name, code] of Object.entries(table)) {\n  if (tableByCode[code] === undefined) tableByCode[code] = name\n}\n\nmodule.exports = Object.freeze(tableByCode)\n","'use strict'\n\nconst mh = require('multihashes')\nconst { Buffer } = require('buffer')\nvar CIDUtil = {\n  /**\n   * Test if the given input is a valid CID object.\n   * Returns an error message if it is not.\n   * Returns undefined if it is a valid CID.\n   *\n   * @param {any} other\n   * @returns {string}\n   */\n  checkCIDComponents: function (other) {\n    if (other == null) {\n      return 'null values are not valid CIDs'\n    }\n\n    if (!(other.version === 0 || other.version === 1)) {\n      return 'Invalid version, must be a number equal to 1 or 0'\n    }\n\n    if (typeof other.codec !== 'string') {\n      return 'codec must be string'\n    }\n\n    if (other.version === 0) {\n      if (other.codec !== 'dag-pb') {\n        return \"codec must be 'dag-pb' for CIDv0\"\n      }\n      if (other.multibaseName !== 'base58btc') {\n        return \"multibaseName must be 'base58btc' for CIDv0\"\n      }\n    }\n\n    if (!Buffer.isBuffer(other.multihash)) {\n      return 'multihash must be a Buffer'\n    }\n\n    try {\n      mh.validate(other.multihash)\n    } catch (err) {\n      let errorMsg = err.message\n      if (!errorMsg) { // Just in case mh.validate() throws an error with empty error message\n        errorMsg = 'Multihash validation failed'\n      }\n      return errorMsg\n    }\n  }\n}\n\nmodule.exports = CIDUtil\n","'use strict';\n\nfunction withIs(Class, { className, symbolName }) {\n    const symbol = Symbol.for(symbolName);\n\n    const ClassIsWrapper = {\n        // The code below assigns the class wrapper to an object to trick\n        // JavaScript engines to show the name of the extended class when\n        // logging an instances.\n        // We are assigning an anonymous class (class wrapper) to the object\n        // with key `className` to keep the correct name.\n        // If this is not supported it falls back to logging `ClassIsWrapper`.\n        [className]: class extends Class {\n            constructor(...args) {\n                super(...args);\n                Object.defineProperty(this, symbol, { value: true });\n            }\n\n            get [Symbol.toStringTag]() {\n                return className;\n            }\n        },\n    }[className];\n\n    ClassIsWrapper[`is${className}`] = (obj) => !!(obj && obj[symbol]);\n\n    return ClassIsWrapper;\n}\n\nfunction withIsProto(Class, { className, symbolName, withoutNew }) {\n    const symbol = Symbol.for(symbolName);\n\n    /* eslint-disable object-shorthand */\n    const ClassIsWrapper = {\n        [className]: function (...args) {\n            if (withoutNew && !(this instanceof ClassIsWrapper)) {\n                return new ClassIsWrapper(...args);\n            }\n\n            const _this = Class.call(this, ...args) || this;\n\n            if (_this && !_this[symbol]) {\n                Object.defineProperty(_this, symbol, { value: true });\n            }\n\n            return _this;\n        },\n    }[className];\n    /* eslint-enable object-shorthand */\n\n    ClassIsWrapper.prototype = Object.create(Class.prototype);\n    ClassIsWrapper.prototype.constructor = ClassIsWrapper;\n\n    Object.defineProperty(ClassIsWrapper.prototype, Symbol.toStringTag, {\n        get() {\n            return className;\n        },\n    });\n\n    ClassIsWrapper[`is${className}`] = (obj) => !!(obj && obj[symbol]);\n\n    return ClassIsWrapper;\n}\n\nmodule.exports = withIs;\nmodule.exports.proto = withIsProto;\n","/*\r\n\tISC License\r\n\r\n\tCopyright (c) 2019, Pierre-Louis Despaigne\r\n\r\n\tPermission to use, copy, modify, and/or distribute this software for any\r\n\tpurpose with or without fee is hereby granted, provided that the above\r\n\tcopyright notice and this permission notice appear in all copies.\r\n\r\n\tTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\r\n\tWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\r\n\tMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\r\n\tANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\r\n\tWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\r\n\tACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\r\n\tOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\r\n*/\r\n\r\nconst CID = require('cids');\r\n\r\n/**\r\n * Take any ipfsHash and convert it to a CID v1 encoded in base32.\r\n * @param {string} ipfsHash a regular ipfs hash either a cid v0 or v1 (v1 will remain unchanged)\r\n * @return {string} the resulting ipfs hash as a cid v1\r\n */\r\nconst cidV0ToV1Base32 = (ipfsHash) => {\r\n\tlet cid = new CID(ipfsHash);\r\n\tif (cid.version === 0) {\r\n\t\tcid = cid.toV1();\r\n\t}\r\n\treturn cid.toString('base32');\r\n}\r\n\r\nexports.cidV0ToV1Base32 = cidV0ToV1Base32;\r\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.namehash = namehash;\n\nvar _labelhash = require(\"./labelhash\");\n\nvar _ethEnsNamehash = require(\"eth-ens-namehash\");\n\nvar sha3 = require('js-sha3').keccak_256;\n\nfunction namehash(inputName) {\n  var node = '';\n\n  for (var i = 0; i < 32; i++) {\n    node += '00';\n  }\n\n  if (inputName) {\n    var labels = inputName.split('.');\n\n    for (var _i = labels.length - 1; _i >= 0; _i--) {\n      var labelSha = void 0;\n\n      if ((0, _labelhash.isEncodedLabelhash)(labels[_i])) {\n        labelSha = (0, _labelhash.decodeLabelhash)(labels[_i]);\n      } else {\n        var normalisedLabel = (0, _ethEnsNamehash.normalize)(labels[_i]);\n        labelSha = sha3(normalisedLabel);\n      }\n\n      node = sha3(new Buffer(node + labelSha, 'hex'));\n    }\n  }\n\n  return '0x' + node;\n}","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getENSContract = getENSContract;\nexports.getResolverContract = getResolverContract;\nexports.getEnsAddress = getEnsAddress;\nObject.defineProperty(exports, \"namehash\", {\n  enumerable: true,\n  get: function get() {\n    return _utils.namehash;\n  }\n});\nObject.defineProperty(exports, \"labelhash\", {\n  enumerable: true,\n  get: function get() {\n    return _utils.labelhash;\n  }\n});\nexports[\"default\"] = void 0;\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _ethers = require(\"ethers\");\n\nvar _addressEncoder = require(\"@ensdomains/address-encoder\");\n\nvar _ENS = require(\"@ensdomains/ens/build/contracts/ENS.json\");\n\nvar _Resolver5 = require(\"@ensdomains/resolver/build/contracts/Resolver.json\");\n\nvar _ReverseRegistrar = require(\"@ensdomains/ens/build/contracts/ReverseRegistrar.json\");\n\nvar _utils = require(\"./utils\");\n\nvar _contents = require(\"./utils/contents\");\n\nvar Provider = _ethers.ethers.providers.Provider;\nvar utils = _ethers.ethers.utils;\n\nfunction getEnsAddress(networkId) {\n  if ([1, 3, 4, 5].includes(parseInt(networkId))) {\n    return '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e';\n  }\n}\n\nfunction getResolverContract(_ref) {\n  var address = _ref.address,\n      provider = _ref.provider;\n  return new _ethers.ethers.Contract(address, _Resolver5.abi, provider);\n}\n\nfunction getENSContract(_ref2) {\n  var address = _ref2.address,\n      provider = _ref2.provider;\n  return new _ethers.ethers.Contract(address, _ENS.abi, provider);\n}\n\nfunction getReverseRegistrarContract(_ref3) {\n  var address = _ref3.address,\n      provider = _ref3.provider;\n  return new _ethers.ethers.Contract(address, _ReverseRegistrar.abi, provider);\n}\n\nfunction getAddrWithResolver(_x) {\n  return _getAddrWithResolver.apply(this, arguments);\n}\n\nfunction _getAddrWithResolver() {\n  _getAddrWithResolver = (0, _asyncToGenerator2[\"default\"])(\n  /*#__PURE__*/\n  _regenerator[\"default\"].mark(function _callee20(_ref4) {\n    var name, key, resolverAddr, provider, nh, _Resolver2, _formatsByName$key, coinType, encoder, addr;\n\n    return _regenerator[\"default\"].wrap(function _callee20$(_context20) {\n      while (1) {\n        switch (_context20.prev = _context20.next) {\n          case 0:\n            name = _ref4.name, key = _ref4.key, resolverAddr = _ref4.resolverAddr, provider = _ref4.provider;\n            nh = (0, _utils.namehash)(name);\n            _context20.prev = 2;\n            _Resolver2 = getResolverContract({\n              address: resolverAddr,\n              provider: provider\n            });\n            _formatsByName$key = _addressEncoder.formatsByName[key], coinType = _formatsByName$key.coinType, encoder = _formatsByName$key.encoder;\n            _context20.next = 7;\n            return _Resolver2['addr(bytes32,uint256)'](nh, coinType);\n\n          case 7:\n            addr = _context20.sent;\n\n            if (!(addr === '0x')) {\n              _context20.next = 10;\n              break;\n            }\n\n            return _context20.abrupt(\"return\", _utils.emptyAddress);\n\n          case 10:\n            return _context20.abrupt(\"return\", encoder(Buffer.from(addr.slice(2), 'hex')));\n\n          case 13:\n            _context20.prev = 13;\n            _context20.t0 = _context20[\"catch\"](2);\n            console.log(_context20.t0);\n            console.warn('Error getting addr on the resolver contract, are you sure the resolver address is a resolver contract?');\n            return _context20.abrupt(\"return\", _utils.emptyAddress);\n\n          case 18:\n          case \"end\":\n            return _context20.stop();\n        }\n      }\n    }, _callee20, null, [[2, 13]]);\n  }));\n  return _getAddrWithResolver.apply(this, arguments);\n}\n\nfunction setAddrWithResolver(_x2) {\n  return _setAddrWithResolver.apply(this, arguments);\n}\n\nfunction _setAddrWithResolver() {\n  _setAddrWithResolver = (0, _asyncToGenerator2[\"default\"])(\n  /*#__PURE__*/\n  _regenerator[\"default\"].mark(function _callee21(_ref5) {\n    var name, key, address, resolverAddr, signer, nh, Resolver, _formatsByName$key2, decoder, coinType, addressAsBytes;\n\n    return _regenerator[\"default\"].wrap(function _callee21$(_context21) {\n      while (1) {\n        switch (_context21.prev = _context21.next) {\n          case 0:\n            name = _ref5.name, key = _ref5.key, address = _ref5.address, resolverAddr = _ref5.resolverAddr, signer = _ref5.signer;\n            nh = (0, _utils.namehash)(name);\n            Resolver = getResolverContract({\n              address: resolverAddr,\n              provider: signer\n            });\n            _formatsByName$key2 = _addressEncoder.formatsByName[key], decoder = _formatsByName$key2.decoder, coinType = _formatsByName$key2.coinType;\n\n            if (!address || address === '') {\n              addressAsBytes = Buffer.from('');\n            } else {\n              addressAsBytes = decoder(address);\n            }\n\n            return _context21.abrupt(\"return\", Resolver['setAddr(bytes32,uint256,bytes)'](nh, coinType, addressAsBytes));\n\n          case 6:\n          case \"end\":\n            return _context21.stop();\n        }\n      }\n    }, _callee21);\n  }));\n  return _setAddrWithResolver.apply(this, arguments);\n}\n\nfunction getContentWithResolver(_x3) {\n  return _getContentWithResolver.apply(this, arguments);\n}\n\nfunction _getContentWithResolver() {\n  _getContentWithResolver = (0, _asyncToGenerator2[\"default\"])(\n  /*#__PURE__*/\n  _regenerator[\"default\"].mark(function _callee22(_ref6) {\n    var name, resolverAddr, provider, nh, _Resolver3, contentHashSignature, isContentHashSupported, _decodeContenthash, protocolType, decoded, error, value, message;\n\n    return _regenerator[\"default\"].wrap(function _callee22$(_context22) {\n      while (1) {\n        switch (_context22.prev = _context22.next) {\n          case 0:\n            name = _ref6.name, resolverAddr = _ref6.resolverAddr, provider = _ref6.provider;\n            nh = (0, _utils.namehash)(name);\n\n            if (!(parseInt(resolverAddr, 16) === 0)) {\n              _context22.next = 4;\n              break;\n            }\n\n            return _context22.abrupt(\"return\", _utils.emptyAddress);\n\n          case 4:\n            _context22.prev = 4;\n            _Resolver3 = getResolverContract({\n              address: resolverAddr,\n              provider: provider\n            });\n            contentHashSignature = utils.solidityKeccak256(['string'], ['contenthash(bytes32)']).slice(0, 10);\n            _context22.next = 9;\n            return _Resolver3.supportsInterface(contentHashSignature);\n\n          case 9:\n            isContentHashSupported = _context22.sent;\n\n            if (!isContentHashSupported) {\n              _context22.next = 25;\n              break;\n            }\n\n            _context22.t0 = _contents.decodeContenthash;\n            _context22.next = 14;\n            return _Resolver3.contenthash(nh);\n\n          case 14:\n            _context22.t1 = _context22.sent;\n            _decodeContenthash = (0, _context22.t0)(_context22.t1);\n            protocolType = _decodeContenthash.protocolType;\n            decoded = _decodeContenthash.decoded;\n            error = _decodeContenthash.error;\n\n            if (!error) {\n              _context22.next = 22;\n              break;\n            }\n\n            console.log('error decoding', error);\n            return _context22.abrupt(\"return\", {\n              value: _utils.emptyAddress,\n              contentType: 'contenthash'\n            });\n\n          case 22:\n            return _context22.abrupt(\"return\", {\n              value: \"\".concat(protocolType, \"://\").concat(decoded),\n              contentType: 'contenthash'\n            });\n\n          case 25:\n            _context22.next = 27;\n            return _Resolver3.content(nh);\n\n          case 27:\n            value = _context22.sent;\n            return _context22.abrupt(\"return\", {\n              value: value,\n              contentType: 'oldcontent'\n            });\n\n          case 29:\n            _context22.next = 36;\n            break;\n\n          case 31:\n            _context22.prev = 31;\n            _context22.t2 = _context22[\"catch\"](4);\n            message = 'Error getting content on the resolver contract, are you sure the resolver address is a resolver contract?';\n            console.warn(message, _context22.t2);\n            return _context22.abrupt(\"return\", {\n              value: message,\n              contentType: 'error'\n            });\n\n          case 36:\n          case \"end\":\n            return _context22.stop();\n        }\n      }\n    }, _callee22, null, [[4, 31]]);\n  }));\n  return _getContentWithResolver.apply(this, arguments);\n}\n\nfunction setContenthashWithResolver(_x4) {\n  return _setContenthashWithResolver.apply(this, arguments);\n}\n\nfunction _setContenthashWithResolver() {\n  _setContenthashWithResolver = (0, _asyncToGenerator2[\"default\"])(\n  /*#__PURE__*/\n  _regenerator[\"default\"].mark(function _callee23(_ref7) {\n    var name, content, resolverAddr, signer, encodedContenthash, Resolver;\n    return _regenerator[\"default\"].wrap(function _callee23$(_context23) {\n      while (1) {\n        switch (_context23.prev = _context23.next) {\n          case 0:\n            name = _ref7.name, content = _ref7.content, resolverAddr = _ref7.resolverAddr, signer = _ref7.signer;\n            encodedContenthash = content;\n\n            if (parseInt(content, 16) !== 0) {\n              encodedContenthash = (0, _contents.encodeContenthash)(content);\n            }\n\n            Resolver = getResolverContract({\n              address: resolverAddr,\n              provider: signer\n            });\n            return _context23.abrupt(\"return\", Resolver.setContenthash((0, _utils.namehash)(name), encodedContenthash));\n\n          case 5:\n          case \"end\":\n            return _context23.stop();\n        }\n      }\n    }, _callee23);\n  }));\n  return _setContenthashWithResolver.apply(this, arguments);\n}\n\nfunction getTextWithResolver(_x5) {\n  return _getTextWithResolver.apply(this, arguments);\n}\n\nfunction _getTextWithResolver() {\n  _getTextWithResolver = (0, _asyncToGenerator2[\"default\"])(\n  /*#__PURE__*/\n  _regenerator[\"default\"].mark(function _callee24(_ref8) {\n    var name, key, resolverAddr, provider, nh, _Resolver4, addr;\n\n    return _regenerator[\"default\"].wrap(function _callee24$(_context24) {\n      while (1) {\n        switch (_context24.prev = _context24.next) {\n          case 0:\n            name = _ref8.name, key = _ref8.key, resolverAddr = _ref8.resolverAddr, provider = _ref8.provider;\n            nh = (0, _utils.namehash)(name);\n\n            if (!(parseInt(resolverAddr, 16) === 0)) {\n              _context24.next = 4;\n              break;\n            }\n\n            return _context24.abrupt(\"return\", '');\n\n          case 4:\n            _context24.prev = 4;\n            _Resolver4 = getResolverContract({\n              address: resolverAddr,\n              provider: provider\n            });\n            _context24.next = 8;\n            return _Resolver4.text(nh, key);\n\n          case 8:\n            addr = _context24.sent;\n            return _context24.abrupt(\"return\", addr);\n\n          case 12:\n            _context24.prev = 12;\n            _context24.t0 = _context24[\"catch\"](4);\n            console.warn('Error getting text record on the resolver contract, are you sure the resolver address is a resolver contract?');\n            return _context24.abrupt(\"return\", '');\n\n          case 16:\n          case \"end\":\n            return _context24.stop();\n        }\n      }\n    }, _callee24, null, [[4, 12]]);\n  }));\n  return _getTextWithResolver.apply(this, arguments);\n}\n\nfunction setTextWithResolver(_x6) {\n  return _setTextWithResolver.apply(this, arguments);\n}\n\nfunction _setTextWithResolver() {\n  _setTextWithResolver = (0, _asyncToGenerator2[\"default\"])(\n  /*#__PURE__*/\n  _regenerator[\"default\"].mark(function _callee25(_ref9) {\n    var name, key, recordValue, resolverAddr, signer, nh;\n    return _regenerator[\"default\"].wrap(function _callee25$(_context25) {\n      while (1) {\n        switch (_context25.prev = _context25.next) {\n          case 0:\n            name = _ref9.name, key = _ref9.key, recordValue = _ref9.recordValue, resolverAddr = _ref9.resolverAddr, signer = _ref9.signer;\n            nh = (0, _utils.namehash)(name);\n            return _context25.abrupt(\"return\", getResolverContract({\n              address: resolverAddr,\n              provider: signer\n            }).setText(nh, key, recordValue));\n\n          case 3:\n          case \"end\":\n            return _context25.stop();\n        }\n      }\n    }, _callee25);\n  }));\n  return _setTextWithResolver.apply(this, arguments);\n}\n\nvar Resolver =\n/*#__PURE__*/\nfunction () {\n  //TODO\n  function Resolver(_ref10) {\n    var address = _ref10.address,\n        ens = _ref10.ens;\n    (0, _classCallCheck2[\"default\"])(this, Resolver);\n    this.address = address;\n    this.ens = ens;\n  }\n\n  (0, _createClass2[\"default\"])(Resolver, [{\n    key: \"name\",\n    value: function name(_name) {\n      return new Name({\n        name: _name,\n        ens: this.ens,\n        provider: this.provider,\n        signer: this.signer,\n        resolver: this.address\n      });\n    }\n  }]);\n  return Resolver;\n}();\n\nvar Name =\n/*#__PURE__*/\nfunction () {\n  function Name(options) {\n    (0, _classCallCheck2[\"default\"])(this, Name);\n    var name = options.name,\n        ens = options.ens,\n        provider = options.provider,\n        signer = options.signer,\n        nh = options.namehash,\n        resolver = options.resolver;\n\n    if (options.namehash) {\n      this.namehash = nh;\n    }\n\n    this.ens = ens;\n    this.ensWithSigner = this.ens.connect(signer);\n    this.name = name;\n    this.namehash = (0, _utils.namehash)(name);\n    this.provider = provider;\n    this.signer = signer;\n    this.resolver = resolver;\n  }\n\n  (0, _createClass2[\"default\"])(Name, [{\n    key: \"getOwner\",\n    value: function () {\n      var _getOwner = (0, _asyncToGenerator2[\"default\"])(\n      /*#__PURE__*/\n      _regenerator[\"default\"].mark(function _callee() {\n        return _regenerator[\"default\"].wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                return _context.abrupt(\"return\", this.ens.owner(this.namehash));\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function getOwner() {\n        return _getOwner.apply(this, arguments);\n      }\n\n      return getOwner;\n    }()\n  }, {\n    key: \"setOwner\",\n    value: function () {\n      var _setOwner = (0, _asyncToGenerator2[\"default\"])(\n      /*#__PURE__*/\n      _regenerator[\"default\"].mark(function _callee2(address) {\n        return _regenerator[\"default\"].wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (address) {\n                  _context2.next = 2;\n                  break;\n                }\n\n                throw new Error('No newOwner address provided!');\n\n              case 2:\n                return _context2.abrupt(\"return\", this.ensWithSigner.setOwner(this.namehash, address));\n\n              case 3:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function setOwner(_x7) {\n        return _setOwner.apply(this, arguments);\n      }\n\n      return setOwner;\n    }()\n  }, {\n    key: \"getResolver\",\n    value: function () {\n      var _getResolver = (0, _asyncToGenerator2[\"default\"])(\n      /*#__PURE__*/\n      _regenerator[\"default\"].mark(function _callee3() {\n        return _regenerator[\"default\"].wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                return _context3.abrupt(\"return\", this.ens.resolver(this.namehash));\n\n              case 1:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function getResolver() {\n        return _getResolver.apply(this, arguments);\n      }\n\n      return getResolver;\n    }()\n  }, {\n    key: \"setResolver\",\n    value: function () {\n      var _setResolver = (0, _asyncToGenerator2[\"default\"])(\n      /*#__PURE__*/\n      _regenerator[\"default\"].mark(function _callee4(address) {\n        return _regenerator[\"default\"].wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                if (address) {\n                  _context4.next = 2;\n                  break;\n                }\n\n                throw new Error('No resolver address provided!');\n\n              case 2:\n                return _context4.abrupt(\"return\", this.ensWithSigner.setResolver(this.namehash, address));\n\n              case 3:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function setResolver(_x8) {\n        return _setResolver.apply(this, arguments);\n      }\n\n      return setResolver;\n    }()\n  }, {\n    key: \"getTTL\",\n    value: function () {\n      var _getTTL = (0, _asyncToGenerator2[\"default\"])(\n      /*#__PURE__*/\n      _regenerator[\"default\"].mark(function _callee5() {\n        return _regenerator[\"default\"].wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                return _context5.abrupt(\"return\", this.ens.ttl(this.namehash));\n\n              case 1:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function getTTL() {\n        return _getTTL.apply(this, arguments);\n      }\n\n      return getTTL;\n    }()\n  }, {\n    key: \"getResolverAddr\",\n    value: function () {\n      var _getResolverAddr = (0, _asyncToGenerator2[\"default\"])(\n      /*#__PURE__*/\n      _regenerator[\"default\"].mark(function _callee6() {\n        return _regenerator[\"default\"].wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                if (!this.resolver) {\n                  _context6.next = 4;\n                  break;\n                }\n\n                return _context6.abrupt(\"return\", this.resolver);\n\n              case 4:\n                return _context6.abrupt(\"return\", this.getResolver());\n\n              case 5:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n\n      function getResolverAddr() {\n        return _getResolverAddr.apply(this, arguments);\n      }\n\n      return getResolverAddr;\n    }()\n  }, {\n    key: \"getAddress\",\n    value: function () {\n      var _getAddress = (0, _asyncToGenerator2[\"default\"])(\n      /*#__PURE__*/\n      _regenerator[\"default\"].mark(function _callee7(coinId) {\n        var resolverAddr, Resolver;\n        return _regenerator[\"default\"].wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                _context7.next = 2;\n                return this.getResolverAddr();\n\n              case 2:\n                resolverAddr = _context7.sent;\n\n                if (!(parseInt(resolverAddr, 16) === 0)) {\n                  _context7.next = 5;\n                  break;\n                }\n\n                return _context7.abrupt(\"return\", _utils.emptyAddress);\n\n              case 5:\n                Resolver = getResolverContract({\n                  address: resolverAddr,\n                  provider: this.provider\n                });\n\n                if (coinId) {\n                  _context7.next = 8;\n                  break;\n                }\n\n                return _context7.abrupt(\"return\", Resolver['addr(bytes32)'](this.namehash));\n\n              case 8:\n                return _context7.abrupt(\"return\", getAddrWithResolver({\n                  name: this.name,\n                  key: coinId,\n                  resolverAddr: resolverAddr,\n                  provider: this.provider\n                }));\n\n              case 9:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this);\n      }));\n\n      function getAddress(_x9) {\n        return _getAddress.apply(this, arguments);\n      }\n\n      return getAddress;\n    }()\n  }, {\n    key: \"setAddress\",\n    value: function () {\n      var _setAddress = (0, _asyncToGenerator2[\"default\"])(\n      /*#__PURE__*/\n      _regenerator[\"default\"].mark(function _callee8(key, address) {\n        var resolverAddr;\n        return _regenerator[\"default\"].wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                if (key) {\n                  _context8.next = 2;\n                  break;\n                }\n\n                throw new Error('No coinId provided');\n\n              case 2:\n                if (address) {\n                  _context8.next = 4;\n                  break;\n                }\n\n                throw new Error('No address provided');\n\n              case 4:\n                _context8.next = 6;\n                return this.getResolverAddr();\n\n              case 6:\n                resolverAddr = _context8.sent;\n                return _context8.abrupt(\"return\", setAddrWithResolver({\n                  name: this.name,\n                  key: key,\n                  address: address,\n                  resolverAddr: resolverAddr,\n                  signer: this.signer\n                }));\n\n              case 8:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8, this);\n      }));\n\n      function setAddress(_x10, _x11) {\n        return _setAddress.apply(this, arguments);\n      }\n\n      return setAddress;\n    }()\n  }, {\n    key: \"getContent\",\n    value: function () {\n      var _getContent = (0, _asyncToGenerator2[\"default\"])(\n      /*#__PURE__*/\n      _regenerator[\"default\"].mark(function _callee9() {\n        var resolverAddr;\n        return _regenerator[\"default\"].wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                _context9.next = 2;\n                return this.getResolverAddr();\n\n              case 2:\n                resolverAddr = _context9.sent;\n                return _context9.abrupt(\"return\", getContentWithResolver({\n                  name: this.name,\n                  resolverAddr: resolverAddr,\n                  provider: this.provider\n                }));\n\n              case 4:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9, this);\n      }));\n\n      function getContent() {\n        return _getContent.apply(this, arguments);\n      }\n\n      return getContent;\n    }()\n  }, {\n    key: \"setContenthash\",\n    value: function () {\n      var _setContenthash = (0, _asyncToGenerator2[\"default\"])(\n      /*#__PURE__*/\n      _regenerator[\"default\"].mark(function _callee10(content) {\n        var resolverAddr;\n        return _regenerator[\"default\"].wrap(function _callee10$(_context10) {\n          while (1) {\n            switch (_context10.prev = _context10.next) {\n              case 0:\n                _context10.next = 2;\n                return this.getResolverAddr();\n\n              case 2:\n                resolverAddr = _context10.sent;\n                console.log(content);\n                return _context10.abrupt(\"return\", setContenthashWithResolver({\n                  name: this.name,\n                  content: content,\n                  resolverAddr: resolverAddr,\n                  signer: this.signer\n                }));\n\n              case 5:\n              case \"end\":\n                return _context10.stop();\n            }\n          }\n        }, _callee10, this);\n      }));\n\n      function setContenthash(_x12) {\n        return _setContenthash.apply(this, arguments);\n      }\n\n      return setContenthash;\n    }()\n  }, {\n    key: \"getText\",\n    value: function () {\n      var _getText = (0, _asyncToGenerator2[\"default\"])(\n      /*#__PURE__*/\n      _regenerator[\"default\"].mark(function _callee11(key) {\n        var resolverAddr;\n        return _regenerator[\"default\"].wrap(function _callee11$(_context11) {\n          while (1) {\n            switch (_context11.prev = _context11.next) {\n              case 0:\n                _context11.next = 2;\n                return this.getResolverAddr();\n\n              case 2:\n                resolverAddr = _context11.sent;\n                return _context11.abrupt(\"return\", getTextWithResolver({\n                  name: this.name,\n                  key: key,\n                  resolverAddr: resolverAddr,\n                  provider: this.provider\n                }));\n\n              case 4:\n              case \"end\":\n                return _context11.stop();\n            }\n          }\n        }, _callee11, this);\n      }));\n\n      function getText(_x13) {\n        return _getText.apply(this, arguments);\n      }\n\n      return getText;\n    }()\n  }, {\n    key: \"setText\",\n    value: function () {\n      var _setText = (0, _asyncToGenerator2[\"default\"])(\n      /*#__PURE__*/\n      _regenerator[\"default\"].mark(function _callee12(key, recordValue) {\n        var resolverAddr;\n        return _regenerator[\"default\"].wrap(function _callee12$(_context12) {\n          while (1) {\n            switch (_context12.prev = _context12.next) {\n              case 0:\n                _context12.next = 2;\n                return this.getResolverAddr();\n\n              case 2:\n                resolverAddr = _context12.sent;\n                return _context12.abrupt(\"return\", setTextWithResolver({\n                  name: this.name,\n                  key: key,\n                  recordValue: recordValue,\n                  resolverAddr: resolverAddr,\n                  signer: this.signer\n                }));\n\n              case 4:\n              case \"end\":\n                return _context12.stop();\n            }\n          }\n        }, _callee12, this);\n      }));\n\n      function setText(_x14, _x15) {\n        return _setText.apply(this, arguments);\n      }\n\n      return setText;\n    }()\n  }, {\n    key: \"setSubnodeOwner\",\n    value: function () {\n      var _setSubnodeOwner = (0, _asyncToGenerator2[\"default\"])(\n      /*#__PURE__*/\n      _regenerator[\"default\"].mark(function _callee13(label, newOwner) {\n        var lh;\n        return _regenerator[\"default\"].wrap(function _callee13$(_context13) {\n          while (1) {\n            switch (_context13.prev = _context13.next) {\n              case 0:\n                lh = (0, _utils.labelhash)(label);\n                return _context13.abrupt(\"return\", this.ensWithSigner.setSubnodeOwner(this.namehash, lh, newOwner));\n\n              case 2:\n              case \"end\":\n                return _context13.stop();\n            }\n          }\n        }, _callee13, this);\n      }));\n\n      function setSubnodeOwner(_x16, _x17) {\n        return _setSubnodeOwner.apply(this, arguments);\n      }\n\n      return setSubnodeOwner;\n    }()\n  }, {\n    key: \"setSubnodeRecord\",\n    value: function () {\n      var _setSubnodeRecord = (0, _asyncToGenerator2[\"default\"])(\n      /*#__PURE__*/\n      _regenerator[\"default\"].mark(function _callee14(label, newOwner, resolver) {\n        var ttl,\n            lh,\n            _args14 = arguments;\n        return _regenerator[\"default\"].wrap(function _callee14$(_context14) {\n          while (1) {\n            switch (_context14.prev = _context14.next) {\n              case 0:\n                ttl = _args14.length > 3 && _args14[3] !== undefined ? _args14[3] : 0;\n                lh = (0, _utils.labelhash)(label);\n                return _context14.abrupt(\"return\", this.ensWithSigner.setSubnodeRecord(this.namehash, lh, newOwner, resolver, ttl));\n\n              case 3:\n              case \"end\":\n                return _context14.stop();\n            }\n          }\n        }, _callee14, this);\n      }));\n\n      function setSubnodeRecord(_x18, _x19, _x20) {\n        return _setSubnodeRecord.apply(this, arguments);\n      }\n\n      return setSubnodeRecord;\n    }()\n  }, {\n    key: \"createSubdomain\",\n    value: function () {\n      var _createSubdomain = (0, _asyncToGenerator2[\"default\"])(\n      /*#__PURE__*/\n      _regenerator[\"default\"].mark(function _callee15(label) {\n        var resolverPromise, ownerPromise, _ref11, _ref12, resolver, owner;\n\n        return _regenerator[\"default\"].wrap(function _callee15$(_context15) {\n          while (1) {\n            switch (_context15.prev = _context15.next) {\n              case 0:\n                resolverPromise = this.getResolver();\n                ownerPromise = this.getOwner();\n                _context15.next = 4;\n                return Promise.all([resolverPromise, ownerPromise]);\n\n              case 4:\n                _ref11 = _context15.sent;\n                _ref12 = (0, _slicedToArray2[\"default\"])(_ref11, 2);\n                resolver = _ref12[0];\n                owner = _ref12[1];\n                return _context15.abrupt(\"return\", this.setSubnodeRecord(label, owner, resolver));\n\n              case 9:\n              case \"end\":\n                return _context15.stop();\n            }\n          }\n        }, _callee15, this);\n      }));\n\n      function createSubdomain(_x21) {\n        return _createSubdomain.apply(this, arguments);\n      }\n\n      return createSubdomain;\n    }()\n  }, {\n    key: \"deleteSubdomain\",\n    value: function () {\n      var _deleteSubdomain = (0, _asyncToGenerator2[\"default\"])(\n      /*#__PURE__*/\n      _regenerator[\"default\"].mark(function _callee16(label) {\n        return _regenerator[\"default\"].wrap(function _callee16$(_context16) {\n          while (1) {\n            switch (_context16.prev = _context16.next) {\n              case 0:\n                return _context16.abrupt(\"return\", this.setSubnodeRecord(label, _utils.emptyAddress, _utils.emptyAddress));\n\n              case 1:\n              case \"end\":\n                return _context16.stop();\n            }\n          }\n        }, _callee16, this);\n      }));\n\n      function deleteSubdomain(_x22) {\n        return _deleteSubdomain.apply(this, arguments);\n      }\n\n      return deleteSubdomain;\n    }()\n  }]);\n  return Name;\n}();\n\nvar ENS =\n/*#__PURE__*/\nfunction () {\n  function ENS(options) {\n    (0, _classCallCheck2[\"default\"])(this, ENS);\n    var networkId = options.networkId,\n        provider = options.provider,\n        ensAddress = options.ensAddress;\n    var ethersProvider;\n\n    if (Provider.isProvider(provider)) {\n      //detect ethersProvider\n      ethersProvider = provider;\n    } else {\n      ethersProvider = new _ethers.ethers.providers.Web3Provider(provider);\n    }\n\n    this.provider = ethersProvider;\n    this.signer = ethersProvider.getSigner();\n    this.ens = getENSContract({\n      address: ensAddress ? ensAddress : registries[networkId],\n      provider: ethersProvider\n    });\n  }\n\n  (0, _createClass2[\"default\"])(ENS, [{\n    key: \"name\",\n    value: function name(_name2) {\n      return new Name({\n        name: _name2,\n        ens: this.ens,\n        provider: this.provider,\n        signer: this.signer\n      });\n    }\n  }, {\n    key: \"resolver\",\n    value: function resolver(address) {\n      return new Resolver({\n        ens: this.ens,\n        provider: this.provider,\n        address: address\n      });\n    }\n  }, {\n    key: \"getName\",\n    value: function () {\n      var _getName = (0, _asyncToGenerator2[\"default\"])(\n      /*#__PURE__*/\n      _regenerator[\"default\"].mark(function _callee17(address) {\n        var reverseNode, resolverAddr;\n        return _regenerator[\"default\"].wrap(function _callee17$(_context17) {\n          while (1) {\n            switch (_context17.prev = _context17.next) {\n              case 0:\n                reverseNode = \"\".concat(address.slice(2), \".addr.reverse\");\n                _context17.next = 3;\n                return this.ens.resolver((0, _utils.namehash)(reverseNode));\n\n              case 3:\n                resolverAddr = _context17.sent;\n                return _context17.abrupt(\"return\", this.getNameWithResolver(address, resolverAddr));\n\n              case 5:\n              case \"end\":\n                return _context17.stop();\n            }\n          }\n        }, _callee17, this);\n      }));\n\n      function getName(_x23) {\n        return _getName.apply(this, arguments);\n      }\n\n      return getName;\n    }()\n  }, {\n    key: \"getNameWithResolver\",\n    value: function () {\n      var _getNameWithResolver = (0, _asyncToGenerator2[\"default\"])(\n      /*#__PURE__*/\n      _regenerator[\"default\"].mark(function _callee18(address, resolverAddr) {\n        var reverseNode, reverseNamehash, _Resolver, name;\n\n        return _regenerator[\"default\"].wrap(function _callee18$(_context18) {\n          while (1) {\n            switch (_context18.prev = _context18.next) {\n              case 0:\n                reverseNode = \"\".concat(address.slice(2), \".addr.reverse\");\n                reverseNamehash = (0, _utils.namehash)(reverseNode);\n\n                if (!(parseInt(resolverAddr, 16) === 0)) {\n                  _context18.next = 4;\n                  break;\n                }\n\n                return _context18.abrupt(\"return\", {\n                  name: null\n                });\n\n              case 4:\n                _context18.prev = 4;\n                _Resolver = getResolverContract({\n                  address: resolverAddr,\n                  provider: this.provider\n                });\n                _context18.next = 8;\n                return _Resolver.name(reverseNamehash);\n\n              case 8:\n                name = _context18.sent;\n                return _context18.abrupt(\"return\", {\n                  name: name\n                });\n\n              case 12:\n                _context18.prev = 12;\n                _context18.t0 = _context18[\"catch\"](4);\n                console.log(\"Error getting name for reverse record of \".concat(address), _context18.t0);\n\n              case 15:\n              case \"end\":\n                return _context18.stop();\n            }\n          }\n        }, _callee18, this, [[4, 12]]);\n      }));\n\n      function getNameWithResolver(_x24, _x25) {\n        return _getNameWithResolver.apply(this, arguments);\n      }\n\n      return getNameWithResolver;\n    }()\n  }, {\n    key: \"setReverseRecord\",\n    value: function () {\n      var _setReverseRecord = (0, _asyncToGenerator2[\"default\"])(\n      /*#__PURE__*/\n      _regenerator[\"default\"].mark(function _callee19(name, overrides) {\n        var reverseRegistrarAddr, reverseRegistrar;\n        return _regenerator[\"default\"].wrap(function _callee19$(_context19) {\n          while (1) {\n            switch (_context19.prev = _context19.next) {\n              case 0:\n                _context19.next = 2;\n                return this.name('addr.reverse').getOwner('addr.reverse');\n\n              case 2:\n                reverseRegistrarAddr = _context19.sent;\n                reverseRegistrar = getReverseRegistrarContract({\n                  address: reverseRegistrarAddr,\n                  provider: this.signer\n                });\n                return _context19.abrupt(\"return\", reverseRegistrar.setName(name));\n\n              case 5:\n              case \"end\":\n                return _context19.stop();\n            }\n          }\n        }, _callee19, this);\n      }));\n\n      function setReverseRecord(_x26, _x27) {\n        return _setReverseRecord.apply(this, arguments);\n      }\n\n      return setReverseRecord;\n    }()\n  }]);\n  return ENS;\n}();\n\nexports[\"default\"] = ENS;","var arrayWithHoles = require(\"./arrayWithHoles\");\n\nvar iterableToArrayLimit = require(\"./iterableToArrayLimit\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray\");\n\nvar nonIterableRest = require(\"./nonIterableRest\");\n\nfunction _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}\n\nmodule.exports = _slicedToArray;","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nmodule.exports = _createClass;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nmodule.exports = _arrayWithHoles;","function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nmodule.exports = _iterableToArrayLimit;","function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableRest;","function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty;","var setPrototypeOf = require(\"./setPrototypeOf\");\n\nvar isNativeReflectConstruct = require(\"./isNativeReflectConstruct\");\n\nfunction _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    module.exports = _construct = Reflect.construct;\n  } else {\n    module.exports = _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n\n  return _construct.apply(null, arguments);\n}\n\nmodule.exports = _construct;","module.exports = require(\"regenerator-runtime\");\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\nmodule.exports = _asyncToGenerator;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","module.exports = {\n    encode: require('./encode.js')\n  , decode: require('./decode.js')\n  , encodingLength: require('./length.js')\n}\n","/*! https://mths.be/punycode v1.4.1 by @mathias */\n;(function(root) {\n\n\t/** Detect free variables */\n\tvar freeExports = typeof exports == 'object' && exports &&\n\t\t!exports.nodeType && exports;\n\tvar freeModule = typeof module == 'object' && module &&\n\t\t!module.nodeType && module;\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (\n\t\tfreeGlobal.global === freeGlobal ||\n\t\tfreeGlobal.window === freeGlobal ||\n\t\tfreeGlobal.self === freeGlobal\n\t) {\n\t\troot = freeGlobal;\n\t}\n\n\t/**\n\t * The `punycode` object.\n\t * @name punycode\n\t * @type Object\n\t */\n\tvar punycode,\n\n\t/** Highest positive signed 32-bit float value */\n\tmaxInt = 2147483647, // aka. 0x7FFFFFFF or 2^31-1\n\n\t/** Bootstring parameters */\n\tbase = 36,\n\ttMin = 1,\n\ttMax = 26,\n\tskew = 38,\n\tdamp = 700,\n\tinitialBias = 72,\n\tinitialN = 128, // 0x80\n\tdelimiter = '-', // '\\x2D'\n\n\t/** Regular expressions */\n\tregexPunycode = /^xn--/,\n\tregexNonASCII = /[^\\x20-\\x7E]/, // unprintable ASCII chars + non-ASCII chars\n\tregexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g, // RFC 3490 separators\n\n\t/** Error messages */\n\terrors = {\n\t\t'overflow': 'Overflow: input needs wider integers to process',\n\t\t'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n\t\t'invalid-input': 'Invalid input'\n\t},\n\n\t/** Convenience shortcuts */\n\tbaseMinusTMin = base - tMin,\n\tfloor = Math.floor,\n\tstringFromCharCode = String.fromCharCode,\n\n\t/** Temporary variable */\n\tkey;\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/**\n\t * A generic error utility function.\n\t * @private\n\t * @param {String} type The error type.\n\t * @returns {Error} Throws a `RangeError` with the applicable error message.\n\t */\n\tfunction error(type) {\n\t\tthrow new RangeError(errors[type]);\n\t}\n\n\t/**\n\t * A generic `Array#map` utility function.\n\t * @private\n\t * @param {Array} array The array to iterate over.\n\t * @param {Function} callback The function that gets called for every array\n\t * item.\n\t * @returns {Array} A new array of values returned by the callback function.\n\t */\n\tfunction map(array, fn) {\n\t\tvar length = array.length;\n\t\tvar result = [];\n\t\twhile (length--) {\n\t\t\tresult[length] = fn(array[length]);\n\t\t}\n\t\treturn result;\n\t}\n\n\t/**\n\t * A simple `Array#map`-like wrapper to work with domain name strings or email\n\t * addresses.\n\t * @private\n\t * @param {String} domain The domain name or email address.\n\t * @param {Function} callback The function that gets called for every\n\t * character.\n\t * @returns {Array} A new string of characters returned by the callback\n\t * function.\n\t */\n\tfunction mapDomain(string, fn) {\n\t\tvar parts = string.split('@');\n\t\tvar result = '';\n\t\tif (parts.length > 1) {\n\t\t\t// In email addresses, only the domain name should be punycoded. Leave\n\t\t\t// the local part (i.e. everything up to `@`) intact.\n\t\t\tresult = parts[0] + '@';\n\t\t\tstring = parts[1];\n\t\t}\n\t\t// Avoid `split(regex)` for IE8 compatibility. See #17.\n\t\tstring = string.replace(regexSeparators, '\\x2E');\n\t\tvar labels = string.split('.');\n\t\tvar encoded = map(labels, fn).join('.');\n\t\treturn result + encoded;\n\t}\n\n\t/**\n\t * Creates an array containing the numeric code points of each Unicode\n\t * character in the string. While JavaScript uses UCS-2 internally,\n\t * this function will convert a pair of surrogate halves (each of which\n\t * UCS-2 exposes as separate characters) into a single code point,\n\t * matching UTF-16.\n\t * @see `punycode.ucs2.encode`\n\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t * @memberOf punycode.ucs2\n\t * @name decode\n\t * @param {String} string The Unicode input string (UCS-2).\n\t * @returns {Array} The new array of code points.\n\t */\n\tfunction ucs2decode(string) {\n\t\tvar output = [],\n\t\t    counter = 0,\n\t\t    length = string.length,\n\t\t    value,\n\t\t    extra;\n\t\twhile (counter < length) {\n\t\t\tvalue = string.charCodeAt(counter++);\n\t\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t\t// high surrogate, and there is a next character\n\t\t\t\textra = string.charCodeAt(counter++);\n\t\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\n\t\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t\t} else {\n\t\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\n\t\t\t\t\t// code unit is the high surrogate of a surrogate pair\n\t\t\t\t\toutput.push(value);\n\t\t\t\t\tcounter--;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toutput.push(value);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t}\n\n\t/**\n\t * Creates a string based on an array of numeric code points.\n\t * @see `punycode.ucs2.decode`\n\t * @memberOf punycode.ucs2\n\t * @name encode\n\t * @param {Array} codePoints The array of numeric code points.\n\t * @returns {String} The new Unicode string (UCS-2).\n\t */\n\tfunction ucs2encode(array) {\n\t\treturn map(array, function(value) {\n\t\t\tvar output = '';\n\t\t\tif (value > 0xFFFF) {\n\t\t\t\tvalue -= 0x10000;\n\t\t\t\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t\t}\n\t\t\toutput += stringFromCharCode(value);\n\t\t\treturn output;\n\t\t}).join('');\n\t}\n\n\t/**\n\t * Converts a basic code point into a digit/integer.\n\t * @see `digitToBasic()`\n\t * @private\n\t * @param {Number} codePoint The basic numeric code point value.\n\t * @returns {Number} The numeric value of a basic code point (for use in\n\t * representing integers) in the range `0` to `base - 1`, or `base` if\n\t * the code point does not represent a value.\n\t */\n\tfunction basicToDigit(codePoint) {\n\t\tif (codePoint - 48 < 10) {\n\t\t\treturn codePoint - 22;\n\t\t}\n\t\tif (codePoint - 65 < 26) {\n\t\t\treturn codePoint - 65;\n\t\t}\n\t\tif (codePoint - 97 < 26) {\n\t\t\treturn codePoint - 97;\n\t\t}\n\t\treturn base;\n\t}\n\n\t/**\n\t * Converts a digit/integer into a basic code point.\n\t * @see `basicToDigit()`\n\t * @private\n\t * @param {Number} digit The numeric value of a basic code point.\n\t * @returns {Number} The basic code point whose value (when used for\n\t * representing integers) is `digit`, which needs to be in the range\n\t * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n\t * used; else, the lowercase form is used. The behavior is undefined\n\t * if `flag` is non-zero and `digit` has no uppercase form.\n\t */\n\tfunction digitToBasic(digit, flag) {\n\t\t//  0..25 map to ASCII a..z or A..Z\n\t\t// 26..35 map to ASCII 0..9\n\t\treturn digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n\t}\n\n\t/**\n\t * Bias adaptation function as per section 3.4 of RFC 3492.\n\t * https://tools.ietf.org/html/rfc3492#section-3.4\n\t * @private\n\t */\n\tfunction adapt(delta, numPoints, firstTime) {\n\t\tvar k = 0;\n\t\tdelta = firstTime ? floor(delta / damp) : delta >> 1;\n\t\tdelta += floor(delta / numPoints);\n\t\tfor (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {\n\t\t\tdelta = floor(delta / baseMinusTMin);\n\t\t}\n\t\treturn floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n\t}\n\n\t/**\n\t * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n\t * symbols.\n\t * @memberOf punycode\n\t * @param {String} input The Punycode string of ASCII-only symbols.\n\t * @returns {String} The resulting string of Unicode symbols.\n\t */\n\tfunction decode(input) {\n\t\t// Don't use UCS-2\n\t\tvar output = [],\n\t\t    inputLength = input.length,\n\t\t    out,\n\t\t    i = 0,\n\t\t    n = initialN,\n\t\t    bias = initialBias,\n\t\t    basic,\n\t\t    j,\n\t\t    index,\n\t\t    oldi,\n\t\t    w,\n\t\t    k,\n\t\t    digit,\n\t\t    t,\n\t\t    /** Cached calculation results */\n\t\t    baseMinusT;\n\n\t\t// Handle the basic code points: let `basic` be the number of input code\n\t\t// points before the last delimiter, or `0` if there is none, then copy\n\t\t// the first basic code points to the output.\n\n\t\tbasic = input.lastIndexOf(delimiter);\n\t\tif (basic < 0) {\n\t\t\tbasic = 0;\n\t\t}\n\n\t\tfor (j = 0; j < basic; ++j) {\n\t\t\t// if it's not a basic code point\n\t\t\tif (input.charCodeAt(j) >= 0x80) {\n\t\t\t\terror('not-basic');\n\t\t\t}\n\t\t\toutput.push(input.charCodeAt(j));\n\t\t}\n\n\t\t// Main decoding loop: start just after the last delimiter if any basic code\n\t\t// points were copied; start at the beginning otherwise.\n\n\t\tfor (index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {\n\n\t\t\t// `index` is the index of the next character to be consumed.\n\t\t\t// Decode a generalized variable-length integer into `delta`,\n\t\t\t// which gets added to `i`. The overflow checking is easier\n\t\t\t// if we increase `i` as we go, then subtract off its starting\n\t\t\t// value at the end to obtain `delta`.\n\t\t\tfor (oldi = i, w = 1, k = base; /* no condition */; k += base) {\n\n\t\t\t\tif (index >= inputLength) {\n\t\t\t\t\terror('invalid-input');\n\t\t\t\t}\n\n\t\t\t\tdigit = basicToDigit(input.charCodeAt(index++));\n\n\t\t\t\tif (digit >= base || digit > floor((maxInt - i) / w)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\ti += digit * w;\n\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\n\t\t\t\tif (digit < t) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tbaseMinusT = base - t;\n\t\t\t\tif (w > floor(maxInt / baseMinusT)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tw *= baseMinusT;\n\n\t\t\t}\n\n\t\t\tout = output.length + 1;\n\t\t\tbias = adapt(i - oldi, out, oldi == 0);\n\n\t\t\t// `i` was supposed to wrap around from `out` to `0`,\n\t\t\t// incrementing `n` each time, so we'll fix that now:\n\t\t\tif (floor(i / out) > maxInt - n) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tn += floor(i / out);\n\t\t\ti %= out;\n\n\t\t\t// Insert `n` at position `i` of the output\n\t\t\toutput.splice(i++, 0, n);\n\n\t\t}\n\n\t\treturn ucs2encode(output);\n\t}\n\n\t/**\n\t * Converts a string of Unicode symbols (e.g. a domain name label) to a\n\t * Punycode string of ASCII-only symbols.\n\t * @memberOf punycode\n\t * @param {String} input The string of Unicode symbols.\n\t * @returns {String} The resulting Punycode string of ASCII-only symbols.\n\t */\n\tfunction encode(input) {\n\t\tvar n,\n\t\t    delta,\n\t\t    handledCPCount,\n\t\t    basicLength,\n\t\t    bias,\n\t\t    j,\n\t\t    m,\n\t\t    q,\n\t\t    k,\n\t\t    t,\n\t\t    currentValue,\n\t\t    output = [],\n\t\t    /** `inputLength` will hold the number of code points in `input`. */\n\t\t    inputLength,\n\t\t    /** Cached calculation results */\n\t\t    handledCPCountPlusOne,\n\t\t    baseMinusT,\n\t\t    qMinusT;\n\n\t\t// Convert the input in UCS-2 to Unicode\n\t\tinput = ucs2decode(input);\n\n\t\t// Cache the length\n\t\tinputLength = input.length;\n\n\t\t// Initialize the state\n\t\tn = initialN;\n\t\tdelta = 0;\n\t\tbias = initialBias;\n\n\t\t// Handle the basic code points\n\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\tcurrentValue = input[j];\n\t\t\tif (currentValue < 0x80) {\n\t\t\t\toutput.push(stringFromCharCode(currentValue));\n\t\t\t}\n\t\t}\n\n\t\thandledCPCount = basicLength = output.length;\n\n\t\t// `handledCPCount` is the number of code points that have been handled;\n\t\t// `basicLength` is the number of basic code points.\n\n\t\t// Finish the basic string - if it is not empty - with a delimiter\n\t\tif (basicLength) {\n\t\t\toutput.push(delimiter);\n\t\t}\n\n\t\t// Main encoding loop:\n\t\twhile (handledCPCount < inputLength) {\n\n\t\t\t// All non-basic code points < n have been handled already. Find the next\n\t\t\t// larger one:\n\t\t\tfor (m = maxInt, j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\t\t\t\tif (currentValue >= n && currentValue < m) {\n\t\t\t\t\tm = currentValue;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n\t\t\t// but guard against overflow\n\t\t\thandledCPCountPlusOne = handledCPCount + 1;\n\t\t\tif (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tdelta += (m - n) * handledCPCountPlusOne;\n\t\t\tn = m;\n\n\t\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\n\t\t\t\tif (currentValue < n && ++delta > maxInt) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tif (currentValue == n) {\n\t\t\t\t\t// Represent delta as a generalized variable-length integer\n\t\t\t\t\tfor (q = delta, k = base; /* no condition */; k += base) {\n\t\t\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\t\t\t\t\t\tif (q < t) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tqMinusT = q - t;\n\t\t\t\t\t\tbaseMinusT = base - t;\n\t\t\t\t\t\toutput.push(\n\t\t\t\t\t\t\tstringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\n\t\t\t\t\t\t);\n\t\t\t\t\t\tq = floor(qMinusT / baseMinusT);\n\t\t\t\t\t}\n\n\t\t\t\t\toutput.push(stringFromCharCode(digitToBasic(q, 0)));\n\t\t\t\t\tbias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\n\t\t\t\t\tdelta = 0;\n\t\t\t\t\t++handledCPCount;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t++delta;\n\t\t\t++n;\n\n\t\t}\n\t\treturn output.join('');\n\t}\n\n\t/**\n\t * Converts a Punycode string representing a domain name or an email address\n\t * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n\t * it doesn't matter if you call it on a string that has already been\n\t * converted to Unicode.\n\t * @memberOf punycode\n\t * @param {String} input The Punycoded domain name or email address to\n\t * convert to Unicode.\n\t * @returns {String} The Unicode representation of the given Punycode\n\t * string.\n\t */\n\tfunction toUnicode(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexPunycode.test(string)\n\t\t\t\t? decode(string.slice(4).toLowerCase())\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/**\n\t * Converts a Unicode string representing a domain name or an email address to\n\t * Punycode. Only the non-ASCII parts of the domain name will be converted,\n\t * i.e. it doesn't matter if you call it with a domain that's already in\n\t * ASCII.\n\t * @memberOf punycode\n\t * @param {String} input The domain name or email address to convert, as a\n\t * Unicode string.\n\t * @returns {String} The Punycode representation of the given domain name or\n\t * email address.\n\t */\n\tfunction toASCII(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexNonASCII.test(string)\n\t\t\t\t? 'xn--' + encode(string)\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/** Define the public API */\n\tpunycode = {\n\t\t/**\n\t\t * A string representing the current Punycode.js version number.\n\t\t * @memberOf punycode\n\t\t * @type String\n\t\t */\n\t\t'version': '1.4.1',\n\t\t/**\n\t\t * An object of methods to convert from JavaScript's internal character\n\t\t * representation (UCS-2) to Unicode code points, and back.\n\t\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t\t * @memberOf punycode\n\t\t * @type Object\n\t\t */\n\t\t'ucs2': {\n\t\t\t'decode': ucs2decode,\n\t\t\t'encode': ucs2encode\n\t\t},\n\t\t'decode': decode,\n\t\t'encode': encode,\n\t\t'toASCII': toASCII,\n\t\t'toUnicode': toUnicode\n\t};\n\n\t/** Expose `punycode` */\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttypeof define == 'function' &&\n\t\ttypeof define.amd == 'object' &&\n\t\tdefine.amd\n\t) {\n\t\tdefine('punycode', function() {\n\t\t\treturn punycode;\n\t\t});\n\t} else if (freeExports && freeModule) {\n\t\tif (module.exports == freeExports) {\n\t\t\t// in Node.js, io.js, or RingoJS v0.8.0+\n\t\t\tfreeModule.exports = punycode;\n\t\t} else {\n\t\t\t// in Narwhal or RingoJS v0.7.0-\n\t\t\tfor (key in punycode) {\n\t\t\t\tpunycode.hasOwnProperty(key) && (freeExports[key] = punycode[key]);\n\t\t\t}\n\t\t}\n\t} else {\n\t\t// in Rhino or a web browser\n\t\troot.punycode = punycode;\n\t}\n\n}(this));\n"],"sourceRoot":""}